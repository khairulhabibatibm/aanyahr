{"version":3,"file":"cropper.component.d.ts","sources":["cropper.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, ElementRef, EventEmitter } from '@angular/core';\nimport Cropper from 'cropperjs';\nexport interface ImageCropperSetting {\n    width: number;\n    height: number;\n}\nexport interface ImageCropperResult {\n    imageData: Cropper.ImageData;\n    cropData: Cropper.CropBoxData;\n    blob?: Blob;\n    dataUrl?: string;\n}\nexport declare class CropperComponent implements OnInit {\n    image: ElementRef;\n    imageUrl: any;\n    settings: ImageCropperSetting;\n    cropbox: Cropper.CropBoxData;\n    loadImageErrorText: string;\n    cropperOptions: any;\n    export: EventEmitter<ImageCropperResult>;\n    ready: EventEmitter<{}>;\n    isLoading: boolean;\n    cropper: Cropper;\n    imageElement: HTMLImageElement;\n    loadError: any;\n    constructor();\n    ngOnInit(): void;\n    /**\n     * Image loaded\n     * @param ev\n     */\n    imageLoaded(ev: Event): void;\n    /**\n     * Image load error\n     * @param event\n     */\n    imageLoadError(event: any): void;\n    /**\n     * Export canvas\n     * @param base64\n     */\n    exportCanvas(base64?: any): void;\n}\n"]}