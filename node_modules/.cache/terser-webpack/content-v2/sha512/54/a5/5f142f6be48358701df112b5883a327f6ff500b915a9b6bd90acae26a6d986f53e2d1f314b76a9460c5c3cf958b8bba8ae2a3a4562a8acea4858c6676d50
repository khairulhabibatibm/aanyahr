{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{EDFS:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return ngx_bootstrap_popover_PopoverDirective}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return ngx_bootstrap_popover_PopoverModule});var core=__webpack_require__(\"fXoL\");class Trigger{constructor(open,close){this.open=open,this.close=close||open}isManual(){return\"manual\"===this.open||\"manual\"===this.close}}const DEFAULT_ALIASES={hover:[\"mouseover\",\"mouseout\"],focus:[\"focusin\",\"focusout\"]};function parseTriggers(triggers,aliases=DEFAULT_ALIASES){const trimmedTriggers=(triggers||\"\").trim();if(0===trimmedTriggers.length)return[];const parsedTriggers=trimmedTriggers.split(/\\s+/).map(trigger=>trigger.split(\":\")).map(triggerPair=>{const alias=aliases[triggerPair[0]]||triggerPair;return new Trigger(alias[0],alias[1])}),manualTriggers=parsedTriggers.filter(triggerPair=>triggerPair.isManual());if(manualTriggers.length>1)throw new Error(\"Triggers parse error: only one manual trigger is allowed\");if(1===manualTriggers.length&&parsedTriggers.length>1)throw new Error(\"Triggers parse error: manual trigger can't be mixed with other triggers\");return parsedTriggers}const win=\"undefined\"!=typeof window&&window||{};let guessedVersion;\"undefined\"==typeof console||console;var common=__webpack_require__(\"ofXK\"),Subject=__webpack_require__(\"XNiG\"),merge=__webpack_require__(\"VRyK\"),fromEvent=__webpack_require__(\"xgIS\"),of=__webpack_require__(\"LRne\"),animationFrame=__webpack_require__(\"eNwd\");function getStyleComputedProperty(element,property){if(1!==element.nodeType)return[];const css=element.ownerDocument.defaultView.getComputedStyle(element,null);return property?css[property]:css}function getParentNode(element){return\"HTML\"===element.nodeName?element:element.parentNode||element.host}function getScrollParent(element){if(!element)return document.body;switch(element.nodeName){case\"HTML\":case\"BODY\":return element.ownerDocument.body;case\"#document\":return element.body}const{overflow:overflow,overflowX:overflowX,overflowY:overflowY}=getStyleComputedProperty(element);return/(auto|scroll|overlay)/.test(String(overflow)+String(overflowY)+String(overflowX))?element:getScrollParent(getParentNode(element))}const isBrowser=\"undefined\"!=typeof window&&\"undefined\"!=typeof document,isIE11=isBrowser&&!(!window.MSInputMethodContext||!document.documentMode),isIE10=isBrowser&&!(!window.MSInputMethodContext||!/MSIE 10/.test(navigator.userAgent));function isIE(version){return 11===version?isIE11:10===version?isIE10:isIE11||isIE10}function getOffsetParent(element){if(!element)return document.documentElement;const noOffsetParent=isIE(10)?document.body:null;let sibling,offsetParent=element.offsetParent||null;for(;offsetParent===noOffsetParent&&element.nextElementSibling&&sibling!==element.nextElementSibling;)sibling=element.nextElementSibling,offsetParent=sibling.offsetParent;const nodeName=offsetParent&&offsetParent.nodeName;return nodeName&&\"BODY\"!==nodeName&&\"HTML\"!==nodeName?-1!==[\"TH\",\"TD\",\"TABLE\"].indexOf(offsetParent.nodeName)&&\"static\"===getStyleComputedProperty(offsetParent,\"position\")?getOffsetParent(offsetParent):offsetParent:sibling?sibling.ownerDocument.documentElement:document.documentElement}function getRoot(node){return null!==node.parentNode?getRoot(node.parentNode):node}function findCommonOffsetParent(element1,element2){if(!(element1&&element1.nodeType&&element2&&element2.nodeType))return document.documentElement;const order=element1.compareDocumentPosition(element2)&Node.DOCUMENT_POSITION_FOLLOWING,start=order?element1:element2,end=order?element2:element1,range=document.createRange();range.setStart(start,0),range.setEnd(end,0);const{commonAncestorContainer:commonAncestorContainer}=range;if(element1!==commonAncestorContainer&&element2!==commonAncestorContainer||start.contains(end))return function(element){const{nodeName:nodeName}=element;return\"BODY\"!==nodeName&&(\"HTML\"===nodeName||getOffsetParent(element.firstElementChild)===element)}(commonAncestorContainer)?commonAncestorContainer:getOffsetParent(commonAncestorContainer);const element1root=getRoot(element1);return element1root.host?findCommonOffsetParent(element1root.host,element2):findCommonOffsetParent(element1,getRoot(element2).host)}function getBordersSize(styles,axis){const sideA=\"x\"===axis?\"Left\":\"Top\",sideB=\"Left\"===sideA?\"Right\":\"Bottom\";return parseFloat(styles[`border${sideA}Width`])+parseFloat(styles[`border${sideB}Width`])}function getSize(axis,body,html,computedStyle){return Math.max(body[\"offset\"+axis],body[\"scroll\"+axis],html[\"client\"+axis],html[\"offset\"+axis],html[\"scroll\"+axis],isIE(10)?parseInt(html[\"offset\"+axis],10)+parseInt(computedStyle[\"margin\"+(\"Height\"===axis?\"Top\":\"Left\")],10)+parseInt(computedStyle[\"margin\"+(\"Height\"===axis?\"Bottom\":\"Right\")],10):0)}function getWindowSizes(document){const body=document.body,html=document.documentElement,computedStyle=isIE(10)&&getComputedStyle(html);return{height:getSize(\"Height\",body,html,computedStyle),width:getSize(\"Width\",body,html,computedStyle)}}function getScroll(element,side=\"top\"){const upperSide=\"top\"===side?\"scrollTop\":\"scrollLeft\",nodeName=element.nodeName;if(\"BODY\"===nodeName||\"HTML\"===nodeName){const html=element.ownerDocument.documentElement;return(element.ownerDocument.scrollingElement||html)[upperSide]}return element[upperSide]}function getClientRect(offsets){return Object.assign(Object.assign({},offsets),{right:offsets.left+offsets.width,bottom:offsets.top+offsets.height})}function getBoundingClientRect(element){let rect={};try{if(isIE(10)){rect=element.getBoundingClientRect();const scrollTop=getScroll(element,\"top\"),scrollLeft=getScroll(element,\"left\");rect.top+=scrollTop,rect.left+=scrollLeft,rect.bottom+=scrollTop,rect.right+=scrollLeft}else rect=element.getBoundingClientRect()}catch(e){return}const result={left:rect.left,top:rect.top,width:rect.right-rect.left,height:rect.bottom-rect.top},sizes=\"HTML\"===element.nodeName?getWindowSizes(element.ownerDocument):{};let horizScrollbar=element.offsetWidth-(sizes.width||element.clientWidth||result.right-result.left),vertScrollbar=element.offsetHeight-(sizes.height||element.clientHeight||result.bottom-result.top);if(horizScrollbar||vertScrollbar){const styles=getStyleComputedProperty(element);horizScrollbar-=getBordersSize(styles,\"x\"),vertScrollbar-=getBordersSize(styles,\"y\"),result.width-=horizScrollbar,result.height-=vertScrollbar}return getClientRect(result)}function getOffsetRectRelativeToArbitraryNode(children,parent,fixedPosition=!1){const isIE10=isIE(10),isHTML=\"HTML\"===parent.nodeName,childrenRect=getBoundingClientRect(children),parentRect=getBoundingClientRect(parent),scrollParent=getScrollParent(children),styles=getStyleComputedProperty(parent),borderTopWidth=parseFloat(styles.borderTopWidth),borderLeftWidth=parseFloat(styles.borderLeftWidth);fixedPosition&&isHTML&&(parentRect.top=Math.max(parentRect.top,0),parentRect.left=Math.max(parentRect.left,0));let offsets=getClientRect({top:childrenRect.top-parentRect.top-borderTopWidth,left:childrenRect.left-parentRect.left-borderLeftWidth,width:childrenRect.width,height:childrenRect.height});if(offsets.marginTop=0,offsets.marginLeft=0,!isIE10&&isHTML){const marginTop=parseFloat(styles.marginTop),marginLeft=parseFloat(styles.marginLeft);offsets.top-=borderTopWidth-marginTop,offsets.bottom-=borderTopWidth-marginTop,offsets.left-=borderLeftWidth-marginLeft,offsets.right-=borderLeftWidth-marginLeft,offsets.marginTop=marginTop,offsets.marginLeft=marginLeft}return(isIE10&&!fixedPosition?parent.contains(scrollParent):parent===scrollParent&&\"BODY\"!==scrollParent.nodeName)&&(offsets=function(rect,element,subtract=!1){const scrollTop=getScroll(element,\"top\"),scrollLeft=getScroll(element,\"left\"),modifier=subtract?-1:1;return rect.top+=scrollTop*modifier,rect.bottom+=scrollTop*modifier,rect.left+=scrollLeft*modifier,rect.right+=scrollLeft*modifier,rect}(offsets,parent)),offsets}function isFixed(element){const nodeName=element.nodeName;return\"BODY\"!==nodeName&&\"HTML\"!==nodeName&&(\"fixed\"===getStyleComputedProperty(element,\"position\")||isFixed(getParentNode(element)))}function getFixedPositionOffsetParent(element){if(!element||!element.parentElement||isIE())return document.documentElement;let el=element.parentElement;for(;el&&\"none\"===getStyleComputedProperty(el,\"transform\");)el=el.parentElement;return el||document.documentElement}function getBoundaries(target,host,padding=0,boundariesElement,fixedPosition=!1){let boundaries={top:0,left:0};const offsetParent=fixedPosition?getFixedPositionOffsetParent(target):findCommonOffsetParent(target,host);if(\"viewport\"===boundariesElement)boundaries=function(element,excludeScroll=!1){const html=element.ownerDocument.documentElement,relativeOffset=getOffsetRectRelativeToArbitraryNode(element,html),width=Math.max(html.clientWidth,window.innerWidth||0),height=Math.max(html.clientHeight,window.innerHeight||0),scrollTop=excludeScroll?0:getScroll(html),scrollLeft=excludeScroll?0:getScroll(html,\"left\");return getClientRect({top:scrollTop-Number(relativeOffset.top)+Number(relativeOffset.marginTop),left:scrollLeft-Number(relativeOffset.left)+Number(relativeOffset.marginLeft),width:width,height:height})}(offsetParent,fixedPosition);else{let boundariesNode;\"scrollParent\"===boundariesElement?(boundariesNode=getScrollParent(getParentNode(host)),\"BODY\"===boundariesNode.nodeName&&(boundariesNode=target.ownerDocument.documentElement)):boundariesNode=\"window\"===boundariesElement?target.ownerDocument.documentElement:boundariesElement;const offsets=getOffsetRectRelativeToArbitraryNode(boundariesNode,offsetParent,fixedPosition);if(\"HTML\"!==boundariesNode.nodeName||isFixed(offsetParent))boundaries=offsets;else{const{height:height,width:width}=getWindowSizes(target.ownerDocument);boundaries.top+=offsets.top-offsets.marginTop,boundaries.bottom=Number(height)+Number(offsets.top),boundaries.left+=offsets.left-offsets.marginLeft,boundaries.right=Number(width)+Number(offsets.left)}}return boundaries.left+=padding,boundaries.top+=padding,boundaries.right-=padding,boundaries.bottom-=padding,boundaries}function getArea({width:width,height:height}){return width*height}function computeAutoPlacement(placement,refRect,target,host,allowedPositions=[\"top\",\"bottom\",\"right\",\"left\"],boundariesElement=\"viewport\",padding=0){if(-1===placement.indexOf(\"auto\"))return placement;const boundaries=getBoundaries(target,host,padding,boundariesElement),rects={top:{width:boundaries.width,height:refRect.top-boundaries.top},right:{width:boundaries.right-refRect.right,height:boundaries.height},bottom:{width:boundaries.width,height:boundaries.bottom-refRect.bottom},left:{width:refRect.left-boundaries.left,height:boundaries.height}},sortedAreas=Object.keys(rects).map(key=>Object.assign(Object.assign({key:key},rects[key]),{area:getArea(rects[key])})).sort((a,b)=>b.area-a.area);let filteredAreas=sortedAreas.filter(({width:width,height:height})=>width>=target.clientWidth&&height>=target.clientHeight);filteredAreas=filteredAreas.filter(position=>allowedPositions.some(allowedPosition=>allowedPosition===position.key));const computedPlacement=filteredAreas.length>0?filteredAreas[0].key:sortedAreas[0].key,variation=placement.split(\" \")[1];return target.className=target.className.replace(/bs-tooltip-auto/g,\"bs-tooltip-\"+computedPlacement),computedPlacement+(variation?\"-\"+variation:\"\")}function getOuterSizes(element){const styles=element.ownerDocument.defaultView.getComputedStyle(element),x=parseFloat(styles.marginTop||0)+parseFloat(styles.marginBottom||0),y=parseFloat(styles.marginLeft||0)+parseFloat(styles.marginRight||0);return{width:Number(element.offsetWidth)+y,height:Number(element.offsetHeight)+x}}function getReferenceOffsets(target,host,fixedPosition=null){return getOffsetRectRelativeToArbitraryNode(host,fixedPosition?getFixedPositionOffsetParent(target):findCommonOffsetParent(target,host),fixedPosition)}function getTargetOffsets(target,hostOffsets,position){const placement=position.split(\" \")[0],targetRect=getOuterSizes(target),targetOffsets={width:targetRect.width,height:targetRect.height},isHoriz=-1!==[\"right\",\"left\"].indexOf(placement),mainSide=isHoriz?\"top\":\"left\",secondarySide=isHoriz?\"left\":\"top\",measurement=isHoriz?\"height\":\"width\",secondaryMeasurement=isHoriz?\"width\":\"height\";return targetOffsets[mainSide]=hostOffsets[mainSide]+hostOffsets[measurement]/2-targetRect[measurement]/2,targetOffsets[secondarySide]=placement===secondarySide?hostOffsets[secondarySide]-targetRect[secondaryMeasurement]:hostOffsets[function(placement){const hash={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};return placement.replace(/left|right|bottom|top/g,matched=>hash[matched])}(secondarySide)],targetOffsets}function isModifierEnabled(options,modifierName){return options&&options.modifiers&&options.modifiers[modifierName]&&options.modifiers[modifierName].enabled}function setStyles(element,styles,renderer){Object.keys(styles).forEach(prop=>{let unit=\"\";var n;-1!==[\"width\",\"height\",\"top\",\"right\",\"bottom\",\"left\"].indexOf(prop)&&\"\"!==(n=styles[prop])&&!isNaN(parseFloat(n))&&isFinite(n)&&(unit=\"px\"),renderer?renderer.setStyle(element,prop,`${String(styles[prop])}${unit}`):element.style[prop]=String(styles[prop])+unit})}function arrow(data){let targetOffsets=data.offsets.target;const arrowElement=data.instance.target.querySelector(\".arrow\");if(!arrowElement)return data;const isVertical=-1!==[\"left\",\"right\"].indexOf(data.placement.split(\" \")[0]),len=isVertical?\"height\":\"width\",sideCapitalized=isVertical?\"Top\":\"Left\",side=sideCapitalized.toLowerCase(),altSide=isVertical?\"left\":\"top\",opSide=isVertical?\"bottom\":\"right\",arrowElementSize=getOuterSizes(arrowElement)[len],placementVariation=data.placement.split(\" \")[1];data.offsets.host[opSide]-arrowElementSize<targetOffsets[side]&&(targetOffsets[side]-=targetOffsets[side]-(data.offsets.host[opSide]-arrowElementSize)),Number(data.offsets.host[side])+Number(arrowElementSize)>targetOffsets[opSide]&&(targetOffsets[side]+=Number(data.offsets.host[side])+Number(arrowElementSize)-Number(targetOffsets[opSide])),targetOffsets=getClientRect(targetOffsets);const css=getStyleComputedProperty(data.instance.target),targetMarginSide=parseFloat(css[\"margin\"+sideCapitalized]),targetBorderSide=parseFloat(css[`border${sideCapitalized}Width`]);let center;if(placementVariation){const targetBorderRadius=parseFloat(css.borderRadius),targetSideArrowOffset=Number(targetMarginSide+targetBorderSide+targetBorderRadius);center=side===placementVariation?Number(data.offsets.host[side])+targetSideArrowOffset:Number(data.offsets.host[side])+Number(data.offsets.host[len]-targetSideArrowOffset)}else center=Number(data.offsets.host[side])+Number(data.offsets.host[len]/2-arrowElementSize/2);let sideValue=center-targetOffsets[side]-targetMarginSide-targetBorderSide;return sideValue=Math.max(Math.min(targetOffsets[len]-arrowElementSize,sideValue),0),data.offsets.arrow={[side]:Math.round(sideValue),[altSide]:\"\"},data.instance.arrow=arrowElement,data}function flip(data){if(data.offsets.target=getClientRect(data.offsets.target),!isModifierEnabled(data.options,\"flip\"))return data.offsets.target=Object.assign(Object.assign({},data.offsets.target),getTargetOffsets(data.instance.target,data.offsets.host,data.placement)),data;const boundaries=getBoundaries(data.instance.target,data.instance.host,0,\"viewport\",!1);let placement=data.placement.split(\" \")[0],variation=data.placement.split(\" \")[1]||\"\";const adaptivePosition=computeAutoPlacement(\"auto\",data.offsets.host,data.instance.target,data.instance.host,data.options.allowedPositions),flipOrder=[placement,adaptivePosition];return flipOrder.forEach((step,index)=>{if(placement!==step||flipOrder.length===index+1)return data;placement=data.placement.split(\" \")[0];const overlapsRef=\"left\"===placement&&Math.floor(data.offsets.target.right)>Math.floor(data.offsets.host.left)||\"right\"===placement&&Math.floor(data.offsets.target.left)<Math.floor(data.offsets.host.right)||\"top\"===placement&&Math.floor(data.offsets.target.bottom)>Math.floor(data.offsets.host.top)||\"bottom\"===placement&&Math.floor(data.offsets.target.top)<Math.floor(data.offsets.host.bottom),overflowsLeft=Math.floor(data.offsets.target.left)<Math.floor(boundaries.left),overflowsRight=Math.floor(data.offsets.target.right)>Math.floor(boundaries.right),overflowsTop=Math.floor(data.offsets.target.top)<Math.floor(boundaries.top),overflowsBottom=Math.floor(data.offsets.target.bottom)>Math.floor(boundaries.bottom),overflowsBoundaries=\"left\"===placement&&overflowsLeft||\"right\"===placement&&overflowsRight||\"top\"===placement&&overflowsTop||\"bottom\"===placement&&overflowsBottom,isVertical=-1!==[\"top\",\"bottom\"].indexOf(placement),flippedVariation=isVertical&&\"left\"===variation&&overflowsLeft||isVertical&&\"right\"===variation&&overflowsRight||!isVertical&&\"left\"===variation&&overflowsTop||!isVertical&&\"right\"===variation&&overflowsBottom;(overlapsRef||overflowsBoundaries||flippedVariation)&&((overlapsRef||overflowsBoundaries)&&(placement=flipOrder[index+1]),flippedVariation&&(variation=function(variation){return\"right\"===variation?\"left\":\"left\"===variation?\"right\":variation}(variation)),data.placement=placement+(variation?\" \"+variation:\"\"),data.offsets.target=Object.assign(Object.assign({},data.offsets.target),getTargetOffsets(data.instance.target,data.offsets.host,data.placement)))}),data}function preventOverflow(data){if(!isModifierEnabled(data.options,\"preventOverflow\"))return data;const transformProp=\"transform\",targetStyles=data.instance.target.style,{top:top,left:left,[transformProp]:transform}=targetStyles;targetStyles.top=\"\",targetStyles.left=\"\",targetStyles[transformProp]=\"\";const boundaries=getBoundaries(data.instance.target,data.instance.host,0,\"scrollParent\",!1);targetStyles.top=top,targetStyles.left=left,targetStyles[transformProp]=transform;const check={primary(placement){let value=data.offsets.target[placement];return data.offsets.target[placement]<boundaries[placement]&&(value=Math.max(data.offsets.target[placement],boundaries[placement])),{[placement]:value}},secondary(placement){const mainSide=\"right\"===placement?\"left\":\"top\";let value=data.offsets.target[mainSide];return data.offsets.target[placement]>boundaries[placement]&&(value=Math.min(data.offsets.target[mainSide],boundaries[placement]-(\"right\"===placement?data.offsets.target.width:data.offsets.target.height))),{[mainSide]:value}}};let side;return[\"left\",\"right\",\"top\",\"bottom\"].forEach(placement=>{side=-1!==[\"left\",\"top\"].indexOf(placement)?\"primary\":\"secondary\",data.offsets.target=Object.assign(Object.assign({},data.offsets.target),check[side](placement))}),data}function shift(data){const placement=data.placement,basePlacement=placement.split(\" \")[0],shiftVariation=placement.split(\" \")[1];if(shiftVariation){const{host:host,target:target}=data.offsets,isVertical=-1!==[\"bottom\",\"top\"].indexOf(basePlacement),side=isVertical?\"left\":\"top\",measurement=isVertical?\"width\":\"height\",shiftOffsets={start:{[side]:host[side]},end:{[side]:host[side]+host[measurement]-target[measurement]}};data.offsets.target=Object.assign(Object.assign({},target),{[side]:side===shiftVariation?shiftOffsets.start[side]:shiftOffsets.end[side]})}return data}const positionService=new class{position(hostElement,targetElement,round=!0){return this.offset(hostElement,targetElement,!1)}offset(hostElement,targetElement,round=!0){return getReferenceOffsets(targetElement,hostElement)}positionElements(hostElement,targetElement,position,appendToBody,options){return[flip,shift,preventOverflow,arrow].reduce((modifiedData,modifier)=>modifier(modifiedData),function(targetElement,hostElement,position,options){const hostElPosition=getReferenceOffsets(targetElement,hostElement);position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)||position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)||(position=\"auto\");const placementAuto=!!position.match(/auto/g);let placement=position.match(/auto\\s(left|right|top|bottom)/)?position.split(\" \")[1]||\"auto\":position;const matches=placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);matches&&(placement=matches[1]+(matches[2]?\" \"+matches[2]:\"\")),-1!==[\"left right\",\"right left\",\"top bottom\",\"bottom top\"].indexOf(placement)&&(placement=\"auto\");const targetOffset=getTargetOffsets(targetElement,hostElPosition,placement);return placement=computeAutoPlacement(placement,hostElPosition,targetElement,hostElement,options?options.allowedPositions:void 0),{options:options,instance:{target:targetElement,host:hostElement,arrow:null},offsets:{target:targetOffset,host:hostElPosition,arrow:null},positionFixed:!1,placement:placement,placementAuto:placementAuto}}(targetElement,hostElement,position,options))}};let ngx_bootstrap_positioning_PositioningService=(()=>{class PositioningService{constructor(ngZone,rendererFactory,platformId){this.update$$=new Subject.a,this.positionElements=new Map,this.isDisabled=!1,Object(common.z)(platformId)&&ngZone.runOutsideAngular(()=>{this.triggerEvent$=Object(merge.a)(Object(fromEvent.a)(window,\"scroll\",{passive:!0}),Object(fromEvent.a)(window,\"resize\",{passive:!0}),Object(of.a)(0,animationFrame.a),this.update$$),this.triggerEvent$.subscribe(()=>{this.isDisabled||this.positionElements.forEach(positionElement=>{!function(hostElement,targetElement,placement,appendToBody,options,renderer){const data=positionService.positionElements(hostElement,targetElement,placement,appendToBody,options),offsets=function(data){return{width:data.offsets.target.width,height:data.offsets.target.height,left:Math.floor(data.offsets.target.left),top:Math.round(data.offsets.target.top),bottom:Math.round(data.offsets.target.bottom),right:Math.floor(data.offsets.target.right)}}(data);setStyles(targetElement,{\"will-change\":\"transform\",top:\"0px\",left:\"0px\",transform:`translate3d(${offsets.left}px, ${offsets.top}px, 0px)`},renderer),data.instance.arrow&&setStyles(data.instance.arrow,data.offsets.arrow,renderer),function(data,renderer){const target=data.instance.target;let containerClass=target.className;data.placementAuto&&(containerClass=containerClass.replace(/bs-popover-auto/g,\"bs-popover-\"+data.placement),containerClass=containerClass.replace(/bs-tooltip-auto/g,\"bs-tooltip-\"+data.placement),containerClass=containerClass.replace(/\\sauto/g,\" \"+data.placement),-1!==containerClass.indexOf(\"popover\")&&-1===containerClass.indexOf(\"popover-auto\")&&(containerClass+=\" popover-auto\"),-1!==containerClass.indexOf(\"tooltip\")&&-1===containerClass.indexOf(\"tooltip-auto\")&&(containerClass+=\" tooltip-auto\")),containerClass=containerClass.replace(/left|right|top|bottom/g,\"\"+data.placement.split(\" \")[0]),renderer?renderer.setAttribute(target,\"class\",containerClass):target.className=containerClass}(data,renderer)}(_getHtmlElement(positionElement.target),_getHtmlElement(positionElement.element),positionElement.attachment,positionElement.appendToBody,this.options,rendererFactory.createRenderer(null,null))})})})}position(options){this.addPositionElement(options)}get event$(){return this.triggerEvent$}disable(){this.isDisabled=!0}enable(){this.isDisabled=!1}addPositionElement(options){this.positionElements.set(_getHtmlElement(options.element),options)}calcPosition(){this.update$$.next()}deletePositionElement(elRef){this.positionElements.delete(_getHtmlElement(elRef))}setOptions(options){this.options=options}}return PositioningService.ɵfac=function(t){return new(t||PositioningService)(core.Yb(core.A),core.Yb(core.F),core.Yb(core.C))},PositioningService.ɵprov=core.Hb({token:PositioningService,factory:PositioningService.ɵfac}),PositioningService})();function _getHtmlElement(element){return\"string\"==typeof element?document.querySelector(element):element instanceof core.l?element.nativeElement:element}class ContentRef{constructor(nodes,viewRef,componentRef){this.nodes=nodes,this.viewRef=viewRef,this.componentRef=componentRef}}class ngx_bootstrap_component_loader_ComponentLoader{constructor(_viewContainerRef,_renderer,_elementRef,_injector,_componentFactoryResolver,_ngZone,_applicationRef,_posService){this._viewContainerRef=_viewContainerRef,this._renderer=_renderer,this._elementRef=_elementRef,this._injector=_injector,this._componentFactoryResolver=_componentFactoryResolver,this._ngZone=_ngZone,this._applicationRef=_applicationRef,this._posService=_posService,this.onBeforeShow=new core.n,this.onShown=new core.n,this.onBeforeHide=new core.n,this.onHidden=new core.n,this._providers=[],this._isHiding=!1,this.containerDefaultSelector=\"body\",this._listenOpts={},this._globalListener=Function.prototype}get isShown(){return!this._isHiding&&!!this._componentRef}attach(compType){return this._componentFactory=this._componentFactoryResolver.resolveComponentFactory(compType),this}to(container){return this.container=container||this.container,this}position(opts){return this.attachment=opts.attachment||this.attachment,this._elementRef=opts.target||this._elementRef,this}provide(provider){return this._providers.push(provider),this}show(opts={}){if(this._subscribePositioning(),this._innerComponent=null,!this._componentRef){this.onBeforeShow.emit(),this._contentRef=this._getContentRef(opts.content,opts.context,opts.initialState);const injector=core.s.create({providers:this._providers,parent:this._injector});this._componentRef=this._componentFactory.create(injector,this._contentRef.nodes),this._applicationRef.attachView(this._componentRef.hostView),this.instance=this._componentRef.instance,Object.assign(this._componentRef.instance,opts),this.container instanceof core.l&&this.container.nativeElement.appendChild(this._componentRef.location.nativeElement),\"string\"==typeof this.container&&\"undefined\"!=typeof document&&(document.querySelector(this.container)||document.querySelector(this.containerDefaultSelector)).appendChild(this._componentRef.location.nativeElement),!this.container&&this._elementRef&&this._elementRef.nativeElement.parentElement&&this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement),this._contentRef.componentRef&&(this._innerComponent=this._contentRef.componentRef.instance,this._contentRef.componentRef.changeDetectorRef.markForCheck(),this._contentRef.componentRef.changeDetectorRef.detectChanges()),this._componentRef.changeDetectorRef.markForCheck(),this._componentRef.changeDetectorRef.detectChanges(),this.onShown.emit(opts.id?{id:opts.id}:this._componentRef.instance)}return this._registerOutsideClick(),this._componentRef}hide(id){if(!this._componentRef)return this;this._posService.deletePositionElement(this._componentRef.location),this.onBeforeHide.emit(this._componentRef.instance);const componentEl=this._componentRef.location.nativeElement;return componentEl.parentNode.removeChild(componentEl),this._contentRef.componentRef&&this._contentRef.componentRef.destroy(),this._viewContainerRef&&this._contentRef.viewRef&&this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef)),this._contentRef.viewRef&&this._contentRef.viewRef.destroy(),this._contentRef=null,this._componentRef=null,this._removeGlobalListener(),this.onHidden.emit(id?{id:id}:null),this}toggle(){this.isShown?this.hide():this.show()}dispose(){this.isShown&&this.hide(),this._unsubscribePositioning(),this._unregisterListenersFn&&this._unregisterListenersFn()}listen(listenOpts){this.triggers=listenOpts.triggers||this.triggers,this._listenOpts.outsideClick=listenOpts.outsideClick,this._listenOpts.outsideEsc=listenOpts.outsideEsc,listenOpts.target=listenOpts.target||this._elementRef.nativeElement;const hide=this._listenOpts.hide=()=>listenOpts.hide?listenOpts.hide():void this.hide(),show=this._listenOpts.show=registerHide=>{listenOpts.show?listenOpts.show(registerHide):this.show(registerHide),registerHide()};return this._unregisterListenersFn=function(renderer,options){const parsedTriggers=parseTriggers(options.triggers),target=options.target;if(1===parsedTriggers.length&&parsedTriggers[0].isManual())return Function.prototype;const listeners=[],_registerHide=[],registerHide=()=>{_registerHide.forEach(fn=>listeners.push(fn())),_registerHide.length=0};return parsedTriggers.forEach(trigger=>{const useToggle=trigger.open===trigger.close,showFn=useToggle?options.toggle:options.show;useToggle||_registerHide.push(()=>renderer.listen(target,trigger.close,options.hide)),listeners.push(renderer.listen(target,trigger.open,()=>showFn(registerHide)))}),()=>{listeners.forEach(unsubscribeFn=>unsubscribeFn())}}(this._renderer,{target:listenOpts.target,triggers:listenOpts.triggers,show:show,hide:hide,toggle:registerHide=>{this.isShown?hide():show(registerHide)}}),this}_removeGlobalListener(){this._globalListener&&(this._globalListener(),this._globalListener=null)}attachInline(vRef,template){return this._inlineViewRef=vRef.createEmbeddedView(template),this}_registerOutsideClick(){if(this._componentRef&&this._componentRef.location){if(this._listenOpts.outsideClick){const target=this._componentRef.location.nativeElement;setTimeout(()=>{var options;this._globalListener=(options={targets:[target,this._elementRef.nativeElement],outsideClick:this._listenOpts.outsideClick,hide:()=>this._listenOpts.hide()}).outsideClick?this._renderer.listen(\"document\",\"click\",event=>{options.target&&options.target.contains(event.target)||options.targets&&options.targets.some(target=>target.contains(event.target))||options.hide()}):Function.prototype})}var options;this._listenOpts.outsideEsc&&(this._globalListener=(options={targets:[this._componentRef.location.nativeElement,this._elementRef.nativeElement],outsideEsc:this._listenOpts.outsideEsc,hide:()=>this._listenOpts.hide()}).outsideEsc?this._renderer.listen(\"document\",\"keyup.esc\",event=>{options.target&&options.target.contains(event.target)||options.targets&&options.targets.some(target=>target.contains(event.target))||options.hide()}):Function.prototype)}}getInnerComponent(){return this._innerComponent}_subscribePositioning(){!this._zoneSubscription&&this.attachment&&(this.onShown.subscribe(()=>{this._posService.position({element:this._componentRef.location,target:this._elementRef,attachment:this.attachment,appendToBody:\"body\"===this.container})}),this._zoneSubscription=this._ngZone.onStable.subscribe(()=>{this._componentRef&&this._posService.calcPosition()}))}_unsubscribePositioning(){this._zoneSubscription&&(this._zoneSubscription.unsubscribe(),this._zoneSubscription=null)}_getContentRef(content,context,initialState){if(!content)return new ContentRef([]);if(content instanceof core.L){if(this._viewContainerRef){const _viewRef=this._viewContainerRef.createEmbeddedView(content,context);return _viewRef.markForCheck(),new ContentRef([_viewRef.rootNodes],_viewRef)}const viewRef=content.createEmbeddedView({});return this._applicationRef.attachView(viewRef),new ContentRef([viewRef.rootNodes],viewRef)}if(\"function\"==typeof content){const contentCmptFactory=this._componentFactoryResolver.resolveComponentFactory(content),modalContentInjector=core.s.create({providers:this._providers,parent:this._injector}),componentRef=contentCmptFactory.create(modalContentInjector);return Object.assign(componentRef.instance,initialState),this._applicationRef.attachView(componentRef.hostView),new ContentRef([[componentRef.location.nativeElement]],componentRef.hostView,componentRef)}return new ContentRef([[this._renderer.createText(\"\"+content)]])}}let ngx_bootstrap_component_loader_ComponentLoaderFactory=(()=>{class ComponentLoaderFactory{constructor(_componentFactoryResolver,_ngZone,_injector,_posService,_applicationRef){this._componentFactoryResolver=_componentFactoryResolver,this._ngZone=_ngZone,this._injector=_injector,this._posService=_posService,this._applicationRef=_applicationRef}createLoader(_elementRef,_viewContainerRef,_renderer){return new ngx_bootstrap_component_loader_ComponentLoader(_viewContainerRef,_renderer,_elementRef,this._injector,this._componentFactoryResolver,this._ngZone,this._applicationRef,this._posService)}}return ComponentLoaderFactory.ɵfac=function(t){return new(t||ComponentLoaderFactory)(core.Yb(core.j),core.Yb(core.A),core.Yb(core.s),core.Yb(ngx_bootstrap_positioning_PositioningService),core.Yb(core.g))},ComponentLoaderFactory.ɵprov=core.Hb({token:ComponentLoaderFactory,factory:ComponentLoaderFactory.ɵfac}),ComponentLoaderFactory})();var timer=__webpack_require__(\"PqYM\");function PopoverContainerComponent_h3_1_Template(rf,ctx){if(1&rf&&(core.Rb(0,\"h3\",3),core.Ic(1),core.Qb()),2&rf){const ctx_r0=core.dc();core.yb(1),core.Jc(ctx_r0.title)}}const _c0=[\"*\"];let ngx_bootstrap_popover_PopoverConfig=(()=>{class PopoverConfig{constructor(){this.adaptivePosition=!0,this.placement=\"top\",this.triggers=\"click\",this.outsideClick=!1,this.delay=0}}return PopoverConfig.ɵfac=function(t){return new(t||PopoverConfig)},PopoverConfig.ɵprov=Object(core.Hb)({factory:function(){return new PopoverConfig},token:PopoverConfig,providedIn:\"root\"}),PopoverConfig})(),ngx_bootstrap_popover_PopoverContainerComponent=(()=>{class PopoverContainerComponent{constructor(config){Object.assign(this,config)}get isBs3(){return void 0===win||(void 0===win.__theme?(guessedVersion||(guessedVersion=function(){if(\"undefined\"==typeof document)return null;const spanEl=document.createElement(\"span\");spanEl.innerText=\"test bs version\",document.body.appendChild(spanEl),spanEl.classList.add(\"d-none\");const rect=spanEl.getBoundingClientRect();return document.body.removeChild(spanEl),rect&&0===rect.top?\"bs4\":\"bs3\"}()),\"bs3\"===guessedVersion):\"bs4\"!==win.__theme)}}return PopoverContainerComponent.ɵfac=function(t){return new(t||PopoverContainerComponent)(core.Lb(ngx_bootstrap_popover_PopoverConfig))},PopoverContainerComponent.ɵcmp=core.Fb({type:PopoverContainerComponent,selectors:[[\"popover-container\"]],hostAttrs:[\"role\",\"tooltip\",2,\"display\",\"block\"],hostVars:7,hostBindings:function(rf,ctx){2&rf&&(core.zb(\"id\",ctx.popoverId),core.Ab(\"popover in popover-\"+ctx.placement+\" bs-popover-\"+ctx.placement+\" \"+ctx.placement+\" \"+ctx.containerClass),core.Db(\"show\",!ctx.isBs3)(\"bs3\",ctx.isBs3))},inputs:{placement:\"placement\",title:\"title\"},ngContentSelectors:_c0,decls:4,vars:1,consts:[[1,\"popover-arrow\",\"arrow\"],[\"class\",\"popover-title popover-header\",4,\"ngIf\"],[1,\"popover-content\",\"popover-body\"],[1,\"popover-title\",\"popover-header\"]],template:function(rf,ctx){1&rf&&(core.ic(),core.Mb(0,\"div\",0),core.Gc(1,PopoverContainerComponent_h3_1_Template,2,1,\"h3\",1),core.Rb(2,\"div\",2),core.hc(3),core.Qb()),2&rf&&(core.yb(1),core.jc(\"ngIf\",ctx.title))},directives:[common.n],styles:[\".bs3.popover-top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .popover.bottom[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -4px;\\n    }\\n    .bs3.bs-popover-left[_nghost-%COMP%] {\\n      margin-right: .5rem;\\n    }\\n    .bs3.bs-popover-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-popover-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{\\n      margin: .3rem 0;\\n    }\"],changeDetection:0}),PopoverContainerComponent})(),id=0,ngx_bootstrap_popover_PopoverDirective=(()=>{class PopoverDirective{constructor(_config,_elementRef,_renderer,_viewContainerRef,cis,_positionService){this._elementRef=_elementRef,this._renderer=_renderer,this._positionService=_positionService,this.popoverId=id++,this.outsideClick=!1,this.containerClass=\"\",this._isInited=!1,this._popover=cis.createLoader(_elementRef,_viewContainerRef,_renderer).provide({provide:ngx_bootstrap_popover_PopoverConfig,useValue:_config}),Object.assign(this,_config),this.onShown=this._popover.onShown,this.onHidden=this._popover.onHidden,\"undefined\"!=typeof window&&_elementRef.nativeElement.addEventListener(\"click\",function(){try{_elementRef.nativeElement.focus()}catch(err){return}})}get isOpen(){return this._popover.isShown}set isOpen(value){value?this.show():this.hide()}setAriaDescribedBy(){this._ariaDescribedby=this.isOpen?\"ngx-popover-\"+this.popoverId:null,this._ariaDescribedby?(this._popover.instance.popoverId=this._ariaDescribedby,this._renderer.setAttribute(this._elementRef.nativeElement,\"aria-describedby\",this._ariaDescribedby)):this._renderer.removeAttribute(this._elementRef.nativeElement,\"aria-describedby\")}show(){if(this._popover.isShown||!this.popover||this._delayTimeoutId)return;this._positionService.setOptions({modifiers:{flip:{enabled:this.adaptivePosition},preventOverflow:{enabled:this.adaptivePosition}}});const showPopover=()=>{this._delayTimeoutId&&(this._delayTimeoutId=void 0),this._popover.attach(ngx_bootstrap_popover_PopoverContainerComponent).to(this.container).position({attachment:this.placement}).show({content:this.popover,context:this.popoverContext,placement:this.placement,title:this.popoverTitle,containerClass:this.containerClass}),this.adaptivePosition||(this._positionService.calcPosition(),this._positionService.deletePositionElement(this._popover._componentRef.location)),this.isOpen=!0,this.setAriaDescribedBy()},cancelDelayedTooltipShowing=()=>{this._popoverCancelShowFn&&this._popoverCancelShowFn()};if(this.delay){const _timer=Object(timer.a)(this.delay).subscribe(()=>{showPopover(),cancelDelayedTooltipShowing()});this.triggers&&parseTriggers(this.triggers).forEach(trigger=>{this._popoverCancelShowFn=this._renderer.listen(this._elementRef.nativeElement,trigger.close,()=>{_timer.unsubscribe(),cancelDelayedTooltipShowing()})})}else showPopover()}hide(){this._delayTimeoutId&&(clearTimeout(this._delayTimeoutId),this._delayTimeoutId=void 0),this.isOpen&&(this._popover.hide(),this.setAriaDescribedBy(),this.isOpen=!1)}toggle(){if(this.isOpen)return this.hide();this.show()}ngOnInit(){this._isInited||(this._isInited=!0,this._popover.listen({triggers:this.triggers,outsideClick:this.outsideClick,show:()=>this.show(),hide:()=>this.hide()}))}ngOnDestroy(){this._popover.dispose()}}return PopoverDirective.ɵfac=function(t){return new(t||PopoverDirective)(core.Lb(ngx_bootstrap_popover_PopoverConfig),core.Lb(core.l),core.Lb(core.E),core.Lb(core.P),core.Lb(ngx_bootstrap_component_loader_ComponentLoaderFactory),core.Lb(ngx_bootstrap_positioning_PositioningService))},PopoverDirective.ɵdir=core.Gb({type:PopoverDirective,selectors:[[\"\",\"popover\",\"\"]],inputs:{outsideClick:\"outsideClick\",containerClass:\"containerClass\",isOpen:\"isOpen\",adaptivePosition:\"adaptivePosition\",popover:\"popover\",popoverContext:\"popoverContext\",popoverTitle:\"popoverTitle\",placement:\"placement\",triggers:\"triggers\",container:\"container\",delay:\"delay\"},outputs:{onShown:\"onShown\",onHidden:\"onHidden\"},exportAs:[\"bs-popover\"]}),PopoverDirective})(),ngx_bootstrap_popover_PopoverModule=(()=>{class PopoverModule{static forRoot(){return{ngModule:PopoverModule,providers:[ngx_bootstrap_component_loader_ComponentLoaderFactory,ngx_bootstrap_positioning_PositioningService]}}}return PopoverModule.ɵmod=core.Jb({type:PopoverModule}),PopoverModule.ɵinj=core.Ib({factory:function(t){return new(t||PopoverModule)},imports:[[common.c]]}),PopoverModule})()},njyG:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return angular_datatables_directive_DataTableDirective}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return angular_datatables_module_DataTablesModule});var core=__webpack_require__(\"fXoL\"),angular_datatables_directive_DataTableDirective=function(){function DataTableDirective(el){this.el=el,this.dtOptions={}}return DataTableDirective.prototype.ngOnInit=function(){var _this=this;this.dtTrigger?this.dtTrigger.subscribe(function(){_this.displayTable()}):this.displayTable()},DataTableDirective.prototype.ngOnDestroy=function(){this.dtTrigger&&this.dtTrigger.unsubscribe(),this.dt&&this.dt.destroy(!0)},DataTableDirective.prototype.displayTable=function(){var _this=this;this.dtInstance=new Promise(function(resolve,reject){Promise.resolve(_this.dtOptions).then(function(dtOptions){setTimeout(function(){var options={rowCallback:function(row,data,index){if(dtOptions.columns){var columns_1=dtOptions.columns;columns_1.filter(function(x){return x.ngPipeInstance}).forEach(function(el){var pipe=el.ngPipeInstance,i=columns_1.findIndex(function(e){return e.data==el.data}),rowFromCol=row.childNodes.item(i),rowVal=$(rowFromCol).text(),rowValAfter=pipe.transform(rowVal);$(rowFromCol).text(rowValAfter)})}_this.dtOptions.rowCallback&&_this.dtOptions.rowCallback(row,data,index)}};options=Object.assign({},dtOptions,options),_this.dt=$(_this.el.nativeElement).DataTable(options),resolve(_this.dt)})})})},DataTableDirective.ɵfac=function(t){return new(t||DataTableDirective)(core.Lb(core.l))},DataTableDirective.ɵdir=core.Gb({type:DataTableDirective,selectors:[[\"\",\"datatable\",\"\"]],inputs:{dtOptions:\"dtOptions\",dtTrigger:\"dtTrigger\"}}),DataTableDirective}(),common=__webpack_require__(\"ofXK\"),angular_datatables_module_DataTablesModule=function(){function DataTablesModule(){}return DataTablesModule.forRoot=function(){return{ngModule:DataTablesModule}},DataTablesModule.ɵmod=core.Jb({type:DataTablesModule}),DataTablesModule.ɵinj=core.Ib({factory:function(t){return new(t||DataTablesModule)},imports:[[common.c]]}),DataTablesModule}()}}]);","name":"0-es2015.0083bbfe8d910aa7f119.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[0],{\n\n/***/ \"EDFS\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ ngx_bootstrap_popover_PopoverDirective; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ ngx_bootstrap_popover_PopoverModule; });\n\n// UNUSED EXPORTS: PopoverConfig, PopoverContainerComponent\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/utils/fesm2015/ngx-bootstrap-utils.js\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nclass Trigger {\n    /**\n     * @param {?} open\n     * @param {?=} close\n     */\n    constructor(open, close) {\n        this.open = open;\n        this.close = close || open;\n    }\n    /**\n     * @return {?}\n     */\n    isManual() {\n        return this.open === 'manual' || this.close === 'manual';\n    }\n}\nif (false) {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ListenOptions() { }\nif (false) {}\n/** @type {?} */\nconst DEFAULT_ALIASES = {\n    hover: ['mouseover', 'mouseout'],\n    focus: ['focusin', 'focusout']\n};\n/* tslint:disable-next-line: no-any */\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    /** @type {?} */\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    /** @type {?} */\n    const parsedTriggers = trimmedTriggers\n        .split(/\\s+/)\n        .map((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => trigger.split(':')))\n        .map((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    (triggerPair) => {\n        /** @type {?} */\n        const alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    }));\n    /** @type {?} */\n    const manualTriggers = parsedTriggers.filter((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    (triggerPair) => triggerPair.isManual()));\n    if (manualTriggers.length > 1) {\n        throw new Error('Triggers parse error: only one manual trigger is allowed');\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n    }\n    return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} target\n * @param {?} triggers\n * @param {?} showFn\n * @param {?} hideFn\n * @param {?} toggleFn\n * @return {?}\n */\nfunction listenToTriggers(renderer, \n/* tslint:disable-next-line: no-any */\ntarget, triggers, showFn, hideFn, toggleFn) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(triggers);\n    /* tslint:disable-next-line: no-any */\n    /** @type {?} */\n    const listeners = [];\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return Function.prototype;\n    }\n    parsedTriggers.forEach((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => {\n        if (trigger.open === trigger.close) {\n            listeners.push(renderer.listen(target, trigger.open, toggleFn));\n            return;\n        }\n        listeners.push(renderer.listen(target, trigger.open, showFn), renderer.listen(target, trigger.close, hideFn));\n    }));\n    return (/**\n     * @return {?}\n     */\n    () => {\n        listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        (unsubscribeFn) => unsubscribeFn()));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction listenToTriggersV2(renderer, options) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(options.triggers);\n    /** @type {?} */\n    const target = options.target;\n    // do nothing\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return Function.prototype;\n    }\n    // all listeners\n    /* tslint:disable-next-line: no-any */\n    /** @type {?} */\n    const listeners = [];\n    // lazy listeners registration\n    /** @type {?} */\n    const _registerHide = [];\n    /** @type {?} */\n    const registerHide = (/**\n     * @return {?}\n     */\n    () => {\n        // add hide listeners to unregister array\n        _registerHide.forEach((/**\n         * @param {?} fn\n         * @return {?}\n         */\n        (fn) => listeners.push(fn())));\n        // register hide events only once\n        _registerHide.length = 0;\n    });\n    // register open\\close\\toggle listeners\n    parsedTriggers.forEach((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    (trigger) => {\n        /** @type {?} */\n        const useToggle = trigger.open === trigger.close;\n        /** @type {?} */\n        const showFn = useToggle ? options.toggle : options.show;\n        if (!useToggle) {\n            _registerHide.push((/**\n             * @return {?}\n             */\n            () => renderer.listen(target, trigger.close, options.hide)));\n        }\n        listeners.push(renderer.listen(target, trigger.open, (/**\n         * @return {?}\n         */\n        () => showFn(registerHide))));\n    }));\n    return (/**\n     * @return {?}\n     */\n    () => {\n        listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        (unsubscribeFn) => unsubscribeFn()));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction registerOutsideClick(renderer, options) {\n    if (!options.outsideClick) {\n        return Function.prototype;\n    }\n    /* tslint:disable-next-line: no-any */\n    return renderer.listen('document', 'click', (/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        if (options.target && options.target.contains(event.target)) {\n            return undefined;\n        }\n        if (options.targets &&\n            options.targets.some((/**\n             * @param {?} target\n             * @return {?}\n             */\n            target => target.contains(event.target)))) {\n            return undefined;\n        }\n        options.hide();\n    }));\n}\n/**\n * @param {?} renderer\n * @param {?} options\n * @return {?}\n */\nfunction registerEscClick(renderer, options) {\n    if (!options.outsideEsc) {\n        return Function.prototype;\n    }\n    return renderer.listen('document', 'keyup.esc', (/**\n     * @param {?} event\n     * @return {?}\n     */\n    (event) => {\n        if (options.target && options.target.contains(event.target)) {\n            return undefined;\n        }\n        if (options.targets &&\n            options.targets.some((/**\n             * @param {?} target\n             * @return {?}\n             */\n            target => target.contains(event.target)))) {\n            return undefined;\n        }\n        options.hide();\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * JS version of browser APIs. This library can only run in the browser.\n * @type {?}\n */\nconst win = (typeof window !== 'undefined' && window) || (/** @type {?} */ ({}));\n/** @type {?} */\nconst document$1 = win.document;\n/** @type {?} */\nconst ngx_bootstrap_utils_location = win.location;\n/** @type {?} */\nconst gc = win.gc ? (/**\n * @return {?}\n */\n() => win.gc()) : (/**\n * @return {?}\n */\n() => null);\n/** @type {?} */\nconst performance = win.performance ? win.performance : null;\n/** @type {?} */\nconst Event = win.Event;\n/** @type {?} */\nconst MouseEvent = win.MouseEvent;\n/** @type {?} */\nconst KeyboardEvent = win.KeyboardEvent;\n/** @type {?} */\nconst EventTarget = win.EventTarget;\n/** @type {?} */\nconst History = win.History;\n/** @type {?} */\nconst Location = win.Location;\n/** @type {?} */\nconst EventListener = win.EventListener;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet guessedVersion;\n/**\n * @return {?}\n */\nfunction _guessBsVersion() {\n    if (typeof document === 'undefined') {\n        return null;\n    }\n    /** @type {?} */\n    const spanEl = document.createElement('span');\n    spanEl.innerText = 'test bs version';\n    document.body.appendChild(spanEl);\n    spanEl.classList.add('d-none');\n    /** @type {?} */\n    const rect = spanEl.getBoundingClientRect();\n    document.body.removeChild(spanEl);\n    if (!rect) {\n        return 'bs3';\n    }\n    return rect.top === 0 ? 'bs4' : 'bs3';\n}\n/**\n * @param {?} theme\n * @return {?}\n */\nfunction setTheme(theme) {\n    guessedVersion = theme;\n}\n// todo: in ngx-bootstrap, bs4 will became a default one\n/**\n * @return {?}\n */\nfunction isBs3() {\n    if (typeof win === 'undefined') {\n        return true;\n    }\n    if (typeof win.__theme === 'undefined') {\n        if (guessedVersion) {\n            return guessedVersion === 'bs3';\n        }\n        guessedVersion = _guessBsVersion();\n        return guessedVersion === 'bs3';\n    }\n    return win.__theme !== 'bs4';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass LinkedList {\n    constructor() {\n        this.length = 0;\n        this.asArray = [];\n        // Array methods overriding END\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    get(position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            return void 0;\n        }\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current.value;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} position\n     * @return {?}\n     */\n    add(value, position = this.length) {\n        if (position < 0 || position > this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const node = {\n            value,\n            next: undefined,\n            previous: undefined\n        };\n        if (this.length === 0) {\n            this.head = node;\n            this.tail = node;\n            this.current = node;\n        }\n        else {\n            if (position === 0) {\n                // first node\n                node.next = this.head;\n                this.head.previous = node;\n                this.head = node;\n            }\n            else if (position === this.length) {\n                // last node\n                this.tail.next = node;\n                node.previous = this.tail;\n                this.tail = node;\n            }\n            else {\n                // node in middle\n                /** @type {?} */\n                const currentPreviousNode = this.getNode(position - 1);\n                /** @type {?} */\n                const currentNextNode = currentPreviousNode.next;\n                currentPreviousNode.next = node;\n                currentNextNode.previous = node;\n                node.previous = currentPreviousNode;\n                node.next = currentNextNode;\n            }\n        }\n        this.length++;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?=} position\n     * @return {?}\n     */\n    remove(position = 0) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        if (position === 0) {\n            // first node\n            this.head = this.head.next;\n            if (this.head) {\n                // there is no second node\n                this.head.previous = undefined;\n            }\n            else {\n                // there is no second node\n                this.tail = undefined;\n            }\n        }\n        else if (position === this.length - 1) {\n            // last node\n            this.tail = this.tail.previous;\n            this.tail.next = undefined;\n        }\n        else {\n            // middle node\n            /** @type {?} */\n            const removedNode = this.getNode(position);\n            removedNode.next.previous = removedNode.previous;\n            removedNode.previous.next = removedNode.next;\n        }\n        this.length--;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @param {?} position\n     * @param {?} value\n     * @return {?}\n     */\n    set(position, value) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /** @type {?} */\n        const node = this.getNode(position);\n        node.value = value;\n        this.createInternalArrayRepresentation();\n    }\n    /**\n     * @return {?}\n     */\n    toArray() {\n        return this.asArray;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    findAll(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const result = [];\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result.push({ index, value: current.value });\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    // Array methods overriding start\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    push(...args) {\n        /* tslint:disable-next-line: no-any*/\n        args.forEach((/**\n         * @param {?} arg\n         * @return {?}\n         */\n        (arg) => {\n            this.add(arg);\n        }));\n        return this.length;\n    }\n    /**\n     * @return {?}\n     */\n    pop() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        /** @type {?} */\n        const last = this.tail;\n        this.remove(this.length - 1);\n        return last.value;\n    }\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    unshift(...args) {\n        args.reverse();\n        /* tslint:disable-next-line: no-any*/\n        args.forEach((/**\n         * @param {?} arg\n         * @return {?}\n         */\n        (arg) => {\n            this.add(arg, 0);\n        }));\n        return this.length;\n    }\n    /**\n     * @return {?}\n     */\n    shift() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        /** @type {?} */\n        const lastItem = this.head.value;\n        this.remove();\n        return lastItem;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < this.length; index++) {\n            fn(current.value, index);\n            current = current.next;\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    indexOf(value) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let position = 0;\n        for (let index = 0; index < this.length; index++) {\n            if (current.value === value) {\n                position = index;\n                break;\n            }\n            current = current.next;\n        }\n        return position;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result = false;\n        while (current && !result) {\n            if (fn(current.value)) {\n                result = true;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    every(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result = true;\n        while (current && result) {\n            if (!fn(current.value)) {\n                result = false;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return '[Linked List]';\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result;\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = current.value;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    findIndex(fn) {\n        /** @type {?} */\n        let current = this.head;\n        /** @type {?} */\n        let result;\n        for (let index = 0; index < this.length; index++) {\n            if (fn(current.value, index)) {\n                result = index;\n                break;\n            }\n            current = current.next;\n        }\n        return result;\n    }\n    /* tslint:disable-next-line: no-any*/\n    /**\n     * @protected\n     * @param {?} position\n     * @return {?}\n     */\n    getNode(position) {\n        if (this.length === 0 || position < 0 || position >= this.length) {\n            throw new Error('Position is out of the list');\n        }\n        /** @type {?} */\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = current.next;\n        }\n        return current;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    createInternalArrayRepresentation() {\n        /* tslint:disable-next-line: no-any*/\n        /** @type {?} */\n        const outArray = [];\n        /** @type {?} */\n        let current = this.head;\n        while (current) {\n            outArray.push(current.value);\n            current = current.next;\n        }\n        this.asArray = outArray;\n    }\n}\nif (false) {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/*tslint:disable:no-invalid-this */\n/* tslint:disable-next-line: no-any */\n/**\n * @param {?=} defaultValue\n * @return {?}\n */\nfunction OnChange(defaultValue) {\n    /** @type {?} */\n    const sufix = 'Change';\n    /* tslint:disable-next-line: no-any */\n    return (/**\n     * @param {?} target\n     * @param {?} propertyKey\n     * @return {?}\n     */\n    function OnChangeHandler(target, propertyKey) {\n        /** @type {?} */\n        const _key = ` __${propertyKey}Value`;\n        Object.defineProperty(target, propertyKey, {\n            /* tslint:disable-next-line: no-any */\n            /**\n             * @return {?}\n             */\n            get() {\n                return this[_key];\n            },\n            /* tslint:disable-next-line: no-any */\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set(value) {\n                /** @type {?} */\n                const prevValue = this[_key];\n                this[_key] = value;\n                if (prevValue !== value && this[propertyKey + sufix]) {\n                    this[propertyKey + sufix].emit(value);\n                }\n            }\n        });\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Utils {\n    /* tslint:disable-next-line: no-any */\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    static reflow(element) {\n        /* tslint:disable-next-line: no-any */\n        ((/**\n         * @param {?} bs\n         * @return {?}\n         */\n        (bs) => bs))(element.offsetHeight);\n    }\n    // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n    /* tslint:disable-next-line: no-any */\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    static getStyles(elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        /** @type {?} */\n        let view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = win;\n        }\n        return view.getComputedStyle(elem);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _messagesHash = {};\n/** @type {?} */\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction warnOnce(msg) {\n    if (!Object(core[\"U\" /* isDevMode */])() || _hideMsg || msg in _messagesHash) {\n        return;\n    }\n    _messagesHash[msg] = true;\n    /*tslint:disable-next-line*/\n    console.warn(msg);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n\n//# sourceMappingURL=ngx-bootstrap-utils.js.map\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subject.js + 1 modules\nvar Subject = __webpack_require__(\"XNiG\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/merge.js\nvar merge = __webpack_require__(\"VRyK\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js\nvar fromEvent = __webpack_require__(\"xgIS\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/of.js\nvar of = __webpack_require__(\"LRne\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js + 2 modules\nvar animationFrame = __webpack_require__(\"eNwd\");\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/positioning/fesm2015/ngx-bootstrap-positioning.js\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Get CSS computed property of the given element\n * @param {?} element\n * @param {?=} property\n * @return {?}\n */\n\nfunction getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n        return [];\n    }\n    // NOTE: 1 DOM access here\n    /** @type {?} */\n    const window = element.ownerDocument.defaultView;\n    /** @type {?} */\n    const css = window.getComputedStyle(element, null);\n    return property ? css[( /** @type {?} */(property))] : css;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the parentNode or the host of the element\n * @param {?} element\n * @return {?}\n */\nfunction getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n        return element;\n    }\n    return element.parentNode || element.host;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n        return document.body;\n    }\n    switch (element.nodeName) {\n        case 'HTML':\n        case 'BODY':\n            return element.ownerDocument.body;\n        case '#document':\n            return element.body;\n        default:\n    }\n    // Firefox want us to check `-x` and `-y` variations as well\n    const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n    if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n        return element;\n    }\n    return getScrollParent(getParentNode(element));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst isIE11 = isBrowser && !!((( /** @type {?} */(window))).MSInputMethodContext && (( /** @type {?} */(document))).documentMode);\n/** @type {?} */\nconst isIE10 = isBrowser && !!((( /** @type {?} */(window))).MSInputMethodContext && /MSIE 10/.test((( /** @type {?} */(navigator))).userAgent));\n/**\n * @param {?=} version\n * @return {?}\n */\nfunction isIE(version) {\n    if (version === 11) {\n        return isIE11;\n    }\n    if (version === 10) {\n        return isIE10;\n    }\n    return isIE11 || isIE10;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction getOffsetParent(element) {\n    if (!element) {\n        return document.documentElement;\n    }\n    /** @type {?} */\n    const noOffsetParent = isIE(10) ? document.body : null;\n    // NOTE: 1 DOM access here\n    /** @type {?} */\n    let offsetParent = element.offsetParent || null;\n    // Skip hidden elements which don't have an offsetParent\n    /** @type {?} */\n    let sibling;\n    while (offsetParent === noOffsetParent\n        && element.nextElementSibling\n        && sibling !== element.nextElementSibling) {\n        sibling = element.nextElementSibling;\n        offsetParent = sibling.offsetParent;\n    }\n    /** @type {?} */\n    const nodeName = offsetParent && offsetParent.nodeName;\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n        return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n    }\n    // .offsetParent will return the closest TH, TD or TABLE in case\n    if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n        getStyleComputedProperty(offsetParent, 'position') === 'static') {\n        return getOffsetParent(offsetParent);\n    }\n    return offsetParent;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction isOffsetContainer(element) {\n    const { nodeName } = element;\n    if (nodeName === 'BODY') {\n        return false;\n    }\n    return (nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @param {?} node\n * @return {?}\n */\nfunction getRoot(node) {\n    if (node.parentNode !== null) {\n        return getRoot(node.parentNode);\n    }\n    return node;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element1\n * @param {?} element2\n * @return {?}\n */\nfunction findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n        return document.documentElement;\n    }\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    /* tslint:disable-next-line: no-bitwise */\n    /** @type {?} */\n    const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    /** @type {?} */\n    const start = order ? element1 : element2;\n    /** @type {?} */\n    const end = order ? element2 : element1;\n    // Get common ancestor container\n    /** @type {?} */\n    const range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    const { commonAncestorContainer } = range;\n    // Both nodes are inside #document\n    if ((element1 !== commonAncestorContainer &&\n        element2 !== commonAncestorContainer) ||\n        start.contains(end)) {\n        if (isOffsetContainer(commonAncestorContainer)) {\n            return commonAncestorContainer;\n        }\n        return getOffsetParent(commonAncestorContainer);\n    }\n    // one of the nodes is inside shadowDOM, find which one\n    /** @type {?} */\n    const element1root = getRoot(element1);\n    if (element1root.host) {\n        return findCommonOffsetParent(element1root.host, element2);\n    }\n    else {\n        return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to detect borders of a given element\n */\n/**\n * @param {?} styles\n * @param {?} axis\n * @return {?}\n */\nfunction getBordersSize(styles, axis) {\n    /** @type {?} */\n    const sideA = axis === 'x' ? 'Left' : 'Top';\n    /** @type {?} */\n    const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return (parseFloat(styles[( /** @type {?} */(`border${sideA}Width`))]) +\n        parseFloat(styles[( /** @type {?} */(`border${sideB}Width`))]));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} axis\n * @param {?} body\n * @param {?} html\n * @param {?} computedStyle\n * @return {?}\n */\nfunction getSize(axis, body, html, computedStyle) {\n    return Math.max((( /** @type {?} */(body)))[`offset${axis}`], (( /** @type {?} */(body)))[`scroll${axis}`], (( /** @type {?} */(html)))[`client${axis}`], (( /** @type {?} */(html)))[`offset${axis}`], (( /** @type {?} */(html)))[`scroll${axis}`], isIE(10)\n        ? (parseInt((( /** @type {?} */(html)))[`offset${axis}`], 10) +\n            parseInt(computedStyle[( /** @type {?} */(`margin${axis === 'Height' ? 'Top' : 'Left'}`))], 10) +\n            parseInt(computedStyle[( /** @type {?} */(`margin${axis === 'Height' ? 'Bottom' : 'Right'}`))], 10))\n        : 0);\n}\n/**\n * @param {?} document\n * @return {?}\n */\nfunction getWindowSizes(document) {\n    /** @type {?} */\n    const body = document.body;\n    /** @type {?} */\n    const html = document.documentElement;\n    /** @type {?} */\n    const computedStyle = isIE(10) && getComputedStyle(html);\n    return {\n        height: getSize('Height', body, html, computedStyle),\n        width: getSize('Width', body, html, computedStyle)\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @param {?} element\n * @param {?=} side\n * @return {?}\n */\nfunction getScroll(element, side = 'top') {\n    /** @type {?} */\n    const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    /** @type {?} */\n    const nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        /** @type {?} */\n        const html = element.ownerDocument.documentElement;\n        /** @type {?} */\n        const scrollingElement = element.ownerDocument.scrollingElement || html;\n        return scrollingElement[upperSide];\n    }\n    return element[upperSide];\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} offsets\n * @return {?}\n */\nfunction getClientRect(offsets) {\n    return Object.assign(Object.assign({}, offsets), { right: offsets.left + offsets.width, bottom: offsets.top + offsets.height });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction getBoundingClientRect(element) {\n    /** @type {?} */\n    let rect = {};\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    try {\n        if (isIE(10)) {\n            rect = element.getBoundingClientRect();\n            /** @type {?} */\n            const scrollTop = getScroll(element, 'top');\n            /** @type {?} */\n            const scrollLeft = getScroll(element, 'left');\n            rect.top += scrollTop;\n            rect.left += scrollLeft;\n            rect.bottom += scrollTop;\n            rect.right += scrollLeft;\n        }\n        else {\n            rect = element.getBoundingClientRect();\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n    /** @type {?} */\n    const result = {\n        left: rect.left,\n        top: rect.top,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n    };\n    // subtract scrollbar size from sizes\n    /** @type {?} */\n    const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n    /** @type {?} */\n    const width = sizes.width || element.clientWidth || result.right - result.left;\n    /** @type {?} */\n    const height = sizes.height || element.clientHeight || result.bottom - result.top;\n    /** @type {?} */\n    let horizScrollbar = element.offsetWidth - width;\n    /** @type {?} */\n    let vertScrollbar = element.offsetHeight - height;\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n        /** @type {?} */\n        const styles = getStyleComputedProperty(element);\n        horizScrollbar -= getBordersSize(styles, 'x');\n        vertScrollbar -= getBordersSize(styles, 'y');\n        result.width -= horizScrollbar;\n        result.height -= vertScrollbar;\n    }\n    return getClientRect(result);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} rect\n * @param {?} element\n * @param {?=} subtract\n * @return {?}\n */\nfunction includeScroll(rect, element, subtract = false) {\n    /** @type {?} */\n    const scrollTop = getScroll(element, 'top');\n    /** @type {?} */\n    const scrollLeft = getScroll(element, 'left');\n    /** @type {?} */\n    const modifier = subtract ? -1 : 1;\n    rect.top += scrollTop * modifier;\n    rect.bottom += scrollTop * modifier;\n    rect.left += scrollLeft * modifier;\n    rect.right += scrollLeft * modifier;\n    return rect;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} children\n * @param {?} parent\n * @param {?=} fixedPosition\n * @return {?}\n */\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n    /** @type {?} */\n    const isIE10 = isIE(10);\n    /** @type {?} */\n    const isHTML = parent.nodeName === 'HTML';\n    /** @type {?} */\n    const childrenRect = getBoundingClientRect(children);\n    /** @type {?} */\n    const parentRect = getBoundingClientRect(parent);\n    /** @type {?} */\n    const scrollParent = getScrollParent(children);\n    /** @type {?} */\n    const styles = getStyleComputedProperty(parent);\n    /** @type {?} */\n    const borderTopWidth = parseFloat(styles.borderTopWidth);\n    /** @type {?} */\n    const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n    // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n    if (fixedPosition && isHTML) {\n        parentRect.top = Math.max(parentRect.top, 0);\n        parentRect.left = Math.max(parentRect.left, 0);\n    }\n    /** @type {?} */\n    let offsets = getClientRect({\n        top: childrenRect.top - parentRect.top - borderTopWidth,\n        left: childrenRect.left - parentRect.left - borderLeftWidth,\n        width: childrenRect.width,\n        height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (!isIE10 && isHTML) {\n        /** @type {?} */\n        const marginTop = parseFloat(styles.marginTop);\n        /** @type {?} */\n        const marginLeft = parseFloat(styles.marginLeft);\n        offsets.top -= borderTopWidth - marginTop;\n        offsets.bottom -= borderTopWidth - marginTop;\n        offsets.left -= borderLeftWidth - marginLeft;\n        offsets.right -= borderLeftWidth - marginLeft;\n        // Attach marginTop and marginLeft because in some circumstances we may need them\n        offsets.marginTop = marginTop;\n        offsets.marginLeft = marginLeft;\n    }\n    if (isIE10 && !fixedPosition\n        ? parent.contains(scrollParent)\n        : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n        offsets = includeScroll(offsets, parent);\n    }\n    return offsets;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @param {?=} excludeScroll\n * @return {?}\n */\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n    /** @type {?} */\n    const html = element.ownerDocument.documentElement;\n    /** @type {?} */\n    const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    /** @type {?} */\n    const width = Math.max(html.clientWidth, window.innerWidth || 0);\n    /** @type {?} */\n    const height = Math.max(html.clientHeight, window.innerHeight || 0);\n    /** @type {?} */\n    const scrollTop = !excludeScroll ? getScroll(html) : 0;\n    /** @type {?} */\n    const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n    /** @type {?} */\n    const offset = {\n        top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n        left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n        width,\n        height\n    };\n    return getClientRect(offset);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction isFixed(element) {\n    /** @type {?} */\n    const nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n        return true;\n    }\n    return isFixed(getParentNode(element));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @return {?}\n */\nfunction getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement || isIE()) {\n        return document.documentElement;\n    }\n    /** @type {?} */\n    let el = element.parentElement;\n    while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n        el = el.parentElement;\n    }\n    return el || document.documentElement;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} target\n * @param {?} host\n * @param {?=} padding\n * @param {?=} boundariesElement\n * @param {?=} fixedPosition\n * @return {?}\n */\nfunction getBoundaries(target, host, padding = 0, boundariesElement, fixedPosition = false) {\n    // NOTE: 1 DOM access here\n    // NOTE: 1 DOM access here\n    /** @type {?} */\n    let boundaries = { top: 0, left: 0 };\n    /** @type {?} */\n    const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n        boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    }\n    else {\n        // Handle other cases based on DOM element used as boundaries\n        /** @type {?} */\n        let boundariesNode;\n        if (boundariesElement === 'scrollParent') {\n            boundariesNode = getScrollParent(getParentNode(host));\n            if (boundariesNode.nodeName === 'BODY') {\n                boundariesNode = target.ownerDocument.documentElement;\n            }\n        }\n        else if (boundariesElement === 'window') {\n            boundariesNode = target.ownerDocument.documentElement;\n        }\n        else {\n            boundariesNode = boundariesElement;\n        }\n        /** @type {?} */\n        const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n        // In case of HTML, we need a different computation\n        if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n            const { height, width } = getWindowSizes(target.ownerDocument);\n            boundaries.top += offsets.top - offsets.marginTop;\n            boundaries.bottom = Number(height) + Number(offsets.top);\n            boundaries.left += offsets.left - offsets.marginLeft;\n            boundaries.right = Number(width) + Number(offsets.left);\n        }\n        else {\n            // for all the other DOM elements, this one is good\n            boundaries = offsets;\n        }\n    }\n    // Add paddings\n    boundaries.left += padding;\n    boundaries.top += padding;\n    boundaries.right -= padding;\n    boundaries.bottom -= padding;\n    return boundaries;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getArea({ width, height }) {\n    return width * height;\n}\n/**\n * @param {?} placement\n * @param {?} refRect\n * @param {?} target\n * @param {?} host\n * @param {?=} allowedPositions\n * @param {?=} boundariesElement\n * @param {?=} padding\n * @return {?}\n */\nfunction computeAutoPlacement(placement, refRect, target, host, allowedPositions = ['top', 'bottom', 'right', 'left'], boundariesElement = 'viewport', padding = 0) {\n    if (placement.indexOf('auto') === -1) {\n        return placement;\n    }\n    /** @type {?} */\n    const boundaries = getBoundaries(target, host, padding, boundariesElement);\n    /** @type {?} */\n    const rects = {\n        top: {\n            width: boundaries.width,\n            height: refRect.top - boundaries.top\n        },\n        right: {\n            width: boundaries.right - refRect.right,\n            height: boundaries.height\n        },\n        bottom: {\n            width: boundaries.width,\n            height: boundaries.bottom - refRect.bottom\n        },\n        left: {\n            width: refRect.left - boundaries.left,\n            height: boundaries.height\n        }\n    };\n    /** @type {?} */\n    const sortedAreas = Object.keys(rects)\n        .map(( /**\n * @param {?} key\n * @return {?}\n *//**\n * @param {?} key\n * @return {?}\n */ key => (Object.assign(Object.assign({ key }, rects[key]), { area: getArea(rects[key]) }))))\n        .sort(( /**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */(a, b) => b.area - a.area));\n    /** @type {?} */\n    let filteredAreas = sortedAreas.filter(( /**\n     * @param {?} __0\n     * @return {?}\n     */({ width, height }) => {\n        return width >= target.clientWidth\n            && height >= target.clientHeight;\n    }));\n    filteredAreas = filteredAreas.filter(( /**\n     * @param {?} position\n     * @return {?}\n     */(position) => {\n        return allowedPositions\n            .some(( /**\n     * @param {?} allowedPosition\n     * @return {?}\n     */(allowedPosition) => {\n            return allowedPosition === position.key;\n        }));\n    }));\n    /** @type {?} */\n    const computedPlacement = filteredAreas.length > 0\n        ? filteredAreas[0].key\n        : sortedAreas[0].key;\n    /** @type {?} */\n    const variation = placement.split(' ')[1];\n    // for tooltip on auto position\n    target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${computedPlacement}`);\n    return computedPlacement + (variation ? `-${variation}` : '');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @return {?}\n */\nfunction getOffsets(data) {\n    return {\n        width: data.offsets.target.width,\n        height: data.offsets.target.height,\n        left: Math.floor(data.offsets.target.left),\n        top: Math.round(data.offsets.target.top),\n        bottom: Math.round(data.offsets.target.bottom),\n        right: Math.floor(data.offsets.target.right)\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Get the opposite placement of the given one\n * @param {?} placement\n * @return {?}\n */\nfunction getOppositePlacement(placement) {\n    /** @type {?} */\n    const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n    return placement.replace(/left|right|bottom|top/g, ( /**\n     * @param {?} matched\n     * @return {?}\n     *//**\n     * @param {?} matched\n     * @return {?}\n     */ matched => (( /** @type {?} */(hash)))[matched]));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Get the opposite placement variation of the given one\n * @param {?} variation\n * @return {?}\n */\nfunction getOppositeVariation(variation) {\n    if (variation === 'right') {\n        return 'left';\n    }\n    else if (variation === 'left') {\n        return 'right';\n    }\n    return variation;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @param {?} element\n * @return {?}\n */\nfunction getOuterSizes(element) {\n    /** @type {?} */\n    const window = element.ownerDocument.defaultView;\n    /** @type {?} */\n    const styles = window.getComputedStyle(element);\n    /** @type {?} */\n    const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n    /** @type {?} */\n    const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n    return {\n        width: Number(element.offsetWidth) + y,\n        height: Number(element.offsetHeight) + x\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} target\n * @param {?} host\n * @param {?=} fixedPosition\n * @return {?}\n */\nfunction getReferenceOffsets(target, host, fixedPosition = null) {\n    /** @type {?} */\n    const commonOffsetParent = fixedPosition\n        ? getFixedPositionOffsetParent(target)\n        : findCommonOffsetParent(target, host);\n    return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} target\n * @param {?} hostOffsets\n * @param {?} position\n * @return {?}\n */\nfunction getTargetOffsets(target, hostOffsets, position) {\n    /** @type {?} */\n    const placement = position.split(' ')[0];\n    // Get target node sizes\n    /** @type {?} */\n    const targetRect = getOuterSizes(target);\n    // Add position, width and height to our offsets object\n    /** @type {?} */\n    const targetOffsets = {\n        width: targetRect.width,\n        height: targetRect.height\n    };\n    // depending by the target placement we have to compute its offsets slightly differently\n    /** @type {?} */\n    const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    /** @type {?} */\n    const mainSide = isHoriz ? 'top' : 'left';\n    /** @type {?} */\n    const secondarySide = isHoriz ? 'left' : 'top';\n    /** @type {?} */\n    const measurement = isHoriz ? 'height' : 'width';\n    /** @type {?} */\n    const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    (( /** @type {?} */(targetOffsets)))[mainSide] =\n        hostOffsets[mainSide] +\n            hostOffsets[measurement] / 2 -\n            targetRect[measurement] / 2;\n    (( /** @type {?} */(targetOffsets)))[secondarySide] = placement === secondarySide\n        ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement]\n        : (( /** @type {?} */(hostOffsets)))[getOppositePlacement(secondarySide)];\n    return targetOffsets;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper used to know if the given modifier is enabled.\n * @param {?} options\n * @param {?} modifierName\n * @return {?}\n */\nfunction isModifierEnabled(options, modifierName) {\n    return options\n        && options.modifiers\n        && options.modifiers[modifierName]\n        && options.modifiers[modifierName].enabled;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Tells if a given input is a number\n * @param {?} n\n * @return {?}\n */\nfunction isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @param {?=} renderer\n * @return {?}\n */\nfunction updateContainerClass(data, renderer) {\n    /** @type {?} */\n    const target = data.instance.target;\n    /** @type {?} */\n    let containerClass = target.className;\n    if (data.placementAuto) {\n        containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n        containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n        containerClass = containerClass.replace(/\\sauto/g, ` ${data.placement}`);\n        if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n            containerClass += ' popover-auto';\n        }\n        if (containerClass.indexOf('tooltip') !== -1 && containerClass.indexOf('tooltip-auto') === -1) {\n            containerClass += ' tooltip-auto';\n        }\n    }\n    containerClass = containerClass.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n    if (renderer) {\n        renderer.setAttribute(target, 'class', containerClass);\n        return;\n    }\n    target.className = containerClass;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} element\n * @param {?} styles\n * @param {?=} renderer\n * @return {?}\n */\nfunction setStyles(element, styles, renderer) {\n    Object.keys(styles).forEach(( /**\n     * @param {?} prop\n     * @return {?}\n     */(prop) => {\n        /** @type {?} */\n        let unit = '';\n        // add unit if the value is numeric and is one of the following\n        if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n            isNumeric(styles[prop])) {\n            unit = 'px';\n        }\n        if (renderer) {\n            renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n            return;\n        }\n        element.style[prop] = String(styles[prop]) + unit;\n    }));\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @return {?}\n */\nfunction arrow(data) {\n    /** @type {?} */\n    let targetOffsets = data.offsets.target;\n    // if arrowElement is a string, suppose it's a CSS selector\n    /** @type {?} */\n    const arrowElement = data.instance.target.querySelector('.arrow');\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n        return data;\n    }\n    /** @type {?} */\n    const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n    /** @type {?} */\n    const len = isVertical ? 'height' : 'width';\n    /** @type {?} */\n    const sideCapitalized = isVertical ? 'Top' : 'Left';\n    /** @type {?} */\n    const side = sideCapitalized.toLowerCase();\n    /** @type {?} */\n    const altSide = isVertical ? 'left' : 'top';\n    /** @type {?} */\n    const opSide = isVertical ? 'bottom' : 'right';\n    /** @type {?} */\n    const arrowElementSize = getOuterSizes(arrowElement)[len];\n    /** @type {?} */\n    const placementVariation = data.placement.split(' ')[1];\n    // top/left side\n    if (data.offsets.host[opSide] - arrowElementSize < (( /** @type {?} */(targetOffsets)))[side]) {\n        (( /** @type {?} */(targetOffsets)))[side] -=\n            (( /** @type {?} */(targetOffsets)))[side] - (data.offsets.host[opSide] - arrowElementSize);\n    }\n    // bottom/right side\n    if (Number((( /** @type {?} */(data))).offsets.host[side]) + Number(arrowElementSize) > (( /** @type {?} */(targetOffsets)))[opSide]) {\n        (( /** @type {?} */(targetOffsets)))[side] +=\n            Number((( /** @type {?} */(data))).offsets.host[side]) + Number(arrowElementSize) - Number((( /** @type {?} */(targetOffsets)))[opSide]);\n    }\n    targetOffsets = getClientRect(targetOffsets);\n    // Compute the sideValue using the updated target offsets\n    // take target margin in account because we don't have this info available\n    /** @type {?} */\n    const css = getStyleComputedProperty(data.instance.target);\n    /** @type {?} */\n    const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n    /** @type {?} */\n    const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n    // compute center of the target\n    /** @type {?} */\n    let center;\n    if (!placementVariation) {\n        center = Number((( /** @type {?} */(data))).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n    }\n    else {\n        /** @type {?} */\n        const targetBorderRadius = parseFloat(css.borderRadius);\n        /** @type {?} */\n        const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n        center = side === placementVariation ?\n            Number((( /** @type {?} */(data))).offsets.host[side]) + targetSideArrowOffset :\n            Number((( /** @type {?} */(data))).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n    }\n    /** @type {?} */\n    let sideValue = center - (( /** @type {?} */(targetOffsets)))[side] - targetMarginSide - targetBorderSide;\n    // prevent arrowElement from being placed not contiguously to its target\n    sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n    data.offsets.arrow = {\n        [side]: Math.round(sideValue),\n        [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n    };\n    data.instance.arrow = arrowElement;\n    return data;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @return {?}\n */\nfunction flip(data) {\n    data.offsets.target = getClientRect(data.offsets.target);\n    if (!isModifierEnabled(data.options, 'flip')) {\n        data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), getTargetOffsets(data.instance.target, data.offsets.host, data.placement));\n        return data;\n    }\n    /** @type {?} */\n    const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n    'viewport', false // positionFixed\n    );\n    /** @type {?} */\n    let placement = data.placement.split(' ')[0];\n    /** @type {?} */\n    let variation = data.placement.split(' ')[1] || '';\n    /** @type {?} */\n    const offsetsHost = data.offsets.host;\n    /** @type {?} */\n    const target = data.instance.target;\n    /** @type {?} */\n    const host = data.instance.host;\n    /** @type {?} */\n    const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n    /** @type {?} */\n    const flipOrder = [placement, adaptivePosition];\n    /* tslint:disable-next-line: cyclomatic-complexity */\n    flipOrder.forEach(( /**\n     * @param {?} step\n     * @param {?} index\n     * @return {?}\n     */(step, index) => {\n        if (placement !== step || flipOrder.length === index + 1) {\n            return data;\n        }\n        placement = data.placement.split(' ')[0];\n        // using floor because the host offsets may contain decimals we are not going to consider here\n        /** @type {?} */\n        const overlapsRef = (placement === 'left' &&\n            Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left)) ||\n            (placement === 'right' &&\n                Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right)) ||\n            (placement === 'top' &&\n                Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top)) ||\n            (placement === 'bottom' &&\n                Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom));\n        /** @type {?} */\n        const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n        /** @type {?} */\n        const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n        /** @type {?} */\n        const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n        /** @type {?} */\n        const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n        /** @type {?} */\n        const overflowsBoundaries = (placement === 'left' && overflowsLeft) ||\n            (placement === 'right' && overflowsRight) ||\n            (placement === 'top' && overflowsTop) ||\n            (placement === 'bottom' && overflowsBottom);\n        // flip the variation if required\n        /** @type {?} */\n        const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n        /** @type {?} */\n        const flippedVariation = ((isVertical && variation === 'left' && overflowsLeft) ||\n            (isVertical && variation === 'right' && overflowsRight) ||\n            (!isVertical && variation === 'left' && overflowsTop) ||\n            (!isVertical && variation === 'right' && overflowsBottom));\n        if (overlapsRef || overflowsBoundaries || flippedVariation) {\n            if (overlapsRef || overflowsBoundaries) {\n                placement = flipOrder[index + 1];\n            }\n            if (flippedVariation) {\n                variation = getOppositeVariation(variation);\n            }\n            data.placement = placement + (variation ? ` ${variation}` : '');\n            data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), getTargetOffsets(data.instance.target, data.offsets.host, data.placement));\n        }\n    }));\n    return data;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} targetElement\n * @param {?} hostElement\n * @param {?} position\n * @param {?} options\n * @return {?}\n */\nfunction initData(targetElement, hostElement, position, options) {\n    /** @type {?} */\n    const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n    if (!position.match(/^(auto)*\\s*(left|right|top|bottom)*$/)\n        && !position.match(/^(left|right|top|bottom)*(?: (left|right|top|bottom))?\\s*(start|end)*$/)) {\n        /* tslint:disable-next-line: no-parameter-reassignment */\n        position = 'auto';\n    }\n    /** @type {?} */\n    const placementAuto = !!position.match(/auto/g);\n    // support old placements 'auto left|right|top|bottom'\n    /** @type {?} */\n    let placement = position.match(/auto\\s(left|right|top|bottom)/)\n        ? position.split(' ')[1] || 'auto'\n        : position;\n    // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n    /** @type {?} */\n    const matches = placement.match(/^(left|right|top|bottom)* ?(?!\\1)(left|right|top|bottom)?/);\n    if (matches) {\n        placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n    }\n    // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n    if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n        placement = 'auto';\n    }\n    /** @type {?} */\n    const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n    placement = computeAutoPlacement(placement, hostElPosition, targetElement, hostElement, options ? options.allowedPositions : undefined);\n    return {\n        options,\n        instance: {\n            target: targetElement,\n            host: hostElement,\n            arrow: null\n        },\n        offsets: {\n            target: targetOffset,\n            host: hostElPosition,\n            arrow: null\n        },\n        positionFixed: false,\n        placement,\n        placementAuto\n    };\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @return {?}\n */\nfunction preventOverflow(data) {\n    if (!isModifierEnabled(data.options, 'preventOverflow')) {\n        return data;\n    }\n    // NOTE: DOM access here\n    // resets the targetOffsets's position so that the document size can be calculated excluding\n    // the size of the targetOffsets element itself\n    /** @type {?} */\n    const transformProp = 'transform';\n    /** @type {?} */\n    const targetStyles = data.instance.target.style;\n    // assignment to help minification\n    const { top, left, [transformProp]: transform } = targetStyles;\n    targetStyles.top = '';\n    targetStyles.left = '';\n    targetStyles[transformProp] = '';\n    /** @type {?} */\n    const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n    'scrollParent', false // positionFixed\n    );\n    // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n    targetStyles.top = top;\n    targetStyles.left = left;\n    targetStyles[transformProp] = transform;\n    /** @type {?} */\n    const order = ['left', 'right', 'top', 'bottom'];\n    /** @type {?} */\n    const check = {\n        /**\n         * @param {?} placement\n         * @return {?}\n         */\n        primary(placement) {\n            /** @type {?} */\n            let value = (( /** @type {?} */(data))).offsets.target[placement];\n            if ((( /** @type {?} */(data))).offsets.target[placement] < boundaries[placement] &&\n                !false // options.escapeWithReference\n            ) {\n                value = Math.max((( /** @type {?} */(data))).offsets.target[placement], boundaries[placement]);\n            }\n            return { [placement]: value };\n        },\n        /**\n         * @param {?} placement\n         * @return {?}\n         */\n        secondary(placement) {\n            /** @type {?} */\n            const mainSide = placement === 'right' ? 'left' : 'top';\n            /** @type {?} */\n            let value = data.offsets.target[mainSide];\n            if ((( /** @type {?} */(data))).offsets.target[placement] > boundaries[placement] &&\n                !false // escapeWithReference\n            ) {\n                value = Math.min(data.offsets.target[mainSide], boundaries[placement] -\n                    (placement === 'right' ? data.offsets.target.width : data.offsets.target.height));\n            }\n            return { [mainSide]: value };\n        }\n    };\n    /** @type {?} */\n    let side;\n    order.forEach(( /**\n     * @param {?} placement\n     * @return {?}\n     *//**\n     * @param {?} placement\n     * @return {?}\n     */ placement => {\n        side = ['left', 'top']\n            .indexOf(placement) !== -1\n            ? 'primary'\n            : 'secondary';\n        data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), (( /** @type {?} */(check)))[side](placement));\n    }));\n    return data;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} data\n * @return {?}\n */\nfunction shift(data) {\n    /** @type {?} */\n    const placement = data.placement;\n    /** @type {?} */\n    const basePlacement = placement.split(' ')[0];\n    /** @type {?} */\n    const shiftVariation = placement.split(' ')[1];\n    if (shiftVariation) {\n        const { host, target } = data.offsets;\n        /** @type {?} */\n        const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n        /** @type {?} */\n        const side = isVertical ? 'left' : 'top';\n        /** @type {?} */\n        const measurement = isVertical ? 'width' : 'height';\n        /** @type {?} */\n        const shiftOffsets = {\n            start: { [side]: host[side] },\n            end: {\n                [side]: host[side] + host[measurement] - target[measurement]\n            }\n        };\n        data.offsets.target = Object.assign(Object.assign({}, target), {\n            [side]: (side === shiftVariation ? (( /** @type {?} */(shiftOffsets))).start[side] : (( /** @type {?} */(shiftOffsets))).end[side])\n        });\n    }\n    return data;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Positioning {\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?=} round\n     * @return {?}\n     */\n    position(hostElement, targetElement, round = true) {\n        return this.offset(hostElement, targetElement, false);\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?=} round\n     * @return {?}\n     */\n    offset(hostElement, targetElement, round = true) {\n        return getReferenceOffsets(targetElement, hostElement);\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?} position\n     * @param {?=} appendToBody\n     * @param {?=} options\n     * @return {?}\n     */\n    positionElements(hostElement, targetElement, position, appendToBody, options) {\n        /** @type {?} */\n        const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n        return chainOfModifiers.reduce(( /**\n         * @param {?} modifiedData\n         * @param {?} modifier\n         * @return {?}\n         */(modifiedData, modifier) => modifier(modifiedData)), initData(targetElement, hostElement, position, options));\n    }\n}\n/** @type {?} */\nconst positionService = new Positioning();\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @param {?=} options\n * @param {?=} renderer\n * @return {?}\n */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, options, renderer) {\n    /** @type {?} */\n    const data = positionService.positionElements(hostElement, targetElement, placement, appendToBody, options);\n    /** @type {?} */\n    const offsets = getOffsets(data);\n    setStyles(targetElement, {\n        'will-change': 'transform',\n        top: '0px',\n        left: '0px',\n        transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n    }, renderer);\n    if (data.instance.arrow) {\n        setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n    }\n    updateContainerClass(data, renderer);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction PositioningOptions() { }\nif (false) {}\nlet ngx_bootstrap_positioning_PositioningService = /*@__PURE__*/ (() => {\n    class PositioningService {\n        /**\n         * @param {?} ngZone\n         * @param {?} rendererFactory\n         * @param {?} platformId\n         */\n        constructor(ngZone, rendererFactory, platformId) {\n            this.update$$ = new Subject[\"a\" /* Subject */]();\n            this.positionElements = new Map();\n            this.isDisabled = false;\n            if (Object(common[\"z\" /* isPlatformBrowser */])(platformId)) {\n                ngZone.runOutsideAngular(( /**\n                 * @return {?}\n                 */() => {\n                    this.triggerEvent$ = Object(merge[\"a\" /* merge */])(Object(fromEvent[\"a\" /* fromEvent */])(window, 'scroll', { passive: true }), Object(fromEvent[\"a\" /* fromEvent */])(window, 'resize', { passive: true }), \n                    /* tslint:disable-next-line: deprecation */\n                    Object(of[\"a\" /* of */])(0, animationFrame[\"a\" /* animationFrameScheduler */]), this.update$$);\n                    this.triggerEvent$.subscribe(( /**\n                     * @return {?}\n                     */() => {\n                        if (this.isDisabled) {\n                            return;\n                        }\n                        this.positionElements\n                            /* tslint:disable-next-line: no-any */\n                            .forEach(( /**\n                     * @param {?} positionElement\n                     * @return {?}\n                     */(positionElement) => {\n                            positionElements(_getHtmlElement(positionElement.target), _getHtmlElement(positionElement.element), positionElement.attachment, positionElement.appendToBody, this.options, rendererFactory.createRenderer(null, null));\n                        }));\n                    }));\n                }));\n            }\n        }\n        /**\n         * @param {?} options\n         * @return {?}\n         */\n        position(options) {\n            this.addPositionElement(options);\n        }\n        /**\n         * @return {?}\n         */\n        get event$() {\n            return this.triggerEvent$;\n        }\n        /**\n         * @return {?}\n         */\n        disable() {\n            this.isDisabled = true;\n        }\n        /**\n         * @return {?}\n         */\n        enable() {\n            this.isDisabled = false;\n        }\n        /**\n         * @param {?} options\n         * @return {?}\n         */\n        addPositionElement(options) {\n            this.positionElements.set(_getHtmlElement(options.element), options);\n        }\n        /**\n         * @return {?}\n         */\n        calcPosition() {\n            this.update$$.next();\n        }\n        /**\n         * @param {?} elRef\n         * @return {?}\n         */\n        deletePositionElement(elRef) {\n            this.positionElements.delete(_getHtmlElement(elRef));\n        }\n        /**\n         * @param {?} options\n         * @return {?}\n         */\n        setOptions(options) {\n            this.options = options;\n        }\n    }\n    PositioningService.ɵfac = function PositioningService_Factory(t) { return new (t || PositioningService)(core[\"Yb\" /* ɵɵinject */](core[\"A\" /* NgZone */]), core[\"Yb\" /* ɵɵinject */](core[\"F\" /* RendererFactory2 */]), core[\"Yb\" /* ɵɵinject */](core[\"C\" /* PLATFORM_ID */])); };\n    PositioningService.ɵprov = core[\"Hb\" /* ɵɵdefineInjectable */]({ token: PositioningService, factory: PositioningService.ɵfac });\n    return PositioningService;\n})();\nif (false) {}\n/**\n * @param {?} element\n * @return {?}\n */\nfunction _getHtmlElement(element) {\n    // it means that we got a selector\n    if (typeof element === 'string') {\n        return document.querySelector(element);\n    }\n    if (element instanceof core[\"l\" /* ElementRef */]) {\n        return element.nativeElement;\n    }\n    return element;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n//# sourceMappingURL=ngx-bootstrap-positioning.js.map\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/component-loader/fesm2015/ngx-bootstrap-component-loader.js\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\n\n\nclass BsComponentRef {\n}\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nclass ContentRef {\n    /**\n     * @param {?} nodes\n     * @param {?=} viewRef\n     * @param {?=} componentRef\n     */\n    constructor(\n    /* tslint:disable-next-line: no-any */\n    nodes, viewRef, \n    /* tslint:disable-next-line: no-any */\n    componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ngx_bootstrap_component_loader_ComponentLoader {\n    /**\n     * Do not use this directly, it should be instanced via\n     * `ComponentLoadFactory.attach`\n     * \\@internal\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _injector\n     * @param {?} _componentFactoryResolver\n     * @param {?} _ngZone\n     * @param {?} _applicationRef\n     * @param {?} _posService\n     */\n    // tslint:disable-next-line\n    constructor(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._injector = _injector;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._ngZone = _ngZone;\n        this._applicationRef = _applicationRef;\n        this._posService = _posService;\n        this.onBeforeShow = new core[\"n\" /* EventEmitter */]();\n        /* tslint:disable-next-line: no-any*/\n        this.onShown = new core[\"n\" /* EventEmitter */]();\n        /* tslint:disable-next-line: no-any*/\n        this.onBeforeHide = new core[\"n\" /* EventEmitter */]();\n        this.onHidden = new core[\"n\" /* EventEmitter */]();\n        this._providers = [];\n        this._isHiding = false;\n        /**\n         * A selector used if container element was not found\n         */\n        this.containerDefaultSelector = 'body';\n        this._listenOpts = {};\n        this._globalListener = Function.prototype;\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        if (this._isHiding) {\n            return false;\n        }\n        return !!this._componentRef;\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n    attach(compType) {\n        this._componentFactory = this._componentFactoryResolver\n            .resolveComponentFactory(compType);\n        return this;\n    }\n    // todo: add behaviour: to target element, `body`, custom element\n    /**\n     * @param {?=} container\n     * @return {?}\n     */\n    to(container) {\n        this.container = container || this.container;\n        return this;\n    }\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    position(opts) {\n        this.attachment = opts.attachment || this.attachment;\n        /* tslint:disable-next-line: no-unnecessary-type-assertion */\n        this._elementRef = (( /** @type {?} */(opts.target))) || this._elementRef;\n        return this;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    provide(provider) {\n        this._providers.push(provider);\n        return this;\n    }\n    // todo: appendChild to element or document.querySelector(this.container)\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    show(opts = {}) {\n        this._subscribePositioning();\n        this._innerComponent = null;\n        if (!this._componentRef) {\n            this.onBeforeShow.emit();\n            this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n            /** @type {?} */\n            const injector = core[\"s\" /* Injector */].create({\n                providers: this._providers,\n                parent: this._injector\n            });\n            this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n            this._applicationRef.attachView(this._componentRef.hostView);\n            // this._componentRef = this._viewContainerRef\n            //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n            this.instance = this._componentRef.instance;\n            Object.assign(this._componentRef.instance, opts);\n            if (this.container instanceof core[\"l\" /* ElementRef */]) {\n                this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            if (typeof this.container === 'string' && typeof document !== 'undefined') {\n                /** @type {?} */\n                const selectedElement = document.querySelector(this.container) ||\n                    document.querySelector(this.containerDefaultSelector);\n                selectedElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            if (!this.container &&\n                this._elementRef &&\n                this._elementRef.nativeElement.parentElement) {\n                this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            // we need to manually invoke change detection since events registered\n            // via\n            // Renderer::listen() are not picked up by change detection with the\n            // OnPush strategy\n            if (this._contentRef.componentRef) {\n                this._innerComponent = this._contentRef.componentRef.instance;\n                this._contentRef.componentRef.changeDetectorRef.markForCheck();\n                this._contentRef.componentRef.changeDetectorRef.detectChanges();\n            }\n            this._componentRef.changeDetectorRef.markForCheck();\n            this._componentRef.changeDetectorRef.detectChanges();\n            this.onShown.emit(opts.id ? { id: opts.id } : this._componentRef.instance);\n        }\n        this._registerOutsideClick();\n        return this._componentRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    hide(id) {\n        if (!this._componentRef) {\n            return this;\n        }\n        this._posService.deletePositionElement(this._componentRef.location);\n        this.onBeforeHide.emit(this._componentRef.instance);\n        /** @type {?} */\n        const componentEl = this._componentRef.location.nativeElement;\n        componentEl.parentNode.removeChild(componentEl);\n        if (this._contentRef.componentRef) {\n            this._contentRef.componentRef.destroy();\n        }\n        if (this._viewContainerRef && this._contentRef.viewRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        }\n        if (this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._contentRef = null;\n        this._componentRef = null;\n        this._removeGlobalListener();\n        this.onHidden.emit(id ? { id } : null);\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    toggle() {\n        if (this.isShown) {\n            this.hide();\n            return;\n        }\n        this.show();\n    }\n    /**\n     * @return {?}\n     */\n    dispose() {\n        if (this.isShown) {\n            this.hide();\n        }\n        this._unsubscribePositioning();\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n    }\n    /**\n     * @param {?} listenOpts\n     * @return {?}\n     */\n    listen(listenOpts) {\n        this.triggers = listenOpts.triggers || this.triggers;\n        this._listenOpts.outsideClick = listenOpts.outsideClick;\n        this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n        listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n        /** @type {?} */\n        const hide = (this._listenOpts.hide = ( /**\n         * @return {?}\n         */() => listenOpts.hide ? listenOpts.hide() : void this.hide()));\n        /** @type {?} */\n        const show = (this._listenOpts.show = ( /**\n         * @param {?} registerHide\n         * @return {?}\n         */(registerHide) => {\n            listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n            registerHide();\n        }));\n        /** @type {?} */\n        const toggle = ( /**\n         * @param {?} registerHide\n         * @return {?}\n         */(registerHide) => {\n            this.isShown ? hide() : show(registerHide);\n        });\n        this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n            target: listenOpts.target,\n            triggers: listenOpts.triggers,\n            show,\n            hide,\n            toggle\n        });\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalListener) {\n            this._globalListener();\n            this._globalListener = null;\n        }\n    }\n    /**\n     * @param {?} vRef\n     * @param {?} template\n     * @return {?}\n     */\n    attachInline(vRef, \n    /* tslint:disable-next-line: no-any*/\n    template) {\n        this._inlineViewRef = vRef.createEmbeddedView(template);\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    _registerOutsideClick() {\n        if (!this._componentRef || !this._componentRef.location) {\n            return;\n        }\n        // why: should run after first event bubble\n        if (this._listenOpts.outsideClick) {\n            /** @type {?} */\n            const target = this._componentRef.location.nativeElement;\n            setTimeout(( /**\n             * @return {?}\n             */() => {\n                this._globalListener = registerOutsideClick(this._renderer, {\n                    targets: [target, this._elementRef.nativeElement],\n                    outsideClick: this._listenOpts.outsideClick,\n                    hide: ( /**\n                     * @return {?}\n                     */() => this._listenOpts.hide())\n                });\n            }));\n        }\n        if (this._listenOpts.outsideEsc) {\n            /** @type {?} */\n            const target = this._componentRef.location.nativeElement;\n            this._globalListener = registerEscClick(this._renderer, {\n                targets: [target, this._elementRef.nativeElement],\n                outsideEsc: this._listenOpts.outsideEsc,\n                hide: ( /**\n                 * @return {?}\n                 */() => this._listenOpts.hide())\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getInnerComponent() {\n        return this._innerComponent;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribePositioning() {\n        if (this._zoneSubscription || !this.attachment) {\n            return;\n        }\n        this.onShown.subscribe(( /**\n         * @return {?}\n         */() => {\n            this._posService.position({\n                element: this._componentRef.location,\n                target: this._elementRef,\n                attachment: this.attachment,\n                appendToBody: this.container === 'body'\n            });\n        }));\n        this._zoneSubscription = this._ngZone.onStable.subscribe(( /**\n         * @return {?}\n         */() => {\n            if (!this._componentRef) {\n                return;\n            }\n            this._posService.calcPosition();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribePositioning() {\n        if (!this._zoneSubscription) {\n            return;\n        }\n        this._zoneSubscription.unsubscribe();\n        this._zoneSubscription = null;\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @param {?=} initialState\n     * @return {?}\n     */\n    _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content, \n    /* tslint:disable-next-line: no-any*/\n    context, \n    /* tslint:disable-next-line: no-any*/\n    initialState) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        if (content instanceof core[\"L\" /* TemplateRef */]) {\n            if (this._viewContainerRef) {\n                /** @type {?} */\n                const _viewRef = this._viewContainerRef\n                    .createEmbeddedView(content, context);\n                _viewRef.markForCheck();\n                return new ContentRef([_viewRef.rootNodes], _viewRef);\n            }\n            /** @type {?} */\n            const viewRef = content.createEmbeddedView({});\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        if (typeof content === 'function') {\n            /** @type {?} */\n            const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n            /** @type {?} */\n            const modalContentInjector = core[\"s\" /* Injector */].create({\n                providers: this._providers,\n                parent: this._injector\n            });\n            /** @type {?} */\n            const componentRef = contentCmptFactory.create(modalContentInjector);\n            Object.assign(componentRef.instance, initialState);\n            this._applicationRef.attachView(componentRef.hostView);\n            return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n        }\n        return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n}\nif (false) {}\nlet ngx_bootstrap_component_loader_ComponentLoaderFactory = /*@__PURE__*/ (() => {\n    class ComponentLoaderFactory {\n        /**\n         * @param {?} _componentFactoryResolver\n         * @param {?} _ngZone\n         * @param {?} _injector\n         * @param {?} _posService\n         * @param {?} _applicationRef\n         */\n        constructor(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._ngZone = _ngZone;\n            this._injector = _injector;\n            this._posService = _posService;\n            this._applicationRef = _applicationRef;\n        }\n        /**\n         *\n         * @template T\n         * @param {?} _elementRef\n         * @param {?} _viewContainerRef\n         * @param {?} _renderer\n         * @return {?}\n         */\n        createLoader(_elementRef, _viewContainerRef, _renderer) {\n            return new ngx_bootstrap_component_loader_ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n        }\n    }\n    ComponentLoaderFactory.ɵfac = function ComponentLoaderFactory_Factory(t) { return new (t || ComponentLoaderFactory)(core[\"Yb\" /* ɵɵinject */](core[\"j\" /* ComponentFactoryResolver */]), core[\"Yb\" /* ɵɵinject */](core[\"A\" /* NgZone */]), core[\"Yb\" /* ɵɵinject */](core[\"s\" /* Injector */]), core[\"Yb\" /* ɵɵinject */](ngx_bootstrap_positioning_PositioningService), core[\"Yb\" /* ɵɵinject */](core[\"g\" /* ApplicationRef */])); };\n    ComponentLoaderFactory.ɵprov = core[\"Hb\" /* ɵɵdefineInjectable */]({ token: ComponentLoaderFactory, factory: ComponentLoaderFactory.ɵfac });\n    return ComponentLoaderFactory;\n})();\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n//# sourceMappingURL=ngx-bootstrap-component-loader.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/observable/timer.js + 1 modules\nvar timer = __webpack_require__(\"PqYM\");\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/popover/fesm2015/ngx-bootstrap-popover.js\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration service for the Popover directive.\n * You can inject this service, typically in your root component, and customize\n * the values of its properties in order to provide default values for all the\n * popovers used in the application.\n */\n\n\n\n\nfunction PopoverContainerComponent_h3_1_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"h3\", 3);\n        core[\"Ic\" /* ɵɵtext */](1);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r0 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Jc\" /* ɵɵtextInterpolate */](ctx_r0.title);\n    }\n}\nconst _c0 = [\"*\"];\nlet ngx_bootstrap_popover_PopoverConfig = /*@__PURE__*/ (() => {\n    class PopoverConfig {\n        constructor() {\n            /**\n             * sets disable adaptive position\n             */\n            this.adaptivePosition = true;\n            /**\n             * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\n             */\n            this.placement = 'top';\n            /**\n             * Specifies events that should trigger. Supports a space separated list of\n             * event names.\n             */\n            this.triggers = 'click';\n            this.outsideClick = false;\n            /**\n             * delay before showing the tooltip\n             */\n            this.delay = 0;\n        }\n    }\n    PopoverConfig.ɵfac = function PopoverConfig_Factory(t) { return new (t || PopoverConfig)(); };\n    /** @nocollapse */ PopoverConfig.ɵprov = Object(core[\"Hb\" /* ɵɵdefineInjectable */])({ factory: function PopoverConfig_Factory() { return new PopoverConfig(); }, token: PopoverConfig, providedIn: \"root\" });\n    return PopoverConfig;\n})();\nif (false) {}\nlet ngx_bootstrap_popover_PopoverContainerComponent = /*@__PURE__*/ (() => {\n    class PopoverContainerComponent {\n        /**\n         * @param {?} config\n         */\n        constructor(config) {\n            Object.assign(this, config);\n        }\n        /**\n         * @return {?}\n         */\n        get isBs3() {\n            return isBs3();\n        }\n    }\n    PopoverContainerComponent.ɵfac = function PopoverContainerComponent_Factory(t) { return new (t || PopoverContainerComponent)(core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_popover_PopoverConfig)); };\n    PopoverContainerComponent.ɵcmp = core[\"Fb\" /* ɵɵdefineComponent */]({ type: PopoverContainerComponent, selectors: [[\"popover-container\"]], hostAttrs: [\"role\", \"tooltip\", 2, \"display\", \"block\"], hostVars: 7, hostBindings: function PopoverContainerComponent_HostBindings(rf, ctx) {\n            if (rf & 2) {\n                core[\"zb\" /* ɵɵattribute */](\"id\", ctx.popoverId);\n                core[\"Ab\" /* ɵɵclassMap */](\"popover in popover-\" + ctx.placement + \" \" + \"bs-popover-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n                core[\"Db\" /* ɵɵclassProp */](\"show\", !ctx.isBs3)(\"bs3\", ctx.isBs3);\n            }\n        }, inputs: { placement: \"placement\", title: \"title\" }, ngContentSelectors: _c0, decls: 4, vars: 1, consts: [[1, \"popover-arrow\", \"arrow\"], [\"class\", \"popover-title popover-header\", 4, \"ngIf\"], [1, \"popover-content\", \"popover-body\"], [1, \"popover-title\", \"popover-header\"]], template: function PopoverContainerComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"ic\" /* ɵɵprojectionDef */]();\n                core[\"Mb\" /* ɵɵelement */](0, \"div\", 0);\n                core[\"Gc\" /* ɵɵtemplate */](1, PopoverContainerComponent_h3_1_Template, 2, 1, \"h3\", 1);\n                core[\"Rb\" /* ɵɵelementStart */](2, \"div\", 2);\n                core[\"hc\" /* ɵɵprojection */](3);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.title);\n            }\n        }, directives: [common[\"n\" /* NgIf */]], styles: [\".bs3.popover-top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -2px;\\n    }\\n    .bs3.popover.top[_nghost-%COMP%] {\\n      margin-bottom: 10px;\\n    }\\n    .popover.bottom[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%] {\\n      margin-left: -4px;\\n    }\\n    .bs3.bs-popover-left[_nghost-%COMP%] {\\n      margin-right: .5rem;\\n    }\\n    .bs3.bs-popover-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-popover-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{\\n      margin: .3rem 0;\\n    }\"], changeDetection: 0 });\n    return PopoverContainerComponent;\n})();\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet id = 0;\nlet ngx_bootstrap_popover_PopoverDirective = /*@__PURE__*/ (() => {\n    class PopoverDirective {\n        /**\n         * @param {?} _config\n         * @param {?} _elementRef\n         * @param {?} _renderer\n         * @param {?} _viewContainerRef\n         * @param {?} cis\n         * @param {?} _positionService\n         */\n        constructor(_config, _elementRef, _renderer, _viewContainerRef, cis, _positionService) {\n            this._elementRef = _elementRef;\n            this._renderer = _renderer;\n            this._positionService = _positionService;\n            /**\n             * unique id popover - use for aria-describedby\n             */\n            this.popoverId = id++;\n            /**\n             * Close popover on outside click\n             */\n            this.outsideClick = false;\n            /**\n             * Css class for popover container\n             */\n            this.containerClass = '';\n            this._isInited = false;\n            this._popover = cis\n                .createLoader(_elementRef, _viewContainerRef, _renderer)\n                .provide({ provide: ngx_bootstrap_popover_PopoverConfig, useValue: _config });\n            Object.assign(this, _config);\n            this.onShown = this._popover.onShown;\n            this.onHidden = this._popover.onHidden;\n            // fix: no focus on button on Mac OS #1795\n            if (typeof window !== 'undefined') {\n                _elementRef.nativeElement.addEventListener('click', ( /**\n                 * @return {?}\n                 */function () {\n                    try {\n                        _elementRef.nativeElement.focus();\n                    }\n                    catch (err) {\n                        return;\n                    }\n                }));\n            }\n        }\n        /**\n         * Returns whether or not the popover is currently being shown\n         * @return {?}\n         */\n        get isOpen() {\n            return this._popover.isShown;\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set isOpen(value) {\n            if (value) {\n                this.show();\n            }\n            else {\n                this.hide();\n            }\n        }\n        /**\n         * Set attribute aria-describedBy for element directive and\n         * set id for the popover\n         * @return {?}\n         */\n        setAriaDescribedBy() {\n            this._ariaDescribedby = this.isOpen ? `ngx-popover-${this.popoverId}` : null;\n            if (this._ariaDescribedby) {\n                this._popover.instance.popoverId = this._ariaDescribedby;\n                this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n            }\n            else {\n                this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            }\n        }\n        /**\n         * Opens an element’s popover. This is considered a “manual” triggering of\n         * the popover.\n         * @return {?}\n         */\n        show() {\n            if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n                return;\n            }\n            this._positionService.setOptions({\n                modifiers: {\n                    flip: {\n                        enabled: this.adaptivePosition\n                    },\n                    preventOverflow: {\n                        enabled: this.adaptivePosition\n                    }\n                }\n            });\n            /** @type {?} */\n            const showPopover = ( /**\n             * @return {?}\n             */() => {\n                if (this._delayTimeoutId) {\n                    this._delayTimeoutId = undefined;\n                }\n                this._popover\n                    .attach(ngx_bootstrap_popover_PopoverContainerComponent)\n                    .to(this.container)\n                    .position({ attachment: this.placement })\n                    .show({\n                    content: this.popover,\n                    context: this.popoverContext,\n                    placement: this.placement,\n                    title: this.popoverTitle,\n                    containerClass: this.containerClass\n                });\n                if (!this.adaptivePosition) {\n                    this._positionService.calcPosition();\n                    this._positionService.deletePositionElement(this._popover._componentRef.location);\n                }\n                this.isOpen = true;\n                this.setAriaDescribedBy();\n            });\n            /** @type {?} */\n            const cancelDelayedTooltipShowing = ( /**\n             * @return {?}\n             */() => {\n                if (this._popoverCancelShowFn) {\n                    this._popoverCancelShowFn();\n                }\n            });\n            if (this.delay) {\n                /** @type {?} */\n                const _timer = Object(timer[\"a\" /* timer */])(this.delay).subscribe(( /**\n                 * @return {?}\n                 */() => {\n                    showPopover();\n                    cancelDelayedTooltipShowing();\n                }));\n                if (this.triggers) {\n                    parseTriggers(this.triggers)\n                        .forEach(( /**\n                 * @param {?} trigger\n                 * @return {?}\n                 */(trigger) => {\n                        this._popoverCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, ( /**\n                         * @return {?}\n                         */() => {\n                            _timer.unsubscribe();\n                            cancelDelayedTooltipShowing();\n                        }));\n                    }));\n                }\n            }\n            else {\n                showPopover();\n            }\n        }\n        /**\n         * Closes an element’s popover. This is considered a “manual” triggering of\n         * the popover.\n         * @return {?}\n         */\n        hide() {\n            if (this._delayTimeoutId) {\n                clearTimeout(this._delayTimeoutId);\n                this._delayTimeoutId = undefined;\n            }\n            if (this.isOpen) {\n                this._popover.hide();\n                this.setAriaDescribedBy();\n                this.isOpen = false;\n            }\n        }\n        /**\n         * Toggles an element’s popover. This is considered a “manual” triggering of\n         * the popover.\n         * @return {?}\n         */\n        toggle() {\n            if (this.isOpen) {\n                return this.hide();\n            }\n            this.show();\n        }\n        /**\n         * @return {?}\n         */\n        ngOnInit() {\n            // fix: seems there are an issue with `routerLinkActive`\n            // which result in duplicated call ngOnInit without call to ngOnDestroy\n            // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n            if (this._isInited) {\n                return;\n            }\n            this._isInited = true;\n            this._popover.listen({\n                triggers: this.triggers,\n                outsideClick: this.outsideClick,\n                show: ( /**\n                 * @return {?}\n                 */() => this.show()),\n                hide: ( /**\n                 * @return {?}\n                 */() => this.hide())\n            });\n        }\n        /**\n         * @return {?}\n         */\n        ngOnDestroy() {\n            this._popover.dispose();\n        }\n    }\n    PopoverDirective.ɵfac = function PopoverDirective_Factory(t) { return new (t || PopoverDirective)(core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_popover_PopoverConfig), core[\"Lb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */]), core[\"Lb\" /* ɵɵdirectiveInject */](core[\"E\" /* Renderer2 */]), core[\"Lb\" /* ɵɵdirectiveInject */](core[\"P\" /* ViewContainerRef */]), core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_component_loader_ComponentLoaderFactory), core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_positioning_PositioningService)); };\n    PopoverDirective.ɵdir = core[\"Gb\" /* ɵɵdefineDirective */]({ type: PopoverDirective, selectors: [[\"\", \"popover\", \"\"]], inputs: { outsideClick: \"outsideClick\", containerClass: \"containerClass\", isOpen: \"isOpen\", adaptivePosition: \"adaptivePosition\", popover: \"popover\", popoverContext: \"popoverContext\", popoverTitle: \"popoverTitle\", placement: \"placement\", triggers: \"triggers\", container: \"container\", delay: \"delay\" }, outputs: { onShown: \"onShown\", onHidden: \"onHidden\" }, exportAs: [\"bs-popover\"] });\n    return PopoverDirective;\n})();\nif (false) {}\nlet ngx_bootstrap_popover_PopoverModule = /*@__PURE__*/ (() => {\n    class PopoverModule {\n        /**\n         * @return {?}\n         */\n        static forRoot() {\n            return {\n                ngModule: PopoverModule,\n                providers: [ngx_bootstrap_component_loader_ComponentLoaderFactory, ngx_bootstrap_positioning_PositioningService]\n            };\n        }\n    }\n    PopoverModule.ɵmod = core[\"Jb\" /* ɵɵdefineNgModule */]({ type: PopoverModule });\n    PopoverModule.ɵinj = core[\"Ib\" /* ɵɵdefineInjector */]({ factory: function PopoverModule_Factory(t) { return new (t || PopoverModule)(); }, imports: [[common[\"c\" /* CommonModule */]]] });\n    return PopoverModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Ac\" /* ɵɵsetNgModuleScope */](ngx_bootstrap_popover_PopoverModule, { declarations: function () { return [ngx_bootstrap_popover_PopoverDirective, ngx_bootstrap_popover_PopoverContainerComponent]; }, imports: function () { return [common[\"c\" /* CommonModule */]]; }, exports: function () { return [ngx_bootstrap_popover_PopoverDirective]; } }); })();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n//# sourceMappingURL=ngx-bootstrap-popover.js.map\n\n\n/***/ }),\n\n/***/ \"njyG\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* reexport */ angular_datatables_directive_DataTableDirective; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* reexport */ angular_datatables_module_DataTablesModule; });\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// CONCATENATED MODULE: ./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n\n\nvar angular_datatables_directive_DataTableDirective = /** @class */ /*@__PURE__*/ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ɵfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(core[\"Lb\" /* ɵɵdirectiveInject */](core[\"l\" /* ElementRef */])); };\n    DataTableDirective.ɵdir = core[\"Gb\" /* ɵɵdefineDirective */]({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n    return DataTableDirective;\n}());\n\n//# sourceMappingURL=angular-datatables.directive.js.map\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// CONCATENATED MODULE: ./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n\n\n\n\nvar angular_datatables_module_DataTablesModule = /** @class */ /*@__PURE__*/ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.ɵmod = core[\"Jb\" /* ɵɵdefineNgModule */]({ type: DataTablesModule });\n    DataTablesModule.ɵinj = core[\"Ib\" /* ɵɵdefineInjector */]({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[common[\"c\" /* CommonModule */]]] });\n    (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Ac\" /* ɵɵsetNgModuleScope */](DataTablesModule, { declarations: function () { return [angular_datatables_directive_DataTableDirective]; }, imports: function () { return [common[\"c\" /* CommonModule */]]; }, exports: function () { return [angular_datatables_directive_DataTableDirective]; } }); })();\n    return DataTablesModule;\n}());\n\n//# sourceMappingURL=angular-datatables.module.js.map\n\n// CONCATENATED MODULE: ./node_modules/angular-datatables/__ivy_ngcc__/index.js\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ })\n\n}]);","inputSourceMap":null}