{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{kUHs:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return ngx_bootstrap_timepicker_TimepickerComponent}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return ngx_bootstrap_timepicker_TimepickerModule});var core=__webpack_require__(\"fXoL\"),fesm2015_forms=__webpack_require__(\"3Pt+\"),BehaviorSubject=__webpack_require__(\"2Vo4\"),AsyncAction=__webpack_require__(\"3N8a\");class QueueAction_QueueAction extends AsyncAction.a{constructor(scheduler,work){super(scheduler,work),this.scheduler=scheduler,this.work=work}schedule(state,delay=0){return delay>0?super.schedule(state,delay):(this.delay=delay,this.state=state,this.scheduler.flush(this),this)}execute(state,delay){return delay>0||this.closed?super.execute(state,delay):this._execute(state,delay)}requestAsyncId(scheduler,id,delay=0){return null!==delay&&delay>0||null===delay&&this.delay>0?super.requestAsyncId(scheduler,id,delay):scheduler.flush(this)}}var AsyncScheduler=__webpack_require__(\"IjjT\");class QueueScheduler_QueueScheduler extends AsyncScheduler.a{}const queueScheduler=new QueueScheduler_QueueScheduler(QueueAction_QueueAction);var Observable=__webpack_require__(\"HDdC\"),Subscriber=__webpack_require__(\"7o/Q\"),Notification=__webpack_require__(\"WMd4\");class ObserveOnOperator{constructor(scheduler,delay=0){this.scheduler=scheduler,this.delay=delay}call(subscriber,source){return source.subscribe(new observeOn_ObserveOnSubscriber(subscriber,this.scheduler,this.delay))}}class observeOn_ObserveOnSubscriber extends Subscriber.a{constructor(destination,scheduler,delay=0){super(destination),this.scheduler=scheduler,this.delay=delay}static dispatch(arg){const{notification:notification,destination:destination}=arg;notification.observe(destination),this.unsubscribe()}scheduleMessage(notification){this.destination.add(this.scheduler.schedule(observeOn_ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)))}_next(value){this.scheduleMessage(Notification.a.createNext(value))}_error(err){this.scheduleMessage(Notification.a.createError(err)),this.unsubscribe()}_complete(){this.scheduleMessage(Notification.a.createComplete()),this.unsubscribe()}}class ObserveOnMessage{constructor(notification,destination){this.notification=notification,this.destination=destination}}var scan=__webpack_require__(\"Kqap\"),map=__webpack_require__(\"lJxs\"),distinctUntilChanged=__webpack_require__(\"/uUt\");class ngx_bootstrap_mini_ngrx_MiniState extends BehaviorSubject.a{constructor(_initialState,actionsDispatcher$,reducer){super(_initialState),actionsDispatcher$.pipe(function(scheduler,delay=0){return function(source){return source.lift(new ObserveOnOperator(scheduler,delay))}}(queueScheduler)).pipe(Object(scan.a)((state,action)=>action?reducer(state,action):state,_initialState)).subscribe(value=>this.next(value))}}class ngx_bootstrap_mini_ngrx_MiniStore extends Observable.a{constructor(_dispatcher,_reducer,state$){super(),this._dispatcher=_dispatcher,this._reducer=_reducer,this.source=state$}select(pathOrMapFn){return this.source.pipe(Object(map.a)(pathOrMapFn)).pipe(Object(distinctUntilChanged.a)())}lift(operator){const store=new ngx_bootstrap_mini_ngrx_MiniStore(this._dispatcher,this._reducer,this);return store.operator=operator,store}dispatch(action){this._dispatcher.next(action)}next(action){this._dispatcher.next(action)}error(err){this._dispatcher.error(err)}complete(){}}var common=__webpack_require__(\"ofXK\");function TimepickerComponent_td_6_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\"   \"),core.Qb())}function TimepickerComponent_td_7_Template(rf,ctx){if(1&rf){const _r19=core.Sb();core.Rb(0,\"td\"),core.Rb(1,\"a\",1),core.bc(\"click\",function(){core.xc(_r19);const ctx_r18=core.dc();return ctx_r18.changeMinutes(ctx_r18.minuteStep)}),core.Mb(2,\"span\",2),core.Qb(),core.Qb()}if(2&rf){const ctx_r1=core.dc();core.yb(1),core.Db(\"disabled\",!ctx_r1.canIncrementMinutes||!ctx_r1.isEditable)}}function TimepickerComponent_td_8_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\" \"),core.Qb())}function TimepickerComponent_td_9_Template(rf,ctx){if(1&rf){const _r21=core.Sb();core.Rb(0,\"td\"),core.Rb(1,\"a\",1),core.bc(\"click\",function(){core.xc(_r21);const ctx_r20=core.dc();return ctx_r20.changeSeconds(ctx_r20.secondsStep)}),core.Mb(2,\"span\",2),core.Qb(),core.Qb()}if(2&rf){const ctx_r3=core.dc();core.yb(1),core.Db(\"disabled\",!ctx_r3.canIncrementSeconds||!ctx_r3.isEditable)}}function TimepickerComponent_td_10_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\"   \"),core.Qb())}function TimepickerComponent_td_11_Template(rf,ctx){1&rf&&core.Mb(0,\"td\")}function TimepickerComponent_td_15_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\" : \"),core.Qb())}function TimepickerComponent_td_16_Template(rf,ctx){if(1&rf){const _r23=core.Sb();core.Rb(0,\"td\",4),core.Rb(1,\"input\",5),core.bc(\"wheel\",function($event){core.xc(_r23);const ctx_r22=core.dc();return ctx_r22.prevDef($event),ctx_r22.changeMinutes(ctx_r22.minuteStep*ctx_r22.wheelSign($event),\"wheel\")})(\"keydown.ArrowUp\",function(){core.xc(_r23);const ctx_r24=core.dc();return ctx_r24.changeMinutes(ctx_r24.minuteStep,\"key\")})(\"keydown.ArrowDown\",function(){core.xc(_r23);const ctx_r25=core.dc();return ctx_r25.changeMinutes(-ctx_r25.minuteStep,\"key\")})(\"change\",function($event){return core.xc(_r23),core.dc().updateMinutes($event.target.value)}),core.Qb(),core.Qb()}if(2&rf){const ctx_r7=core.dc();core.Db(\"has-error\",ctx_r7.invalidMinutes),core.yb(1),core.Db(\"is-invalid\",ctx_r7.invalidMinutes),core.jc(\"placeholder\",ctx_r7.minutesPlaceholder)(\"readonly\",ctx_r7.readonlyInput)(\"disabled\",ctx_r7.disabled)(\"value\",ctx_r7.minutes),core.zb(\"aria-label\",ctx_r7.labelMinutes)}}function TimepickerComponent_td_17_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\" : \"),core.Qb())}function TimepickerComponent_td_18_Template(rf,ctx){if(1&rf){const _r28=core.Sb();core.Rb(0,\"td\",4),core.Rb(1,\"input\",5),core.bc(\"wheel\",function($event){core.xc(_r28);const ctx_r27=core.dc();return ctx_r27.prevDef($event),ctx_r27.changeSeconds(ctx_r27.secondsStep*ctx_r27.wheelSign($event),\"wheel\")})(\"keydown.ArrowUp\",function(){core.xc(_r28);const ctx_r29=core.dc();return ctx_r29.changeSeconds(ctx_r29.secondsStep,\"key\")})(\"keydown.ArrowDown\",function(){core.xc(_r28);const ctx_r30=core.dc();return ctx_r30.changeSeconds(-ctx_r30.secondsStep,\"key\")})(\"change\",function($event){return core.xc(_r28),core.dc().updateSeconds($event.target.value)}),core.Qb(),core.Qb()}if(2&rf){const ctx_r9=core.dc();core.Db(\"has-error\",ctx_r9.invalidSeconds),core.yb(1),core.Db(\"is-invalid\",ctx_r9.invalidSeconds),core.jc(\"placeholder\",ctx_r9.secondsPlaceholder)(\"readonly\",ctx_r9.readonlyInput)(\"disabled\",ctx_r9.disabled)(\"value\",ctx_r9.seconds),core.zb(\"aria-label\",ctx_r9.labelSeconds)}}function TimepickerComponent_td_19_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\"   \"),core.Qb())}function TimepickerComponent_td_20_Template(rf,ctx){if(1&rf){const _r33=core.Sb();core.Rb(0,\"td\"),core.Rb(1,\"button\",8),core.bc(\"click\",function(){return core.xc(_r33),core.dc().toggleMeridian()}),core.Ic(2),core.Qb(),core.Qb()}if(2&rf){const ctx_r11=core.dc();core.yb(1),core.Db(\"disabled\",!ctx_r11.isEditable||!ctx_r11.canToggleMeridian),core.jc(\"disabled\",!ctx_r11.isEditable||!ctx_r11.canToggleMeridian),core.yb(1),core.Kc(\"\",ctx_r11.meridian,\" \")}}function TimepickerComponent_td_25_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\"   \"),core.Qb())}function TimepickerComponent_td_26_Template(rf,ctx){if(1&rf){const _r35=core.Sb();core.Rb(0,\"td\"),core.Rb(1,\"a\",1),core.bc(\"click\",function(){core.xc(_r35);const ctx_r34=core.dc();return ctx_r34.changeMinutes(-ctx_r34.minuteStep)}),core.Mb(2,\"span\",7),core.Qb(),core.Qb()}if(2&rf){const ctx_r13=core.dc();core.yb(1),core.Db(\"disabled\",!ctx_r13.canDecrementMinutes||!ctx_r13.isEditable)}}function TimepickerComponent_td_27_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\" \"),core.Qb())}function TimepickerComponent_td_28_Template(rf,ctx){if(1&rf){const _r37=core.Sb();core.Rb(0,\"td\"),core.Rb(1,\"a\",1),core.bc(\"click\",function(){core.xc(_r37);const ctx_r36=core.dc();return ctx_r36.changeSeconds(-ctx_r36.secondsStep)}),core.Mb(2,\"span\",7),core.Qb(),core.Qb()}if(2&rf){const ctx_r15=core.dc();core.yb(1),core.Db(\"disabled\",!ctx_r15.canDecrementSeconds||!ctx_r15.isEditable)}}function TimepickerComponent_td_29_Template(rf,ctx){1&rf&&(core.Rb(0,\"td\"),core.Ic(1,\"   \"),core.Qb())}function TimepickerComponent_td_30_Template(rf,ctx){1&rf&&core.Mb(0,\"td\")}let ngx_bootstrap_timepicker_TimepickerActions=(()=>{class TimepickerActions{writeValue(value){return{type:TimepickerActions.WRITE_VALUE,payload:value}}changeHours(event){return{type:TimepickerActions.CHANGE_HOURS,payload:event}}changeMinutes(event){return{type:TimepickerActions.CHANGE_MINUTES,payload:event}}changeSeconds(event){return{type:TimepickerActions.CHANGE_SECONDS,payload:event}}setTime(value){return{type:TimepickerActions.SET_TIME_UNIT,payload:value}}updateControls(value){return{type:TimepickerActions.UPDATE_CONTROLS,payload:value}}}return TimepickerActions.ɵfac=function(t){return new(t||TimepickerActions)},TimepickerActions.ɵprov=core.Hb({token:TimepickerActions,factory:TimepickerActions.ɵfac}),TimepickerActions.WRITE_VALUE=\"[timepicker] write value from ng model\",TimepickerActions.CHANGE_HOURS=\"[timepicker] change hours\",TimepickerActions.CHANGE_MINUTES=\"[timepicker] change minutes\",TimepickerActions.CHANGE_SECONDS=\"[timepicker] change seconds\",TimepickerActions.SET_TIME_UNIT=\"[timepicker] set time unit\",TimepickerActions.UPDATE_CONTROLS=\"[timepicker] update controls\",TimepickerActions})();function isValidDate(value){return!!value&&!(value instanceof Date&&isNaN(value.getHours()))&&(\"string\"!=typeof value||isValidDate(new Date(value)))}function isValidLimit(controls,newDate){return!(controls.min&&newDate<controls.min||controls.max&&newDate>controls.max)}function toNumber(value){return\"number\"==typeof value?value:parseInt(value,10)}function parseHours(value,isPM=!1){const hour=toNumber(value);return isNaN(hour)||hour<0||hour>(isPM?12:24)?NaN:hour}function parseMinutes(value){const minute=toNumber(value);return isNaN(minute)||minute<0||minute>60?NaN:minute}function parseSeconds(value){const seconds=toNumber(value);return isNaN(seconds)||seconds<0||seconds>60?NaN:seconds}function parseTime(value){return\"string\"==typeof value?new Date(value):value}function changeTime(value,diff){if(!value)return changeTime(createDate(new Date,0,0,0),diff);let hour=value.getHours(),minutes=value.getMinutes(),seconds=value.getSeconds();return diff.hour&&(hour+=toNumber(diff.hour)),diff.minute&&(minutes+=toNumber(diff.minute)),diff.seconds&&(seconds+=toNumber(diff.seconds)),createDate(value,hour,minutes,seconds)}function setTime(value,opts){let hour=parseHours(opts.hour);const minute=parseMinutes(opts.minute),seconds=parseSeconds(opts.seconds)||0;return opts.isPM&&12!==hour&&(hour+=12),value?isNaN(hour)||isNaN(minute)?value:createDate(value,hour,minute,seconds):isNaN(hour)||isNaN(minute)?value:createDate(new Date,hour,minute,seconds)}function createDate(value,hours,minutes,seconds){const newValue=new Date(value.getFullYear(),value.getMonth(),value.getDate(),hours,minutes,seconds,value.getMilliseconds());return newValue.setFullYear(value.getFullYear()),newValue.setMonth(value.getMonth()),newValue.setDate(value.getDate()),newValue}function padNumber(value){const _value=value.toString();return _value.length>1?_value:\"0\"+_value}function isHourInputValid(hours,isPM){return!isNaN(parseHours(hours,isPM))}function isMinuteInputValid(minutes){return!isNaN(parseMinutes(minutes))}function isSecondInputValid(seconds){return!isNaN(parseSeconds(seconds))}function isInputValid(hours,minutes=\"0\",seconds=\"0\",isPM){return isHourInputValid(hours,isPM)&&isMinuteInputValid(minutes)&&isSecondInputValid(seconds)}function canChangeValue(state,event){if(state.readonlyInput||state.disabled)return!1;if(event){if(\"wheel\"===event.source&&!state.mousewheel)return!1;if(\"key\"===event.source&&!state.arrowkeys)return!1}return!0}function getControlsValue(state){const{hourStep:hourStep,minuteStep:minuteStep,secondsStep:secondsStep,readonlyInput:readonlyInput,disabled:disabled,mousewheel:mousewheel,arrowkeys:arrowkeys,showSpinners:showSpinners,showMeridian:showMeridian,showSeconds:showSeconds,meridians:meridians,min:min,max:max}=state;return{hourStep:hourStep,minuteStep:minuteStep,secondsStep:secondsStep,readonlyInput:readonlyInput,disabled:disabled,mousewheel:mousewheel,arrowkeys:arrowkeys,showSpinners:showSpinners,showMeridian:showMeridian,showSeconds:showSeconds,meridians:meridians,min:min,max:max}}let ngx_bootstrap_timepicker_TimepickerConfig=(()=>{class TimepickerConfig{constructor(){this.hourStep=1,this.minuteStep=5,this.secondsStep=10,this.showMeridian=!0,this.meridians=[\"AM\",\"PM\"],this.readonlyInput=!1,this.disabled=!1,this.mousewheel=!0,this.arrowkeys=!0,this.showSpinners=!0,this.showSeconds=!1,this.showMinutes=!0,this.hoursPlaceholder=\"HH\",this.minutesPlaceholder=\"MM\",this.secondsPlaceholder=\"SS\",this.ariaLabelHours=\"hours\",this.ariaLabelMinutes=\"minutes\",this.ariaLabelSeconds=\"seconds\"}}return TimepickerConfig.ɵfac=function(t){return new(t||TimepickerConfig)},TimepickerConfig.ɵprov=Object(core.Hb)({factory:function(){return new TimepickerConfig},token:TimepickerConfig,providedIn:\"root\"}),TimepickerConfig})();const initialState={value:null,config:new ngx_bootstrap_timepicker_TimepickerConfig,controls:{canIncrementHours:!0,canIncrementMinutes:!0,canIncrementSeconds:!0,canDecrementHours:!0,canDecrementMinutes:!0,canDecrementSeconds:!0,canToggleMeridian:!0}};function timepickerReducer(state=initialState,action){switch(action.type){case ngx_bootstrap_timepicker_TimepickerActions.WRITE_VALUE:return Object.assign({},state,{value:action.payload});case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_HOURS:{if(!canChangeValue(state.config,action.payload)||(controls=state.controls,!(event=action.payload).step||event.step>0&&!controls.canIncrementHours||event.step<0&&!controls.canDecrementHours))return state;const _newTime=changeTime(state.value,{hour:action.payload.step});return!state.config.max&&!state.config.min||isValidLimit(state.config,_newTime)?Object.assign({},state,{value:_newTime}):state}case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_MINUTES:{if(!canChangeValue(state.config,action.payload)||!function(event,controls){return!(!event.step||event.step>0&&!controls.canIncrementMinutes||event.step<0&&!controls.canDecrementMinutes)}(action.payload,state.controls))return state;const _newTime=changeTime(state.value,{minute:action.payload.step});return!state.config.max&&!state.config.min||isValidLimit(state.config,_newTime)?Object.assign({},state,{value:_newTime}):state}case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_SECONDS:{if(!canChangeValue(state.config,action.payload)||!function(event,controls){return!(!event.step||event.step>0&&!controls.canIncrementSeconds||event.step<0&&!controls.canDecrementSeconds)}(action.payload,state.controls))return state;const _newTime=changeTime(state.value,{seconds:action.payload.step});return!state.config.max&&!state.config.min||isValidLimit(state.config,_newTime)?Object.assign({},state,{value:_newTime}):state}case ngx_bootstrap_timepicker_TimepickerActions.SET_TIME_UNIT:{if(!canChangeValue(state.config))return state;const _newTime=setTime(state.value,action.payload);return Object.assign({},state,{value:_newTime})}case ngx_bootstrap_timepicker_TimepickerActions.UPDATE_CONTROLS:{const _newControlsState=function(value,state){const{min:min,max:max,hourStep:hourStep,minuteStep:minuteStep,secondsStep:secondsStep,showSeconds:showSeconds}=state,res={canIncrementHours:!0,canIncrementMinutes:!0,canIncrementSeconds:!0,canDecrementHours:!0,canDecrementMinutes:!0,canDecrementSeconds:!0,canToggleMeridian:!0};if(!value)return res;if(max){const _newHour=changeTime(value,{hour:hourStep});if(res.canIncrementHours=max>_newHour&&value.getHours()+hourStep<24,!res.canIncrementHours){const _newMinutes=changeTime(value,{minute:minuteStep});res.canIncrementMinutes=showSeconds?max>_newMinutes:max>=_newMinutes}if(!res.canIncrementMinutes){const _newSeconds=changeTime(value,{seconds:secondsStep});res.canIncrementSeconds=max>=_newSeconds}value.getHours()<12&&(res.canToggleMeridian=changeTime(value,{hour:12})<max)}if(min){const _newHour=changeTime(value,{hour:-hourStep});if(res.canDecrementHours=min<_newHour,!res.canDecrementHours){const _newMinutes=changeTime(value,{minute:-minuteStep});res.canDecrementMinutes=showSeconds?min<_newMinutes:min<=_newMinutes}if(!res.canDecrementMinutes){const _newSeconds=changeTime(value,{seconds:-secondsStep});res.canDecrementSeconds=min<=_newSeconds}value.getHours()>=12&&(res.canToggleMeridian=changeTime(value,{hour:-12})>min)}return res}(state.value,action.payload),_newState={value:state.value,config:action.payload,controls:_newControlsState};return state.config.showMeridian!==_newState.config.showMeridian&&state.value&&(_newState.value=new Date(state.value)),Object.assign({},state,_newState)}default:return state}var event,controls}let ngx_bootstrap_timepicker_TimepickerStore=(()=>{class TimepickerStore extends ngx_bootstrap_mini_ngrx_MiniStore{constructor(){const _dispatcher=new BehaviorSubject.a({type:\"[mini-ngrx] dispatcher init\"});super(_dispatcher,timepickerReducer,new ngx_bootstrap_mini_ngrx_MiniState(initialState,_dispatcher,timepickerReducer))}}return TimepickerStore.ɵfac=function(t){return new(t||TimepickerStore)},TimepickerStore.ɵprov=core.Hb({token:TimepickerStore,factory:TimepickerStore.ɵfac}),TimepickerStore})();const TIMEPICKER_CONTROL_VALUE_ACCESSOR={provide:fesm2015_forms.h,useExisting:Object(core.T)(()=>ngx_bootstrap_timepicker_TimepickerComponent),multi:!0};let ngx_bootstrap_timepicker_TimepickerComponent=(()=>{class TimepickerComponent{constructor(_config,_cd,_store,_timepickerActions){this._cd=_cd,this._store=_store,this._timepickerActions=_timepickerActions,this.isValid=new core.n,this.invalidHours=!1,this.invalidMinutes=!1,this.invalidSeconds=!1,this.onChange=Function.prototype,this.onTouched=Function.prototype,Object.assign(this,_config),this.timepickerSub=_store.select(state=>state.value).subscribe(value=>{this._renderTime(value),this.onChange(value),this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)))}),_store.select(state=>state.controls).subscribe(controlsState=>{this.isValid.emit(isInputValid(this.hours,this.minutes,this.seconds,this.isPM())),Object.assign(this,controlsState),_cd.markForCheck()})}get isSpinnersVisible(){return this.showSpinners&&!this.readonlyInput}get isEditable(){return!(this.readonlyInput||this.disabled)}resetValidation(){this.invalidHours=!1,this.invalidMinutes=!1,this.invalidSeconds=!1}isPM(){return this.showMeridian&&this.meridian===this.meridians[1]}prevDef($event){$event.preventDefault()}wheelSign($event){return-1*Math.sign($event.deltaY)}ngOnChanges(changes){this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)))}changeHours(step,source=\"\"){this.resetValidation(),this._store.dispatch(this._timepickerActions.changeHours({step:step,source:source}))}changeMinutes(step,source=\"\"){this.resetValidation(),this._store.dispatch(this._timepickerActions.changeMinutes({step:step,source:source}))}changeSeconds(step,source=\"\"){this.resetValidation(),this._store.dispatch(this._timepickerActions.changeSeconds({step:step,source:source}))}updateHours(hours){if(this.resetValidation(),this.hours=hours,!isHourInputValid(this.hours,this.isPM())||!this.isValidLimit())return this.invalidHours=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()}updateMinutes(minutes){if(this.resetValidation(),this.minutes=minutes,!isMinuteInputValid(this.minutes)||!this.isValidLimit())return this.invalidMinutes=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()}updateSeconds(seconds){if(this.resetValidation(),this.seconds=seconds,!isSecondInputValid(this.seconds)||!this.isValidLimit())return this.invalidSeconds=!0,this.isValid.emit(!1),void this.onChange(null);this._updateTime()}isValidLimit(){return function(diff,max,min){const newDate=setTime(new Date,diff);return!(max&&newDate>max||min&&newDate<min)}({hour:this.hours,minute:this.minutes,seconds:this.seconds,isPM:this.isPM()},this.max,this.min)}_updateTime(){if(!isInputValid(this.hours,this.showMinutes?this.minutes:void 0,this.showSeconds?this.seconds:void 0,this.isPM()))return this.isValid.emit(!1),void this.onChange(null);this._store.dispatch(this._timepickerActions.setTime({hour:this.hours,minute:this.minutes,seconds:this.seconds,isPM:this.isPM()}))}toggleMeridian(){this.showMeridian&&this.isEditable&&this._store.dispatch(this._timepickerActions.changeHours({step:12,source:\"\"}))}writeValue(obj){isValidDate(obj)?this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj))):null==obj&&this._store.dispatch(this._timepickerActions.writeValue(null))}registerOnChange(fn){this.onChange=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled,this._cd.markForCheck()}ngOnDestroy(){this.timepickerSub.unsubscribe()}_renderTime(value){if(!isValidDate(value))return this.hours=\"\",this.minutes=\"\",this.seconds=\"\",void(this.meridian=this.meridians[0]);const _value=parseTime(value);let _hours=_value.getHours();this.showMeridian&&(this.meridian=this.meridians[_hours>=12?1:0],_hours%=12,0===_hours&&(_hours=12)),this.hours=padNumber(_hours),this.minutes=padNumber(_value.getMinutes()),this.seconds=padNumber(_value.getUTCSeconds())}}return TimepickerComponent.ɵfac=function(t){return new(t||TimepickerComponent)(core.Lb(ngx_bootstrap_timepicker_TimepickerConfig),core.Lb(core.h),core.Lb(ngx_bootstrap_timepicker_TimepickerStore),core.Lb(ngx_bootstrap_timepicker_TimepickerActions))},TimepickerComponent.ɵcmp=core.Fb({type:TimepickerComponent,selectors:[[\"timepicker\"]],inputs:{disabled:\"disabled\",hourStep:\"hourStep\",minuteStep:\"minuteStep\",secondsStep:\"secondsStep\",readonlyInput:\"readonlyInput\",mousewheel:\"mousewheel\",arrowkeys:\"arrowkeys\",showSpinners:\"showSpinners\",showMeridian:\"showMeridian\",showMinutes:\"showMinutes\",showSeconds:\"showSeconds\",meridians:\"meridians\",min:\"min\",max:\"max\",hoursPlaceholder:\"hoursPlaceholder\",minutesPlaceholder:\"minutesPlaceholder\",secondsPlaceholder:\"secondsPlaceholder\"},outputs:{isValid:\"isValid\"},features:[core.xb([TIMEPICKER_CONTROL_VALUE_ACCESSOR,ngx_bootstrap_timepicker_TimepickerStore]),core.wb],decls:31,vars:33,consts:[[1,\"text-center\",3,\"hidden\"],[1,\"btn\",\"btn-link\",3,\"click\"],[1,\"bs-chevron\",\"bs-chevron-up\"],[4,\"ngIf\"],[1,\"form-group\"],[\"type\",\"text\",\"maxlength\",\"2\",1,\"form-control\",\"text-center\",\"bs-timepicker-field\",3,\"placeholder\",\"readonly\",\"disabled\",\"value\",\"wheel\",\"keydown.ArrowUp\",\"keydown.ArrowDown\",\"change\"],[\"class\",\"form-group\",3,\"has-error\",4,\"ngIf\"],[1,\"bs-chevron\",\"bs-chevron-down\"],[\"type\",\"button\",1,\"btn\",\"btn-default\",\"text-center\",3,\"disabled\",\"click\"]],template:function(rf,ctx){1&rf&&(core.Rb(0,\"table\"),core.Rb(1,\"tbody\"),core.Rb(2,\"tr\",0),core.Rb(3,\"td\"),core.Rb(4,\"a\",1),core.bc(\"click\",function(){return ctx.changeHours(ctx.hourStep)}),core.Mb(5,\"span\",2),core.Qb(),core.Qb(),core.Gc(6,TimepickerComponent_td_6_Template,2,0,\"td\",3),core.Gc(7,TimepickerComponent_td_7_Template,3,2,\"td\",3),core.Gc(8,TimepickerComponent_td_8_Template,2,0,\"td\",3),core.Gc(9,TimepickerComponent_td_9_Template,3,2,\"td\",3),core.Gc(10,TimepickerComponent_td_10_Template,2,0,\"td\",3),core.Gc(11,TimepickerComponent_td_11_Template,1,0,\"td\",3),core.Qb(),core.Rb(12,\"tr\"),core.Rb(13,\"td\",4),core.Rb(14,\"input\",5),core.bc(\"wheel\",function($event){return ctx.prevDef($event),ctx.changeHours(ctx.hourStep*ctx.wheelSign($event),\"wheel\")})(\"keydown.ArrowUp\",function(){return ctx.changeHours(ctx.hourStep,\"key\")})(\"keydown.ArrowDown\",function(){return ctx.changeHours(-ctx.hourStep,\"key\")})(\"change\",function($event){return ctx.updateHours($event.target.value)}),core.Qb(),core.Qb(),core.Gc(15,TimepickerComponent_td_15_Template,2,0,\"td\",3),core.Gc(16,TimepickerComponent_td_16_Template,2,9,\"td\",6),core.Gc(17,TimepickerComponent_td_17_Template,2,0,\"td\",3),core.Gc(18,TimepickerComponent_td_18_Template,2,9,\"td\",6),core.Gc(19,TimepickerComponent_td_19_Template,2,0,\"td\",3),core.Gc(20,TimepickerComponent_td_20_Template,3,4,\"td\",3),core.Qb(),core.Rb(21,\"tr\",0),core.Rb(22,\"td\"),core.Rb(23,\"a\",1),core.bc(\"click\",function(){return ctx.changeHours(-ctx.hourStep)}),core.Mb(24,\"span\",7),core.Qb(),core.Qb(),core.Gc(25,TimepickerComponent_td_25_Template,2,0,\"td\",3),core.Gc(26,TimepickerComponent_td_26_Template,3,2,\"td\",3),core.Gc(27,TimepickerComponent_td_27_Template,2,0,\"td\",3),core.Gc(28,TimepickerComponent_td_28_Template,3,2,\"td\",3),core.Gc(29,TimepickerComponent_td_29_Template,2,0,\"td\",3),core.Gc(30,TimepickerComponent_td_30_Template,1,0,\"td\",3),core.Qb(),core.Qb(),core.Qb()),2&rf&&(core.yb(2),core.jc(\"hidden\",!ctx.showSpinners),core.yb(2),core.Db(\"disabled\",!ctx.canIncrementHours||!ctx.isEditable),core.yb(2),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian),core.yb(2),core.Db(\"has-error\",ctx.invalidHours),core.yb(1),core.Db(\"is-invalid\",ctx.invalidHours),core.jc(\"placeholder\",ctx.hoursPlaceholder)(\"readonly\",ctx.readonlyInput)(\"disabled\",ctx.disabled)(\"value\",ctx.hours),core.zb(\"aria-label\",ctx.labelHours),core.yb(1),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian),core.yb(1),core.jc(\"hidden\",!ctx.showSpinners),core.yb(2),core.Db(\"disabled\",!ctx.canDecrementHours||!ctx.isEditable),core.yb(2),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showMinutes),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showSeconds),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian),core.yb(1),core.jc(\"ngIf\",ctx.showMeridian))},directives:[common.n],styles:[\"\\n    .bs-chevron {\\n      border-style: solid;\\n      display: block;\\n      width: 9px;\\n      height: 9px;\\n      position: relative;\\n      border-width: 3px 0px 0 3px;\\n    }\\n\\n    .bs-chevron-up {\\n      -webkit-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      top: 2px;\\n    }\\n\\n    .bs-chevron-down {\\n      -webkit-transform: rotate(-135deg);\\n      transform: rotate(-135deg);\\n      top: -2px;\\n    }\\n\\n    .bs-timepicker-field {\\n      width: 50px;\\n      padding: .375rem .55rem;\\n    }\\n  \"],encapsulation:2,changeDetection:0}),TimepickerComponent})(),ngx_bootstrap_timepicker_TimepickerModule=(()=>{class TimepickerModule{static forRoot(){return{ngModule:TimepickerModule,providers:[ngx_bootstrap_timepicker_TimepickerActions,ngx_bootstrap_timepicker_TimepickerStore]}}}return TimepickerModule.ɵmod=core.Jb({type:TimepickerModule}),TimepickerModule.ɵinj=core.Ib({factory:function(t){return new(t||TimepickerModule)},imports:[[common.c]]}),TimepickerModule})()}}]);","name":"2-es2015.257ead8092811c2a2e5e.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[2],{\n\n/***/ \"kUHs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ ngx_bootstrap_timepicker_TimepickerComponent; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ ngx_bootstrap_timepicker_TimepickerModule; });\n\n// UNUSED EXPORTS: TimepickerActions, TimepickerConfig, TimepickerStore, ɵa\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js\nvar core = __webpack_require__(\"fXoL\");\n\n// EXTERNAL MODULE: ./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js + 1 modules\nvar fesm2015_forms = __webpack_require__(\"3Pt+\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js\nvar BehaviorSubject = __webpack_require__(\"2Vo4\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js + 1 modules\nvar AsyncAction = __webpack_require__(\"3N8a\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js\n\nclass QueueAction_QueueAction extends AsyncAction[\"a\" /* AsyncAction */] {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js + 1 modules\nvar AsyncScheduler = __webpack_require__(\"IjjT\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js\n\nclass QueueScheduler_QueueScheduler extends AsyncScheduler[\"a\" /* AsyncScheduler */] {\n}\n//# sourceMappingURL=QueueScheduler.js.map\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/scheduler/queue.js\n\n\nconst queueScheduler = /*@__PURE__*/ new QueueScheduler_QueueScheduler(QueueAction_QueueAction);\nconst queue = queueScheduler;\n//# sourceMappingURL=queue.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Observable.js + 3 modules\nvar Observable = __webpack_require__(\"HDdC\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Subscriber.js\nvar Subscriber = __webpack_require__(\"7o/Q\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/Notification.js + 1 modules\nvar Notification = __webpack_require__(\"WMd4\");\n\n// CONCATENATED MODULE: ./node_modules/rxjs/_esm2015/internal/operators/observeOn.js\n\n\nfunction observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nclass ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new observeOn_ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\nclass observeOn_ObserveOnSubscriber extends Subscriber[\"a\" /* Subscriber */] {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        const destination = this.destination;\n        destination.add(this.scheduler.schedule(observeOn_ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification[\"a\" /* Notification */].createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification[\"a\" /* Notification */].createError(err));\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleMessage(Notification[\"a\" /* Notification */].createComplete());\n        this.unsubscribe();\n    }\n}\nclass ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/scan.js\nvar scan = __webpack_require__(\"Kqap\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/map.js\nvar map = __webpack_require__(\"lJxs\");\n\n// EXTERNAL MODULE: ./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js\nvar distinctUntilChanged = __webpack_require__(\"/uUt\");\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/mini-ngrx/fesm2015/ngx-bootstrap-mini-ngrx.js\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ngx_bootstrap_mini_ngrx_MiniState extends BehaviorSubject[\"a\" /* BehaviorSubject */] {\n    /**\n     * @param {?} _initialState\n     * @param {?} actionsDispatcher$\n     * @param {?} reducer\n     */\n    constructor(_initialState, actionsDispatcher$, reducer) {\n        super(_initialState);\n        /** @type {?} */\n        const actionInQueue$ = actionsDispatcher$.pipe(observeOn(queueScheduler));\n        /** @type {?} */\n        const state$ = actionInQueue$.pipe(Object(scan[\"a\" /* scan */])((/**\n         * @param {?} state\n         * @param {?} action\n         * @return {?}\n         */\n        (state, action) => {\n            if (!action) {\n                return state;\n            }\n            return reducer(state, action);\n        }), _initialState));\n        state$.subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => this.next(value)));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ngx_bootstrap_mini_ngrx_MiniStore extends Observable[\"a\" /* Observable */] {\n    /**\n     * @param {?} _dispatcher\n     * @param {?} _reducer\n     * @param {?} state$\n     */\n    constructor(_dispatcher, _reducer, \n    /* tslint:disable-next-line: no-any */\n    state$) {\n        super();\n        this._dispatcher = _dispatcher;\n        this._reducer = _reducer;\n        /* tslint:disable-next-line: deprecation */\n        this.source = state$;\n    }\n    /**\n     * @template R\n     * @param {?} pathOrMapFn\n     * @return {?}\n     */\n    select(pathOrMapFn) {\n        /* tslint:disable-next-line: deprecation */\n        /** @type {?} */\n        const mapped$ = this.source.pipe(Object(map[\"a\" /* map */])(pathOrMapFn));\n        return mapped$.pipe(Object(distinctUntilChanged[\"a\" /* distinctUntilChanged */])());\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n    lift(operator) {\n        /** @type {?} */\n        const store = new ngx_bootstrap_mini_ngrx_MiniStore(this._dispatcher, this._reducer, this);\n        /* tslint:disable-next-line: deprecation */\n        store.operator = operator;\n        return store;\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    dispatch(action) {\n        this._dispatcher.next(action);\n    }\n    /**\n     * @param {?} action\n     * @return {?}\n     */\n    next(action) {\n        this._dispatcher.next(action);\n    }\n    /* tslint:disable-next-line: no-any */\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n    error(err) {\n        this._dispatcher.error(err);\n    }\n    /**\n     * @return {?}\n     */\n    complete() {\n        /*noop*/\n    }\n}\nif (false) {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction Action() { }\nif (false) {}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\n\n//# sourceMappingURL=ngx-bootstrap-mini-ngrx.js.map\n// EXTERNAL MODULE: ./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js\nvar common = __webpack_require__(\"ofXK\");\n\n// CONCATENATED MODULE: ./node_modules/ngx-bootstrap/__ivy_ngcc__/timepicker/fesm2015/ngx-bootstrap-timepicker.js\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\\u00A0\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r19 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Rb\" /* ɵɵelementStart */](1, \"a\", 1);\n        core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r19); const ctx_r18 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r18.changeMinutes(ctx_r18.minuteStep); });\n        core[\"Mb\" /* ɵɵelement */](2, \"span\", 2);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r1 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n    }\n}\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r21 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Rb\" /* ɵɵelementStart */](1, \"a\", 1);\n        core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r21); const ctx_r20 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r20.changeSeconds(ctx_r20.secondsStep); });\n        core[\"Mb\" /* ɵɵelement */](2, \"span\", 2);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r3 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n    }\n}\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\\u00A0\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Mb\" /* ɵɵelement */](0, \"td\");\n    }\n}\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0:\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r23 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Rb\" /* ɵɵelementStart */](1, \"input\", 5);\n        core[\"bc\" /* ɵɵlistener */](\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) { core[\"xc\" /* ɵɵrestoreView */](_r23); const ctx_r22 = core[\"dc\" /* ɵɵnextContext */](); ctx_r22.prevDef($event); return ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r23); const ctx_r24 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r23); const ctx_r25 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"); })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) { core[\"xc\" /* ɵɵrestoreView */](_r23); const ctx_r26 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r26.updateMinutes($event.target.value); });\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r7 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵclassProp */](\"has-error\", ctx_r7.invalidMinutes);\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"is-invalid\", ctx_r7.invalidMinutes);\n        core[\"jc\" /* ɵɵproperty */](\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n        core[\"zb\" /* ɵɵattribute */](\"aria-label\", ctx_r7.labelMinutes);\n    }\n}\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0:\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r28 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\", 4);\n        core[\"Rb\" /* ɵɵelementStart */](1, \"input\", 5);\n        core[\"bc\" /* ɵɵlistener */](\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) { core[\"xc\" /* ɵɵrestoreView */](_r28); const ctx_r27 = core[\"dc\" /* ɵɵnextContext */](); ctx_r27.prevDef($event); return ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r28); const ctx_r29 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r28); const ctx_r30 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"); })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) { core[\"xc\" /* ɵɵrestoreView */](_r28); const ctx_r31 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r31.updateSeconds($event.target.value); });\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r9 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"Db\" /* ɵɵclassProp */](\"has-error\", ctx_r9.invalidSeconds);\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"is-invalid\", ctx_r9.invalidSeconds);\n        core[\"jc\" /* ɵɵproperty */](\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n        core[\"zb\" /* ɵɵattribute */](\"aria-label\", ctx_r9.labelSeconds);\n    }\n}\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\\u00A0\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r33 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Rb\" /* ɵɵelementStart */](1, \"button\", 8);\n        core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r33); const ctx_r32 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r32.toggleMeridian(); });\n        core[\"Ic\" /* ɵɵtext */](2);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r11 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n        core[\"jc\" /* ɵɵproperty */](\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Kc\" /* ɵɵtextInterpolate1 */](\"\", ctx_r11.meridian, \" \");\n    }\n}\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\\u00A0\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r35 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Rb\" /* ɵɵelementStart */](1, \"a\", 1);\n        core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r35); const ctx_r34 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r34.changeMinutes(-ctx_r34.minuteStep); });\n        core[\"Mb\" /* ɵɵelement */](2, \"span\", 7);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r13 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n    }\n}\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n    if (rf & 1) {\n        const _r37 = core[\"Sb\" /* ɵɵgetCurrentView */]();\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Rb\" /* ɵɵelementStart */](1, \"a\", 1);\n        core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() { core[\"xc\" /* ɵɵrestoreView */](_r37); const ctx_r36 = core[\"dc\" /* ɵɵnextContext */](); return ctx_r36.changeSeconds(-ctx_r36.secondsStep); });\n        core[\"Mb\" /* ɵɵelement */](2, \"span\", 7);\n        core[\"Qb\" /* ɵɵelementEnd */]();\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n    if (rf & 2) {\n        const ctx_r15 = core[\"dc\" /* ɵɵnextContext */]();\n        core[\"yb\" /* ɵɵadvance */](1);\n        core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n    }\n}\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Rb\" /* ɵɵelementStart */](0, \"td\");\n        core[\"Ic\" /* ɵɵtext */](1, \"\\u00A0\\u00A0\\u00A0\");\n        core[\"Qb\" /* ɵɵelementEnd */]();\n    }\n}\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n    if (rf & 1) {\n        core[\"Mb\" /* ɵɵelement */](0, \"td\");\n    }\n}\nlet ngx_bootstrap_timepicker_TimepickerActions = /*@__PURE__*/ (() => {\n    class TimepickerActions {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        writeValue(value) {\n            return {\n                type: TimepickerActions.WRITE_VALUE,\n                payload: value\n            };\n        }\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        changeHours(event) {\n            return {\n                type: TimepickerActions.CHANGE_HOURS,\n                payload: event\n            };\n        }\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        changeMinutes(event) {\n            return {\n                type: TimepickerActions.CHANGE_MINUTES,\n                payload: event\n            };\n        }\n        /**\n         * @param {?} event\n         * @return {?}\n         */\n        changeSeconds(event) {\n            return {\n                type: TimepickerActions.CHANGE_SECONDS,\n                payload: event\n            };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        setTime(value) {\n            return {\n                type: TimepickerActions.SET_TIME_UNIT,\n                payload: value\n            };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        updateControls(value) {\n            return {\n                type: TimepickerActions.UPDATE_CONTROLS,\n                payload: value\n            };\n        }\n    }\n    TimepickerActions.ɵfac = function TimepickerActions_Factory(t) { return new (t || TimepickerActions)(); };\n    TimepickerActions.ɵprov = core[\"Hb\" /* ɵɵdefineInjectable */]({ token: TimepickerActions, factory: TimepickerActions.ɵfac });\n    TimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\n    TimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\n    TimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\n    TimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\n    TimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\n    TimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\n    return TimepickerActions;\n})();\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst dex = 10;\n/** @type {?} */\nconst hoursPerDay = 24;\n/** @type {?} */\nconst hoursPerDayHalf = 12;\n/** @type {?} */\nconst minutesPerHour = 60;\n/** @type {?} */\nconst secondsPerMinute = 60;\n/**\n * @param {?=} value\n * @return {?}\n */\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\n/**\n * @param {?} controls\n * @param {?} newDate\n * @return {?}\n */\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toNumber(value) {\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\n/**\n * @param {?} value\n * @param {?=} isPM\n * @return {?}\n */\nfunction parseHours(value, isPM = false) {\n    /** @type {?} */\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseMinutes(value) {\n    /** @type {?} */\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseSeconds(value) {\n    /** @type {?} */\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\n/**\n * @param {?} value\n * @param {?} diff\n * @return {?}\n */\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    /** @type {?} */\n    let hour = value.getHours();\n    /** @type {?} */\n    let minutes = value.getMinutes();\n    /** @type {?} */\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\n/**\n * @param {?} value\n * @param {?} opts\n * @return {?}\n */\nfunction setTime(value, opts) {\n    /** @type {?} */\n    let hour = parseHours(opts.hour);\n    /** @type {?} */\n    const minute = parseMinutes(opts.minute);\n    /** @type {?} */\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\n/**\n * @param {?} value\n * @param {?} hours\n * @param {?} minutes\n * @param {?} seconds\n * @return {?}\n */\nfunction createDate(value, hours, minutes, seconds) {\n    /** @type {?} */\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction padNumber(value) {\n    /** @type {?} */\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\n/**\n * @param {?} hours\n * @param {?} isPM\n * @return {?}\n */\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\n/**\n * @param {?} minutes\n * @return {?}\n */\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\n/**\n * @param {?} seconds\n * @return {?}\n */\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\n/**\n * @param {?} diff\n * @param {?} max\n * @param {?} min\n * @return {?}\n */\nfunction isInputLimitValid(diff, max, min) {\n    /** @type {?} */\n    const newDate = setTime(new Date(), diff);\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} hours\n * @param {?=} minutes\n * @param {?=} seconds\n * @param {?=} isPM\n * @return {?}\n */\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} state\n * @param {?=} event\n * @return {?}\n */\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} event\n * @param {?} controls\n * @return {?}\n */\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {?} state\n * @return {?}\n */\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\n/**\n * @param {?} value\n * @param {?} state\n * @return {?}\n */\nfunction timepickerControls(value, state) {\n    /** @type {?} */\n    const hoursPerDay = 24;\n    /** @type {?} */\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    /** @type {?} */\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        /** @type {?} */\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            /** @type {?} */\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            /** @type {?} */\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        /** @type {?} */\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            /** @type {?} */\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            /** @type {?} */\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\nlet ngx_bootstrap_timepicker_TimepickerConfig = /*@__PURE__*/ (() => {\n    class TimepickerConfig {\n        constructor() {\n            /**\n             * hours change step\n             */\n            this.hourStep = 1;\n            /**\n             * minutes change step\n             */\n            this.minuteStep = 5;\n            /**\n             * seconds changes step\n             */\n            this.secondsStep = 10;\n            /**\n             * if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM\n             */\n            this.showMeridian = true;\n            /**\n             * meridian labels based on locale\n             */\n            this.meridians = ['AM', 'PM'];\n            /**\n             * if true hours and minutes fields will be readonly\n             */\n            this.readonlyInput = false;\n            /**\n             * if true hours and minutes fields will be disabled\n             */\n            this.disabled = false;\n            /**\n             * if true scroll inside hours and minutes inputs will change time\n             */\n            this.mousewheel = true;\n            /**\n             * if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard\n             */\n            this.arrowkeys = true;\n            /**\n             * if true spinner arrows above and below the inputs will be shown\n             */\n            this.showSpinners = true;\n            /**\n             * show seconds in timepicker\n             */\n            this.showSeconds = false;\n            /**\n             * show minutes in timepicker\n             */\n            this.showMinutes = true;\n            /**\n             * placeholder for hours field in timepicker\n             */\n            this.hoursPlaceholder = 'HH';\n            /**\n             * placeholder for minutes field in timepicker\n             */\n            this.minutesPlaceholder = 'MM';\n            /**\n             * placeholder for seconds field in timepicker\n             */\n            this.secondsPlaceholder = 'SS';\n            /**\n             * hours aria label\n             */\n            this.ariaLabelHours = 'hours';\n            /**\n             * minutes aria label\n             */\n            this.ariaLabelMinutes = 'minutes';\n            /**\n             * seconds aria label\n             */\n            this.ariaLabelSeconds = 'seconds';\n        }\n    }\n    TimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) { return new (t || TimepickerConfig)(); };\n    /** @nocollapse */ TimepickerConfig.ɵprov = Object(core[\"Hb\" /* ɵɵdefineInjectable */])({ factory: function TimepickerConfig_Factory() { return new TimepickerConfig(); }, token: TimepickerConfig, providedIn: \"root\" });\n    return TimepickerConfig;\n})();\nif (false) {}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TimepickerState {\n}\nif (false) {}\n/** @type {?} */\nconst initialState = {\n    value: null,\n    config: new ngx_bootstrap_timepicker_TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\n// tslint:disable-next-line:cyclomatic-complexity\n/**\n * @param {?=} state\n * @param {?=} action\n * @return {?}\n */\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case ngx_bootstrap_timepicker_TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case ngx_bootstrap_timepicker_TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case ngx_bootstrap_timepicker_TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            /** @type {?} */\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case ngx_bootstrap_timepicker_TimepickerActions.UPDATE_CONTROLS: {\n            /** @type {?} */\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            /** @type {?} */\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\nlet ngx_bootstrap_timepicker_TimepickerStore = /*@__PURE__*/ (() => {\n    class TimepickerStore extends ngx_bootstrap_mini_ngrx_MiniStore {\n        constructor() {\n            /** @type {?} */\n            const _dispatcher = new BehaviorSubject[\"a\" /* BehaviorSubject */]({\n                type: '[mini-ngrx] dispatcher init'\n            });\n            /** @type {?} */\n            const state = new ngx_bootstrap_mini_ngrx_MiniState(initialState, _dispatcher, timepickerReducer);\n            super(_dispatcher, timepickerReducer, state);\n        }\n    }\n    TimepickerStore.ɵfac = function TimepickerStore_Factory(t) { return new (t || TimepickerStore)(); };\n    TimepickerStore.ɵprov = core[\"Hb\" /* ɵɵdefineInjectable */]({ token: TimepickerStore, factory: TimepickerStore.ɵfac });\n    return TimepickerStore;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: fesm2015_forms[\"h\" /* NG_VALUE_ACCESSOR */],\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: Object(core[\"T\" /* forwardRef */])(( /**\n     * @return {?}\n     */() => ngx_bootstrap_timepicker_TimepickerComponent)),\n    multi: true\n};\nlet ngx_bootstrap_timepicker_TimepickerComponent = /*@__PURE__*/ (() => {\n    class TimepickerComponent {\n        /**\n         * @param {?} _config\n         * @param {?} _cd\n         * @param {?} _store\n         * @param {?} _timepickerActions\n         */\n        constructor(_config, _cd, _store, _timepickerActions) {\n            this._cd = _cd;\n            this._store = _store;\n            this._timepickerActions = _timepickerActions;\n            /**\n             * emits true if value is a valid date\n             */\n            this.isValid = new core[\"n\" /* EventEmitter */]();\n            // min\\max validation for input fields\n            this.invalidHours = false;\n            this.invalidMinutes = false;\n            this.invalidSeconds = false;\n            // control value accessor methods\n            // tslint:disable-next-line:no-any\n            this.onChange = Function.prototype;\n            // tslint:disable-next-line:no-any\n            this.onTouched = Function.prototype;\n            Object.assign(this, _config);\n            this.timepickerSub = _store\n                .select(( /**\n         * @param {?} state\n         * @return {?}\n         *//**\n         * @param {?} state\n         * @return {?}\n         */ state => state.value))\n                .subscribe(( /**\n         * @param {?} value\n         * @return {?}\n         */(value) => {\n                // update UI values if date changed\n                this._renderTime(value);\n                this.onChange(value);\n                this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n            }));\n            _store\n                .select(( /**\n         * @param {?} state\n         * @return {?}\n         *//**\n         * @param {?} state\n         * @return {?}\n         */ state => state.controls))\n                .subscribe(( /**\n         * @param {?} controlsState\n         * @return {?}\n         */(controlsState) => {\n                this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n                Object.assign(this, controlsState);\n                _cd.markForCheck();\n            }));\n        }\n        /**\n         * @deprecated - please use `isEditable` instead\n         * @return {?}\n         */\n        get isSpinnersVisible() {\n            return this.showSpinners && !this.readonlyInput;\n        }\n        /**\n         * @return {?}\n         */\n        get isEditable() {\n            return !(this.readonlyInput || this.disabled);\n        }\n        /**\n         * @return {?}\n         */\n        resetValidation() {\n            this.invalidHours = false;\n            this.invalidMinutes = false;\n            this.invalidSeconds = false;\n        }\n        /**\n         * @return {?}\n         */\n        isPM() {\n            return this.showMeridian && this.meridian === this.meridians[1];\n        }\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        prevDef($event) {\n            $event.preventDefault();\n        }\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        wheelSign($event) {\n            return Math.sign($event.deltaY) * -1;\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        ngOnChanges(changes) {\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        }\n        /**\n         * @param {?} step\n         * @param {?=} source\n         * @return {?}\n         */\n        changeHours(step, source = '') {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n        }\n        /**\n         * @param {?} step\n         * @param {?=} source\n         * @return {?}\n         */\n        changeMinutes(step, source = '') {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n        }\n        /**\n         * @param {?} step\n         * @param {?=} source\n         * @return {?}\n         */\n        changeSeconds(step, source = '') {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n        }\n        /**\n         * @param {?} hours\n         * @return {?}\n         */\n        updateHours(hours) {\n            this.resetValidation();\n            this.hours = hours;\n            /** @type {?} */\n            const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n            if (!isValid) {\n                this.invalidHours = true;\n                this.isValid.emit(false);\n                this.onChange(null);\n                return;\n            }\n            this._updateTime();\n        }\n        /**\n         * @param {?} minutes\n         * @return {?}\n         */\n        updateMinutes(minutes) {\n            this.resetValidation();\n            this.minutes = minutes;\n            /** @type {?} */\n            const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n            if (!isValid) {\n                this.invalidMinutes = true;\n                this.isValid.emit(false);\n                this.onChange(null);\n                return;\n            }\n            this._updateTime();\n        }\n        /**\n         * @param {?} seconds\n         * @return {?}\n         */\n        updateSeconds(seconds) {\n            this.resetValidation();\n            this.seconds = seconds;\n            /** @type {?} */\n            const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n            if (!isValid) {\n                this.invalidSeconds = true;\n                this.isValid.emit(false);\n                this.onChange(null);\n                return;\n            }\n            this._updateTime();\n        }\n        /**\n         * @return {?}\n         */\n        isValidLimit() {\n            return isInputLimitValid({\n                hour: this.hours,\n                minute: this.minutes,\n                seconds: this.seconds,\n                isPM: this.isPM()\n            }, this.max, this.min);\n        }\n        /**\n         * @return {?}\n         */\n        _updateTime() {\n            /** @type {?} */\n            const _seconds = this.showSeconds ? this.seconds : void 0;\n            /** @type {?} */\n            const _minutes = this.showMinutes ? this.minutes : void 0;\n            if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n                this.isValid.emit(false);\n                this.onChange(null);\n                return;\n            }\n            this._store.dispatch(this._timepickerActions.setTime({\n                hour: this.hours,\n                minute: this.minutes,\n                seconds: this.seconds,\n                isPM: this.isPM()\n            }));\n        }\n        /**\n         * @return {?}\n         */\n        toggleMeridian() {\n            if (!this.showMeridian || !this.isEditable) {\n                return;\n            }\n            /** @type {?} */\n            const _hoursPerDayHalf = 12;\n            this._store.dispatch(this._timepickerActions.changeHours({\n                step: _hoursPerDayHalf,\n                source: ''\n            }));\n        }\n        /**\n         * Write a new value to the element.\n         * @param {?} obj\n         * @return {?}\n         */\n        writeValue(obj) {\n            if (isValidDate(obj)) {\n                this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n            }\n            else if (obj == null) {\n                this._store.dispatch(this._timepickerActions.writeValue(null));\n            }\n        }\n        /**\n         * Set the function to be called when the control receives a change event.\n         * @param {?} fn\n         * @return {?}\n         */\n        // tslint:disable-next-line:no-any\n        registerOnChange(fn) {\n            this.onChange = fn;\n        }\n        /**\n         * Set the function to be called when the control receives a touch event.\n         * @param {?} fn\n         * @return {?}\n         */\n        registerOnTouched(fn) {\n            this.onTouched = fn;\n        }\n        /**\n         * This function is called when the control status changes to or from \"disabled\".\n         * Depending on the value, it will enable or disable the appropriate DOM element.\n         *\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        setDisabledState(isDisabled) {\n            this.disabled = isDisabled;\n            this._cd.markForCheck();\n        }\n        /**\n         * @return {?}\n         */\n        ngOnDestroy() {\n            this.timepickerSub.unsubscribe();\n        }\n        /**\n         * @private\n         * @param {?} value\n         * @return {?}\n         */\n        _renderTime(value) {\n            if (!isValidDate(value)) {\n                this.hours = '';\n                this.minutes = '';\n                this.seconds = '';\n                this.meridian = this.meridians[0];\n                return;\n            }\n            /** @type {?} */\n            const _value = parseTime(value);\n            /** @type {?} */\n            const _hoursPerDayHalf = 12;\n            /** @type {?} */\n            let _hours = _value.getHours();\n            if (this.showMeridian) {\n                this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n                _hours = _hours % _hoursPerDayHalf;\n                // should be 12 PM, not 00 PM\n                if (_hours === 0) {\n                    _hours = _hoursPerDayHalf;\n                }\n            }\n            this.hours = padNumber(_hours);\n            this.minutes = padNumber(_value.getMinutes());\n            this.seconds = padNumber(_value.getUTCSeconds());\n        }\n    }\n    TimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) { return new (t || TimepickerComponent)(core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_timepicker_TimepickerConfig), core[\"Lb\" /* ɵɵdirectiveInject */](core[\"h\" /* ChangeDetectorRef */]), core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_timepicker_TimepickerStore), core[\"Lb\" /* ɵɵdirectiveInject */](ngx_bootstrap_timepicker_TimepickerActions)); };\n    TimepickerComponent.ɵcmp = core[\"Fb\" /* ɵɵdefineComponent */]({ type: TimepickerComponent, selectors: [[\"timepicker\"]], inputs: { disabled: \"disabled\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\" }, features: [core[\"xb\" /* ɵɵProvidersFeature */]([TIMEPICKER_CONTROL_VALUE_ACCESSOR, ngx_bootstrap_timepicker_TimepickerStore]), core[\"wb\" /* ɵɵNgOnChangesFeature */]], decls: 31, vars: 33, consts: [[1, \"text-center\", 3, \"hidden\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]], template: function TimepickerComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                core[\"Rb\" /* ɵɵelementStart */](0, \"table\");\n                core[\"Rb\" /* ɵɵelementStart */](1, \"tbody\");\n                core[\"Rb\" /* ɵɵelementStart */](2, \"tr\", 0);\n                core[\"Rb\" /* ɵɵelementStart */](3, \"td\");\n                core[\"Rb\" /* ɵɵelementStart */](4, \"a\", 1);\n                core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_Template_a_click_4_listener() { return ctx.changeHours(ctx.hourStep); });\n                core[\"Mb\" /* ɵɵelement */](5, \"span\", 2);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementStart */](12, \"tr\");\n                core[\"Rb\" /* ɵɵelementStart */](13, \"td\", 4);\n                core[\"Rb\" /* ɵɵelementStart */](14, \"input\", 5);\n                core[\"bc\" /* ɵɵlistener */](\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) { ctx.prevDef($event); return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\"); })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() { return ctx.changeHours(ctx.hourStep, \"key\"); })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() { return ctx.changeHours(-ctx.hourStep, \"key\"); })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) { return ctx.updateHours($event.target.value); });\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n                core[\"Gc\" /* ɵɵtemplate */](17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n                core[\"Gc\" /* ɵɵtemplate */](19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Rb\" /* ɵɵelementStart */](21, \"tr\", 0);\n                core[\"Rb\" /* ɵɵelementStart */](22, \"td\");\n                core[\"Rb\" /* ɵɵelementStart */](23, \"a\", 1);\n                core[\"bc\" /* ɵɵlistener */](\"click\", function TimepickerComponent_Template_a_click_23_listener() { return ctx.changeHours(-ctx.hourStep); });\n                core[\"Mb\" /* ɵɵelement */](24, \"span\", 7);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Gc\" /* ɵɵtemplate */](25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n                core[\"Gc\" /* ɵɵtemplate */](30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Qb\" /* ɵɵelementEnd */]();\n                core[\"Qb\" /* ɵɵelementEnd */]();\n            }\n            if (rf & 2) {\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"jc\" /* ɵɵproperty */](\"hidden\", !ctx.showSpinners);\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"Db\" /* ɵɵclassProp */](\"has-error\", ctx.invalidHours);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"Db\" /* ɵɵclassProp */](\"is-invalid\", ctx.invalidHours);\n                core[\"jc\" /* ɵɵproperty */](\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n                core[\"zb\" /* ɵɵattribute */](\"aria-label\", ctx.labelHours);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"hidden\", !ctx.showSpinners);\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"Db\" /* ɵɵclassProp */](\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n                core[\"yb\" /* ɵɵadvance */](2);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMinutes);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showSeconds);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n                core[\"yb\" /* ɵɵadvance */](1);\n                core[\"jc\" /* ɵɵproperty */](\"ngIf\", ctx.showMeridian);\n            }\n        }, directives: [common[\"n\" /* NgIf */]], styles: [\"\\n    .bs-chevron {\\n      border-style: solid;\\n      display: block;\\n      width: 9px;\\n      height: 9px;\\n      position: relative;\\n      border-width: 3px 0px 0 3px;\\n    }\\n\\n    .bs-chevron-up {\\n      -webkit-transform: rotate(45deg);\\n      transform: rotate(45deg);\\n      top: 2px;\\n    }\\n\\n    .bs-chevron-down {\\n      -webkit-transform: rotate(-135deg);\\n      transform: rotate(-135deg);\\n      top: -2px;\\n    }\\n\\n    .bs-timepicker-field {\\n      width: 50px;\\n      padding: .375rem .55rem;\\n    }\\n  \"], encapsulation: 2, changeDetection: 0 });\n    return TimepickerComponent;\n})();\nif (false) {}\nlet ngx_bootstrap_timepicker_TimepickerModule = /*@__PURE__*/ (() => {\n    class TimepickerModule {\n        /**\n         * @return {?}\n         */\n        static forRoot() {\n            return {\n                ngModule: TimepickerModule,\n                providers: [ngx_bootstrap_timepicker_TimepickerActions, ngx_bootstrap_timepicker_TimepickerStore]\n            };\n        }\n    }\n    TimepickerModule.ɵmod = core[\"Jb\" /* ɵɵdefineNgModule */]({ type: TimepickerModule });\n    TimepickerModule.ɵinj = core[\"Ib\" /* ɵɵdefineInjector */]({ factory: function TimepickerModule_Factory(t) { return new (t || TimepickerModule)(); }, imports: [[common[\"c\" /* CommonModule */]]] });\n    return TimepickerModule;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && core[\"Ac\" /* ɵɵsetNgModuleScope */](ngx_bootstrap_timepicker_TimepickerModule, { declarations: function () { return [ngx_bootstrap_timepicker_TimepickerComponent]; }, imports: function () { return [common[\"c\" /* CommonModule */]]; }, exports: function () { return [ngx_bootstrap_timepicker_TimepickerComponent]; } }); })();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n//# sourceMappingURL=ngx-bootstrap-timepicker.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}