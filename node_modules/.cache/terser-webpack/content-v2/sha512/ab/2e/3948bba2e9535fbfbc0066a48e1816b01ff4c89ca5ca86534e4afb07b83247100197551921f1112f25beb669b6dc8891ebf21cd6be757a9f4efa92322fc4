{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{PdH4:function(module,exports,__webpack_require__){module.exports=function(){\"use strict\";function _typeof(obj){return(_typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj})(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _getPrototypeOf(o){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)})(o)}function _setPrototypeOf(o,p){return(_setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o})(o,p)}function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function _construct(Parent,args,Class){return(_construct=_isNativeReflectConstruct()?Reflect.construct:function(Parent,args,Class){var a=[null];a.push.apply(a,args);var instance=new(Function.bind.apply(Parent,a));return Class&&_setPrototypeOf(instance,Class.prototype),instance}).apply(null,arguments)}function _possibleConstructorReturn(self,call){return!call||\"object\"!=typeof call&&\"function\"!=typeof call?function(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}(self):call}function _get(target,property,receiver){return(_get=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(target,property,receiver){var base=function(object,property){for(;!Object.prototype.hasOwnProperty.call(object,property)&&null!==(object=_getPrototypeOf(object)););return object}(target,property);if(base){var desc=Object.getOwnPropertyDescriptor(base,property);return desc.get?desc.get.call(receiver):desc.value}})(target,property,receiver||target)}var capitalizeFirstLetter=function(str){return str.charAt(0).toUpperCase()+str.slice(1)},objectValues=function(obj){return Object.keys(obj).map(function(key){return obj[key]})},toArray=function(nodeList){return Array.prototype.slice.call(nodeList)},warn=function(message){console.warn(\"\".concat(\"SweetAlert2:\",\" \").concat(\"object\"===_typeof(message)?message.join(\" \"):message))},error=function(message){console.error(\"\".concat(\"SweetAlert2:\",\" \").concat(message))},previousWarnOnceMessages=[],callIfFunction=function(arg){return\"function\"==typeof arg?arg():arg},hasToPromiseFn=function(arg){return arg&&\"function\"==typeof arg.toPromise},asPromise=function(arg){return hasToPromiseFn(arg)?arg.toPromise():Promise.resolve(arg)},isPromise=function(arg){return arg&&Promise.resolve(arg)===arg},DismissReason=Object.freeze({cancel:\"cancel\",backdrop:\"backdrop\",close:\"close\",esc:\"esc\",timer:\"timer\"}),isElement=function(elem){return elem instanceof Element||function(elem){return\"object\"===_typeof(elem)&&elem.jquery}(elem)},prefix=function(items){var result={};for(var i in items)result[items[i]]=\"swal2-\"+items[i];return result},swalClasses=prefix([\"container\",\"shown\",\"height-auto\",\"iosfix\",\"popup\",\"modal\",\"no-backdrop\",\"no-transition\",\"toast\",\"toast-shown\",\"toast-column\",\"show\",\"hide\",\"close\",\"title\",\"header\",\"content\",\"html-container\",\"actions\",\"confirm\",\"deny\",\"cancel\",\"footer\",\"icon\",\"icon-content\",\"image\",\"input\",\"file\",\"range\",\"select\",\"radio\",\"checkbox\",\"label\",\"textarea\",\"inputerror\",\"input-label\",\"validation-message\",\"progress-steps\",\"active-progress-step\",\"progress-step\",\"progress-step-line\",\"loader\",\"loading\",\"styled\",\"top\",\"top-start\",\"top-end\",\"top-left\",\"top-right\",\"center\",\"center-start\",\"center-end\",\"center-left\",\"center-right\",\"bottom\",\"bottom-start\",\"bottom-end\",\"bottom-left\",\"bottom-right\",\"grow-row\",\"grow-column\",\"grow-fullscreen\",\"rtl\",\"timer-progress-bar\",\"timer-progress-bar-container\",\"scrollbar-measure\",\"icon-success\",\"icon-warning\",\"icon-info\",\"icon-question\",\"icon-error\"]),iconTypes=prefix([\"success\",\"warning\",\"info\",\"question\",\"error\"]),getContainer=function(){return document.body.querySelector(\".\".concat(swalClasses.container))},elementBySelector=function(selectorString){var container=getContainer();return container?container.querySelector(selectorString):null},elementByClass=function(className){return elementBySelector(\".\".concat(className))},getPopup=function(){return elementByClass(swalClasses.popup)},getIcons=function(){var popup=getPopup();return toArray(popup.querySelectorAll(\".\".concat(swalClasses.icon)))},getIcon=function(){var visibleIcon=getIcons().filter(function(icon){return isVisible(icon)});return visibleIcon.length?visibleIcon[0]:null},getTitle=function(){return elementByClass(swalClasses.title)},getContent=function(){return elementByClass(swalClasses.content)},getImage=function(){return elementByClass(swalClasses.image)},getProgressSteps=function(){return elementByClass(swalClasses[\"progress-steps\"])},getValidationMessage=function(){return elementByClass(swalClasses[\"validation-message\"])},getConfirmButton=function(){return elementBySelector(\".\".concat(swalClasses.actions,\" .\").concat(swalClasses.confirm))},getDenyButton=function(){return elementBySelector(\".\".concat(swalClasses.actions,\" .\").concat(swalClasses.deny))},getLoader=function(){return elementBySelector(\".\".concat(swalClasses.loader))},getCancelButton=function(){return elementBySelector(\".\".concat(swalClasses.actions,\" .\").concat(swalClasses.cancel))},getActions=function(){return elementByClass(swalClasses.actions)},getHeader=function(){return elementByClass(swalClasses.header)},getFooter=function(){return elementByClass(swalClasses.footer)},getTimerProgressBar=function(){return elementByClass(swalClasses[\"timer-progress-bar\"])},getCloseButton=function(){return elementByClass(swalClasses.close)},getFocusableElements=function(){var focusableElementsWithTabindex=toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')).sort(function(a,b){return(a=parseInt(a.getAttribute(\"tabindex\")))>(b=parseInt(b.getAttribute(\"tabindex\")))?1:a<b?-1:0}),otherFocusableElements=toArray(getPopup().querySelectorAll('\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\"0\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n')).filter(function(el){return\"-1\"!==el.getAttribute(\"tabindex\")});return function(arr){for(var result=[],i=0;i<arr.length;i++)-1===result.indexOf(arr[i])&&result.push(arr[i]);return result}(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(function(el){return isVisible(el)})},isModal=function(){return!isToast()&&!document.body.classList.contains(swalClasses[\"no-backdrop\"])},isToast=function(){return document.body.classList.contains(swalClasses[\"toast-shown\"])},states={previousBodyPadding:null},setInnerHtml=function(elem,html){if(elem.textContent=\"\",html){var parsed=(new DOMParser).parseFromString(html,\"text/html\");toArray(parsed.querySelector(\"head\").childNodes).forEach(function(child){elem.appendChild(child)}),toArray(parsed.querySelector(\"body\").childNodes).forEach(function(child){elem.appendChild(child)})}},hasClass=function(elem,className){if(!className)return!1;for(var classList=className.split(/\\s+/),i=0;i<classList.length;i++)if(!elem.classList.contains(classList[i]))return!1;return!0},applyCustomClass=function(elem,params,className){if(function(elem,params){toArray(elem.classList).forEach(function(className){-1===objectValues(swalClasses).indexOf(className)&&-1===objectValues(iconTypes).indexOf(className)&&-1===objectValues(params.showClass).indexOf(className)&&elem.classList.remove(className)})}(elem,params),params.customClass&&params.customClass[className]){if(\"string\"!=typeof params.customClass[className]&&!params.customClass[className].forEach)return warn(\"Invalid type of customClass.\".concat(className,'! Expected string or iterable object, got \"').concat(_typeof(params.customClass[className]),'\"'));addClass(elem,params.customClass[className])}};function getInput(content,inputType){if(!inputType)return null;switch(inputType){case\"select\":case\"textarea\":case\"file\":return getChildByClass(content,swalClasses[inputType]);case\"checkbox\":return content.querySelector(\".\".concat(swalClasses.checkbox,\" input\"));case\"radio\":return content.querySelector(\".\".concat(swalClasses.radio,\" input:checked\"))||content.querySelector(\".\".concat(swalClasses.radio,\" input:first-child\"));case\"range\":return content.querySelector(\".\".concat(swalClasses.range,\" input\"));default:return getChildByClass(content,swalClasses.input)}}var oldInputVal,focusInput=function(input){if(input.focus(),\"file\"!==input.type){var val=input.value;input.value=\"\",input.value=val}},toggleClass=function(target,classList,condition){target&&classList&&(\"string\"==typeof classList&&(classList=classList.split(/\\s+/).filter(Boolean)),classList.forEach(function(className){target.forEach?target.forEach(function(elem){condition?elem.classList.add(className):elem.classList.remove(className)}):condition?target.classList.add(className):target.classList.remove(className)}))},addClass=function(target,classList){toggleClass(target,classList,!0)},removeClass=function(target,classList){toggleClass(target,classList,!1)},getChildByClass=function(elem,className){for(var i=0;i<elem.childNodes.length;i++)if(hasClass(elem.childNodes[i],className))return elem.childNodes[i]},applyNumericalStyle=function(elem,property,value){value===\"\".concat(parseInt(value))&&(value=parseInt(value)),value||0===parseInt(value)?elem.style[property]=\"number\"==typeof value?\"\".concat(value,\"px\"):value:elem.style.removeProperty(property)},show=function(elem){elem.style.display=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"flex\"},hide=function(elem){elem.style.display=\"none\"},setStyle=function(parent,selector,property,value){var el=parent.querySelector(selector);el&&(el.style[property]=value)},toggle=function(elem,condition,display){condition?show(elem,display):hide(elem)},isVisible=function(elem){return!(!elem||!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length))},isScrollable=function(elem){return!!(elem.scrollHeight>elem.clientHeight)},hasCssAnimation=function(elem){var style=window.getComputedStyle(elem),animDuration=parseFloat(style.getPropertyValue(\"animation-duration\")||\"0\"),transDuration=parseFloat(style.getPropertyValue(\"transition-duration\")||\"0\");return animDuration>0||transDuration>0},animateTimerProgressBar=function(timer){var reset=arguments.length>1&&void 0!==arguments[1]&&arguments[1],timerProgressBar=getTimerProgressBar();isVisible(timerProgressBar)&&(reset&&(timerProgressBar.style.transition=\"none\",timerProgressBar.style.width=\"100%\"),setTimeout(function(){timerProgressBar.style.transition=\"width \".concat(timer/1e3,\"s linear\"),timerProgressBar.style.width=\"0%\"},10))},isNodeEnv=function(){return\"undefined\"==typeof window||\"undefined\"==typeof document},sweetHTML='\\n <div aria-labelledby=\"'.concat(swalClasses.title,'\" aria-describedby=\"').concat(swalClasses.content,'\" class=\"').concat(swalClasses.popup,'\" tabindex=\"-1\">\\n   <div class=\"').concat(swalClasses.header,'\">\\n     <ul class=\"').concat(swalClasses[\"progress-steps\"],'\"></ul>\\n     <div class=\"').concat(swalClasses.icon,\" \").concat(iconTypes.error,'\"></div>\\n     <div class=\"').concat(swalClasses.icon,\" \").concat(iconTypes.question,'\"></div>\\n     <div class=\"').concat(swalClasses.icon,\" \").concat(iconTypes.warning,'\"></div>\\n     <div class=\"').concat(swalClasses.icon,\" \").concat(iconTypes.info,'\"></div>\\n     <div class=\"').concat(swalClasses.icon,\" \").concat(iconTypes.success,'\"></div>\\n     <img class=\"').concat(swalClasses.image,'\" />\\n     <h2 class=\"').concat(swalClasses.title,'\" id=\"').concat(swalClasses.title,'\"></h2>\\n     <button type=\"button\" class=\"').concat(swalClasses.close,'\"></button>\\n   </div>\\n   <div class=\"').concat(swalClasses.content,'\">\\n     <div id=\"').concat(swalClasses.content,'\" class=\"').concat(swalClasses[\"html-container\"],'\"></div>\\n     <input class=\"').concat(swalClasses.input,'\" />\\n     <input type=\"file\" class=\"').concat(swalClasses.file,'\" />\\n     <div class=\"').concat(swalClasses.range,'\">\\n       <input type=\"range\" />\\n       <output></output>\\n     </div>\\n     <select class=\"').concat(swalClasses.select,'\"></select>\\n     <div class=\"').concat(swalClasses.radio,'\"></div>\\n     <label for=\"').concat(swalClasses.checkbox,'\" class=\"').concat(swalClasses.checkbox,'\">\\n       <input type=\"checkbox\" />\\n       <span class=\"').concat(swalClasses.label,'\"></span>\\n     </label>\\n     <textarea class=\"').concat(swalClasses.textarea,'\"></textarea>\\n     <div class=\"').concat(swalClasses[\"validation-message\"],'\" id=\"').concat(swalClasses[\"validation-message\"],'\"></div>\\n   </div>\\n   <div class=\"').concat(swalClasses.actions,'\">\\n     <div class=\"').concat(swalClasses.loader,'\"></div>\\n     <button type=\"button\" class=\"').concat(swalClasses.confirm,'\"></button>\\n     <button type=\"button\" class=\"').concat(swalClasses.deny,'\"></button>\\n     <button type=\"button\" class=\"').concat(swalClasses.cancel,'\"></button>\\n   </div>\\n   <div class=\"').concat(swalClasses.footer,'\"></div>\\n   <div class=\"').concat(swalClasses[\"timer-progress-bar-container\"],'\">\\n     <div class=\"').concat(swalClasses[\"timer-progress-bar\"],'\"></div>\\n   </div>\\n </div>\\n').replace(/(^|\\n)\\s*/g,\"\"),resetValidationMessage=function(e){Swal.isVisible()&&oldInputVal!==e.target.value&&Swal.resetValidationMessage(),oldInputVal=e.target.value},parseHtmlToContainer=function(param,target){param instanceof HTMLElement?target.appendChild(param):\"object\"===_typeof(param)?handleObject(param,target):param&&setInnerHtml(target,param)},handleObject=function(param,target){param.jquery?handleJqueryElem(target,param):setInnerHtml(target,param.toString())},handleJqueryElem=function(target,elem){if(target.textContent=\"\",0 in elem)for(var i=0;i in elem;i++)target.appendChild(elem[i].cloneNode(!0));else target.appendChild(elem.cloneNode(!0))},animationEndEvent=function(){if(isNodeEnv())return!1;var testEl=document.createElement(\"div\"),transEndEventNames={WebkitAnimation:\"webkitAnimationEnd\",OAnimation:\"oAnimationEnd oanimationend\",animation:\"animationend\"};for(var i in transEndEventNames)if(Object.prototype.hasOwnProperty.call(transEndEventNames,i)&&void 0!==testEl.style[i])return transEndEventNames[i];return!1}();function renderButton(button,buttonType,params){toggle(button,params[\"show\".concat(capitalizeFirstLetter(buttonType),\"Button\")],\"inline-block\"),setInnerHtml(button,params[\"\".concat(buttonType,\"ButtonText\")]),button.setAttribute(\"aria-label\",params[\"\".concat(buttonType,\"ButtonAriaLabel\")]),button.className=swalClasses[buttonType],applyCustomClass(button,params,\"\".concat(buttonType,\"Button\")),addClass(button,params[\"\".concat(buttonType,\"ButtonClass\")])}var privateProps={promise:new WeakMap,innerParams:new WeakMap,domCache:new WeakMap},inputTypes=[\"input\",\"file\",\"range\",\"select\",\"radio\",\"checkbox\",\"textarea\"],setInputPlaceholder=function(input,params){input.placeholder&&!params.inputPlaceholder||(input.placeholder=params.inputPlaceholder)},setInputLabel=function(input,prependTo,params){if(params.inputLabel){input.id=swalClasses.input;var label=document.createElement(\"label\"),labelClass=swalClasses[\"input-label\"];label.setAttribute(\"for\",input.id),label.className=labelClass,addClass(label,params.customClass.inputLabel),label.innerText=params.inputLabel,prependTo.insertAdjacentElement(\"beforebegin\",label)}},getInputContainer=function(inputType){var inputClass=swalClasses[inputType]?swalClasses[inputType]:swalClasses.input;return getChildByClass(getContent(),inputClass)},renderInputType={};renderInputType.text=renderInputType.email=renderInputType.password=renderInputType.number=renderInputType.tel=renderInputType.url=function(input,params){return\"string\"==typeof params.inputValue||\"number\"==typeof params.inputValue?input.value=params.inputValue:isPromise(params.inputValue)||warn('Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"'.concat(_typeof(params.inputValue),'\"')),setInputLabel(input,input,params),setInputPlaceholder(input,params),input.type=params.input,input},renderInputType.file=function(input,params){return setInputLabel(input,input,params),setInputPlaceholder(input,params),input},renderInputType.range=function(range,params){var rangeInput=range.querySelector(\"input\"),rangeOutput=range.querySelector(\"output\");return rangeInput.value=params.inputValue,rangeInput.type=params.input,rangeOutput.value=params.inputValue,setInputLabel(rangeInput,range,params),range},renderInputType.select=function(select,params){if(select.textContent=\"\",params.inputPlaceholder){var placeholder=document.createElement(\"option\");setInnerHtml(placeholder,params.inputPlaceholder),placeholder.value=\"\",placeholder.disabled=!0,placeholder.selected=!0,select.appendChild(placeholder)}return setInputLabel(select,select,params),select},renderInputType.radio=function(radio){return radio.textContent=\"\",radio},renderInputType.checkbox=function(checkboxContainer,params){var checkbox=getInput(getContent(),\"checkbox\");checkbox.value=1,checkbox.id=swalClasses.checkbox,checkbox.checked=Boolean(params.inputValue);var label=checkboxContainer.querySelector(\"span\");return setInnerHtml(label,params.inputPlaceholder),checkboxContainer},renderInputType.textarea=function(textarea,params){textarea.value=params.inputValue,setInputPlaceholder(textarea,params),setInputLabel(textarea,textarea,params);var getPadding=function(el){return parseInt(window.getComputedStyle(el).paddingLeft)+parseInt(window.getComputedStyle(el).paddingRight)};if(\"MutationObserver\"in window){var initialPopupWidth=parseInt(window.getComputedStyle(getPopup()).width);new MutationObserver(function(){var contentWidth=textarea.offsetWidth+getPadding(getPopup())+getPadding(getContent());getPopup().style.width=contentWidth>initialPopupWidth?\"\".concat(contentWidth,\"px\"):null}).observe(textarea,{attributes:!0,attributeFilter:[\"style\"]})}return textarea};var renderContent=function(instance,params){var content=getContent().querySelector(\"#\".concat(swalClasses.content));params.html?(parseHtmlToContainer(params.html,content),show(content,\"block\")):params.text?(content.textContent=params.text,show(content,\"block\")):hide(content),function(instance,params){var content=getContent(),innerParams=privateProps.innerParams.get(instance),rerender=!innerParams||params.input!==innerParams.input;inputTypes.forEach(function(inputType){var inputClass=swalClasses[inputType],inputContainer=getChildByClass(content,inputClass);(function(inputType,inputAttributes){var input=getInput(getContent(),inputType);if(input)for(var attr in function(input){for(var i=0;i<input.attributes.length;i++){var attrName=input.attributes[i].name;-1===[\"type\",\"value\",\"style\"].indexOf(attrName)&&input.removeAttribute(attrName)}}(input),inputAttributes)\"range\"===inputType&&\"placeholder\"===attr||input.setAttribute(attr,inputAttributes[attr])})(inputType,params.inputAttributes),inputContainer.className=inputClass,rerender&&hide(inputContainer)}),params.input&&(rerender&&function(params){if(!renderInputType[params.input])return error('Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"'.concat(params.input,'\"'));var inputContainer=getInputContainer(params.input),input=renderInputType[params.input](inputContainer,params);show(input),setTimeout(function(){focusInput(input)})}(params),function(params){var inputContainer=getInputContainer(params.input);params.customClass&&addClass(inputContainer,params.customClass.input)}(params))}(instance,params),applyCustomClass(getContent(),params,\"content\")},applyStyles=function(icon,params){setColor(icon,params),adjustSuccessIconBackgoundColor(),applyCustomClass(icon,params,\"icon\")},adjustSuccessIconBackgoundColor=function(){for(var popup=getPopup(),popupBackgroundColor=window.getComputedStyle(popup).getPropertyValue(\"background-color\"),successIconParts=popup.querySelectorAll(\"[class^=swal2-success-circular-line], .swal2-success-fix\"),i=0;i<successIconParts.length;i++)successIconParts[i].style.backgroundColor=popupBackgroundColor},setColor=function(icon,params){if(params.iconColor){icon.style.color=params.iconColor,icon.style.borderColor=params.iconColor;for(var _i=0,_arr=[\".swal2-success-line-tip\",\".swal2-success-line-long\",\".swal2-x-mark-line-left\",\".swal2-x-mark-line-right\"];_i<_arr.length;_i++)setStyle(icon,_arr[_i],\"backgroundColor\",params.iconColor);setStyle(icon,\".swal2-success-ring\",\"borderColor\",params.iconColor)}},iconContent=function(content){return'<div class=\"'.concat(swalClasses[\"icon-content\"],'\">').concat(content,\"</div>\")},currentSteps=[],getQueueStep=function(){return getContainer()&&getContainer().getAttribute(\"data-queue-step\")},renderHeader=function(instance,params){var header=getHeader();applyCustomClass(header,params,\"header\"),function(instance,params){var progressStepsContainer=getProgressSteps();if(!params.progressSteps||0===params.progressSteps.length)return hide(progressStepsContainer);show(progressStepsContainer),progressStepsContainer.textContent=\"\";var currentProgressStep=parseInt(void 0===params.currentProgressStep?getQueueStep():params.currentProgressStep);currentProgressStep>=params.progressSteps.length&&warn(\"Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)\"),params.progressSteps.forEach(function(step,index){var stepEl=function(step){var stepEl=document.createElement(\"li\");return addClass(stepEl,swalClasses[\"progress-step\"]),setInnerHtml(stepEl,step),stepEl}(step);if(progressStepsContainer.appendChild(stepEl),index===currentProgressStep&&addClass(stepEl,swalClasses[\"active-progress-step\"]),index!==params.progressSteps.length-1){var lineEl=function(params){var lineEl=document.createElement(\"li\");return addClass(lineEl,swalClasses[\"progress-step-line\"]),params.progressStepsDistance&&(lineEl.style.width=params.progressStepsDistance),lineEl}(params);progressStepsContainer.appendChild(lineEl)}})}(0,params),function(instance,params){var innerParams=privateProps.innerParams.get(instance);if(innerParams&&params.icon===innerParams.icon&&getIcon())applyStyles(getIcon(),params);else if(function(){for(var icons=getIcons(),i=0;i<icons.length;i++)hide(icons[i])}(),params.icon)if(-1!==Object.keys(iconTypes).indexOf(params.icon)){var icon=elementBySelector(\".\".concat(swalClasses.icon,\".\").concat(iconTypes[params.icon]));show(icon),function(icon,params){icon.textContent=\"\",setInnerHtml(icon,params.iconHtml?iconContent(params.iconHtml):\"success\"===params.icon?'\\n      <div class=\"swal2-success-circular-line-left\"></div>\\n      <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\\n      <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\\n      <div class=\"swal2-success-circular-line-right\"></div>\\n    ':\"error\"===params.icon?'\\n      <span class=\"swal2-x-mark\">\\n        <span class=\"swal2-x-mark-line-left\"></span>\\n        <span class=\"swal2-x-mark-line-right\"></span>\\n      </span>\\n    ':iconContent({question:\"?\",warning:\"!\",info:\"i\"}[params.icon]))}(icon,params),applyStyles(icon,params),addClass(icon,params.showClass.icon)}else error('Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"'.concat(params.icon,'\"'))}(instance,params),function(instance,params){var image=getImage();if(!params.imageUrl)return hide(image);show(image,\"\"),image.setAttribute(\"src\",params.imageUrl),image.setAttribute(\"alt\",params.imageAlt),applyNumericalStyle(image,\"width\",params.imageWidth),applyNumericalStyle(image,\"height\",params.imageHeight),image.className=swalClasses.image,applyCustomClass(image,params,\"image\")}(0,params),function(instance,params){var title=getTitle();toggle(title,params.title||params.titleText),params.title&&parseHtmlToContainer(params.title,title),params.titleText&&(title.innerText=params.titleText),applyCustomClass(title,params,\"title\")}(0,params),function(instance,params){var closeButton=getCloseButton();setInnerHtml(closeButton,params.closeButtonHtml),applyCustomClass(closeButton,params,\"closeButton\"),toggle(closeButton,params.showCloseButton),closeButton.setAttribute(\"aria-label\",params.closeButtonAriaLabel)}(0,params)},render=function(instance,params){(function(instance,params){var popup=getPopup();applyNumericalStyle(popup,\"width\",params.width),applyNumericalStyle(popup,\"padding\",params.padding),params.background&&(popup.style.background=params.background),function(popup,params){popup.className=\"\".concat(swalClasses.popup,\" \").concat(isVisible(popup)?params.showClass.popup:\"\"),params.toast?(addClass([document.documentElement,document.body],swalClasses[\"toast-shown\"]),addClass(popup,swalClasses.toast)):addClass(popup,swalClasses.modal),applyCustomClass(popup,params,\"popup\"),\"string\"==typeof params.customClass&&addClass(popup,params.customClass),params.icon&&addClass(popup,swalClasses[\"icon-\".concat(params.icon)])}(popup,params)})(0,params),function(instance,params){var container=getContainer();if(container){(function(container,backdrop){\"string\"==typeof backdrop?container.style.background=backdrop:backdrop||addClass([document.documentElement,document.body],swalClasses[\"no-backdrop\"])})(container,params.backdrop),!params.backdrop&&params.allowOutsideClick&&warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`'),function(container,position){position in swalClasses?addClass(container,swalClasses[position]):(warn('The \"position\" parameter is not valid, defaulting to \"center\"'),addClass(container,swalClasses.center))}(container,params.position),function(container,grow){if(grow&&\"string\"==typeof grow){var growClass=\"grow-\".concat(grow);growClass in swalClasses&&addClass(container,swalClasses[growClass])}}(container,params.grow),applyCustomClass(container,params,\"container\");var queueStep=document.body.getAttribute(\"data-swal2-queue-step\");queueStep&&(container.setAttribute(\"data-queue-step\",queueStep),document.body.removeAttribute(\"data-swal2-queue-step\"))}}(0,params),renderHeader(instance,params),renderContent(instance,params),function(instance,params){var actions=getActions(),loader=getLoader(),confirmButton=getConfirmButton(),denyButton=getDenyButton(),cancelButton=getCancelButton();params.showConfirmButton||params.showDenyButton||params.showCancelButton||hide(actions),applyCustomClass(actions,params,\"actions\"),renderButton(confirmButton,\"confirm\",params),renderButton(denyButton,\"deny\",params),renderButton(cancelButton,\"cancel\",params),function(confirmButton,denyButton,cancelButton,params){if(!params.buttonsStyling)return removeClass([confirmButton,denyButton,cancelButton],swalClasses.styled);addClass([confirmButton,denyButton,cancelButton],swalClasses.styled),params.confirmButtonColor&&(confirmButton.style.backgroundColor=params.confirmButtonColor),params.denyButtonColor&&(denyButton.style.backgroundColor=params.denyButtonColor),params.cancelButtonColor&&(cancelButton.style.backgroundColor=params.cancelButtonColor)}(confirmButton,denyButton,cancelButton,params),params.reverseButtons&&(actions.insertBefore(cancelButton,loader),actions.insertBefore(denyButton,loader),actions.insertBefore(confirmButton,loader)),setInnerHtml(loader,params.loaderHtml),applyCustomClass(loader,params,\"loader\")}(0,params),function(instance,params){var footer=getFooter();toggle(footer,params.footer),params.footer&&parseHtmlToContainer(params.footer,footer),applyCustomClass(footer,params,\"footer\")}(0,params),\"function\"==typeof params.didRender?params.didRender(getPopup()):\"function\"==typeof params.onRender&&params.onRender(getPopup())},clickConfirm=function(){return getConfirmButton()&&getConfirmButton().click()},showLoading=function(buttonToReplace){var popup=getPopup();popup||Swal.fire(),popup=getPopup();var actions=getActions(),loader=getLoader();!buttonToReplace&&isVisible(getConfirmButton())&&(buttonToReplace=getConfirmButton()),show(actions),buttonToReplace&&(hide(buttonToReplace),loader.setAttribute(\"data-button-to-replace\",buttonToReplace.className)),loader.parentNode.insertBefore(loader,buttonToReplace),addClass([popup,actions],swalClasses.loading),show(loader),popup.setAttribute(\"data-loading\",!0),popup.setAttribute(\"aria-busy\",!0),popup.focus()},globalState={},stopTimer=function(){if(globalState.timeout)return function(){var timerProgressBar=getTimerProgressBar(),timerProgressBarWidth=parseInt(window.getComputedStyle(timerProgressBar).width);timerProgressBar.style.removeProperty(\"transition\"),timerProgressBar.style.width=\"100%\";var timerProgressBarFullWidth=parseInt(window.getComputedStyle(timerProgressBar).width),timerProgressBarPercent=parseInt(timerProgressBarWidth/timerProgressBarFullWidth*100);timerProgressBar.style.removeProperty(\"transition\"),timerProgressBar.style.width=\"\".concat(timerProgressBarPercent,\"%\")}(),globalState.timeout.stop()},resumeTimer=function(){if(globalState.timeout){var remaining=globalState.timeout.start();return animateTimerProgressBar(remaining),remaining}},bodyClickListenerAdded=!1,clickHandlers={},bodyClickListener=function(event){for(var el=event.target;el&&el!==document;el=el.parentNode)for(var attr in clickHandlers){var template=el.getAttribute(attr);if(template)return void clickHandlers[attr].fire({template:template})}},defaultParams={title:\"\",titleText:\"\",text:\"\",html:\"\",footer:\"\",icon:void 0,iconColor:void 0,iconHtml:void 0,template:void 0,toast:!1,animation:!0,showClass:{popup:\"swal2-show\",backdrop:\"swal2-backdrop-show\",icon:\"swal2-icon-show\"},hideClass:{popup:\"swal2-hide\",backdrop:\"swal2-backdrop-hide\",icon:\"swal2-icon-hide\"},customClass:{},target:\"body\",backdrop:!0,heightAuto:!0,allowOutsideClick:!0,allowEscapeKey:!0,allowEnterKey:!0,stopKeydownPropagation:!0,keydownListenerCapture:!1,showConfirmButton:!0,showDenyButton:!1,showCancelButton:!1,preConfirm:void 0,preDeny:void 0,confirmButtonText:\"OK\",confirmButtonAriaLabel:\"\",confirmButtonColor:void 0,denyButtonText:\"No\",denyButtonAriaLabel:\"\",denyButtonColor:void 0,cancelButtonText:\"Cancel\",cancelButtonAriaLabel:\"\",cancelButtonColor:void 0,buttonsStyling:!0,reverseButtons:!1,focusConfirm:!0,focusDeny:!1,focusCancel:!1,showCloseButton:!1,closeButtonHtml:\"&times;\",closeButtonAriaLabel:\"Close this dialog\",loaderHtml:\"\",showLoaderOnConfirm:!1,imageUrl:void 0,imageWidth:void 0,imageHeight:void 0,imageAlt:\"\",timer:void 0,timerProgressBar:!1,width:void 0,padding:void 0,background:void 0,input:void 0,inputPlaceholder:\"\",inputLabel:\"\",inputValue:\"\",inputOptions:{},inputAutoTrim:!0,inputAttributes:{},inputValidator:void 0,returnInputValueOnDeny:!1,validationMessage:void 0,grow:!1,position:\"center\",progressSteps:[],currentProgressStep:void 0,progressStepsDistance:void 0,onBeforeOpen:void 0,onOpen:void 0,willOpen:void 0,didOpen:void 0,onRender:void 0,didRender:void 0,onClose:void 0,onAfterClose:void 0,willClose:void 0,didClose:void 0,onDestroy:void 0,didDestroy:void 0,scrollbarPadding:!0},updatableParams=[\"allowEscapeKey\",\"allowOutsideClick\",\"background\",\"buttonsStyling\",\"cancelButtonAriaLabel\",\"cancelButtonColor\",\"cancelButtonText\",\"closeButtonAriaLabel\",\"closeButtonHtml\",\"confirmButtonAriaLabel\",\"confirmButtonColor\",\"confirmButtonText\",\"currentProgressStep\",\"customClass\",\"denyButtonAriaLabel\",\"denyButtonColor\",\"denyButtonText\",\"didClose\",\"didDestroy\",\"footer\",\"hideClass\",\"html\",\"icon\",\"iconColor\",\"imageAlt\",\"imageHeight\",\"imageUrl\",\"imageWidth\",\"onAfterClose\",\"onClose\",\"onDestroy\",\"progressSteps\",\"reverseButtons\",\"showCancelButton\",\"showCloseButton\",\"showConfirmButton\",\"showDenyButton\",\"text\",\"title\",\"titleText\",\"willClose\"],deprecatedParams={animation:'showClass\" and \"hideClass',onBeforeOpen:\"willOpen\",onOpen:\"didOpen\",onRender:\"didRender\",onClose:\"willClose\",onAfterClose:\"didClose\",onDestroy:\"didDestroy\"},toastIncompatibleParams=[\"allowOutsideClick\",\"allowEnterKey\",\"backdrop\",\"focusConfirm\",\"focusDeny\",\"focusCancel\",\"heightAuto\",\"keydownListenerCapture\"],isValidParameter=function(paramName){return Object.prototype.hasOwnProperty.call(defaultParams,paramName)},isDeprecatedParameter=function(paramName){return deprecatedParams[paramName]},checkIfParamIsValid=function(param){isValidParameter(param)||warn('Unknown parameter \"'.concat(param,'\"'))},checkIfToastParamIsValid=function(param){-1!==toastIncompatibleParams.indexOf(param)&&warn('The parameter \"'.concat(param,'\" is incompatible with toasts'))},checkIfParamIsDeprecated=function(param){var deprecatedParam,useInstead,message;isDeprecatedParameter(param)&&(deprecatedParam=param,useInstead=isDeprecatedParameter(param),message='\"'.concat(deprecatedParam,'\" is deprecated and will be removed in the next major release. Please use \"').concat(useInstead,'\" instead.'),-1===previousWarnOnceMessages.indexOf(message)&&(previousWarnOnceMessages.push(message),warn(message)))},showWarningsForParams=function(params){for(var param in params)checkIfParamIsValid(param),params.toast&&checkIfToastParamIsValid(param),checkIfParamIsDeprecated(param)},staticMethods=Object.freeze({isValidParameter:isValidParameter,isUpdatableParameter:function(paramName){return-1!==updatableParams.indexOf(paramName)},isDeprecatedParameter:isDeprecatedParameter,argsToParams:function(args){var params={};return\"object\"!==_typeof(args[0])||isElement(args[0])?[\"title\",\"html\",\"icon\"].forEach(function(name,index){var arg=args[index];\"string\"==typeof arg||isElement(arg)?params[name]=arg:void 0!==arg&&error(\"Unexpected type of \".concat(name,'! Expected \"string\" or \"Element\", got ').concat(_typeof(arg)))}):_extends(params,args[0]),params},isVisible:function(){return isVisible(getPopup())},clickConfirm:clickConfirm,clickDeny:function(){return getDenyButton()&&getDenyButton().click()},clickCancel:function(){return getCancelButton()&&getCancelButton().click()},getContainer:getContainer,getPopup:getPopup,getTitle:getTitle,getContent:getContent,getHtmlContainer:function(){return elementByClass(swalClasses[\"html-container\"])},getImage:getImage,getIcon:getIcon,getIcons:getIcons,getInputLabel:function(){return elementByClass(swalClasses[\"input-label\"])},getCloseButton:getCloseButton,getActions:getActions,getConfirmButton:getConfirmButton,getDenyButton:getDenyButton,getCancelButton:getCancelButton,getLoader:getLoader,getHeader:getHeader,getFooter:getFooter,getTimerProgressBar:getTimerProgressBar,getFocusableElements:getFocusableElements,getValidationMessage:getValidationMessage,isLoading:function(){return getPopup().hasAttribute(\"data-loading\")},fire:function(){for(var Swal=this,_len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _construct(Swal,args)},mixin:function(mixinParams){return function(_this){!function(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}(MixinSwal,_this);var Derived,hasNativeReflectConstruct,_super=(Derived=MixinSwal,hasNativeReflectConstruct=_isNativeReflectConstruct(),function(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)});function MixinSwal(){return _classCallCheck(this,MixinSwal),_super.apply(this,arguments)}return _createClass(MixinSwal,[{key:\"_main\",value:function(params,prevMixinParams){return _get(_getPrototypeOf(MixinSwal.prototype),\"_main\",this).call(this,params,_extends({},prevMixinParams,mixinParams))}}]),MixinSwal}(this)},queue:function(steps){var Swal=this;currentSteps=steps;var resetAndResolve=function(resolve,value){currentSteps=[],resolve(value)},queueResult=[];return new Promise(function(resolve){!function step(i,callback){i<currentSteps.length?(document.body.setAttribute(\"data-swal2-queue-step\",i),Swal.fire(currentSteps[i]).then(function(result){void 0!==result.value?(queueResult.push(result.value),step(i+1,callback)):resetAndResolve(resolve,{dismiss:result.dismiss})})):resetAndResolve(resolve,{value:queueResult})}(0)})},getQueueStep:getQueueStep,insertQueueStep:function(step,index){return index&&index<currentSteps.length?currentSteps.splice(index,0,step):currentSteps.push(step)},deleteQueueStep:function(index){void 0!==currentSteps[index]&&currentSteps.splice(index,1)},showLoading:showLoading,enableLoading:showLoading,getTimerLeft:function(){return globalState.timeout&&globalState.timeout.getTimerLeft()},stopTimer:stopTimer,resumeTimer:resumeTimer,toggleTimer:function(){var timer=globalState.timeout;return timer&&(timer.running?stopTimer():resumeTimer())},increaseTimer:function(n){if(globalState.timeout){var remaining=globalState.timeout.increase(n);return animateTimerProgressBar(remaining,!0),remaining}},isTimerRunning:function(){return globalState.timeout&&globalState.timeout.isRunning()},bindClickHandler:function(){clickHandlers[arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"data-swal-template\"]=this,bodyClickListenerAdded||(document.body.addEventListener(\"click\",bodyClickListener),bodyClickListenerAdded=!0)}});function hideLoading(){if(privateProps.innerParams.get(this)){var domCache=privateProps.domCache.get(this);hide(domCache.loader);var buttonToReplace=domCache.popup.getElementsByClassName(domCache.loader.getAttribute(\"data-button-to-replace\"));buttonToReplace.length?show(buttonToReplace[0],\"inline-block\"):!isVisible(getConfirmButton())&&!isVisible(getDenyButton())&&!isVisible(getCancelButton())&&hide(domCache.actions),removeClass([domCache.popup,domCache.actions],swalClasses.loading),domCache.popup.removeAttribute(\"aria-busy\"),domCache.popup.removeAttribute(\"data-loading\"),domCache.confirmButton.disabled=!1,domCache.denyButton.disabled=!1,domCache.cancelButton.disabled=!1}}var shouldPreventTouchMove=function(event){var target=event.target,container=getContainer();return!(isStylys(event)||isZoom(event)||target!==container&&(isScrollable(container)||\"INPUT\"===target.tagName||isScrollable(getContent())&&getContent().contains(target)))},isStylys=function(event){return event.touches&&event.touches.length&&\"stylus\"===event.touches[0].touchType},isZoom=function(event){return event.touches&&event.touches.length>1},isIE11=function(){return!!window.MSInputMethodContext&&!!document.documentMode},fixVerticalPositionIE=function(){var container=getContainer(),popup=getPopup();container.style.removeProperty(\"align-items\"),popup.offsetTop<0&&(container.style.alignItems=\"flex-start\")},privateMethods={swalPromiseResolve:new WeakMap};function removePopupAndResetState(instance,container,isToast$$1,didClose){isToast$$1?triggerDidCloseAndDispose(instance,didClose):(new Promise(function(resolve){var x=window.scrollX,y=window.scrollY;globalState.restoreFocusTimeout=setTimeout(function(){globalState.previousActiveElement&&globalState.previousActiveElement.focus?(globalState.previousActiveElement.focus(),globalState.previousActiveElement=null):document.body&&document.body.focus(),resolve()},100),void 0!==x&&void 0!==y&&window.scrollTo(x,y)}).then(function(){return triggerDidCloseAndDispose(instance,didClose)}),globalState.keydownTarget.removeEventListener(\"keydown\",globalState.keydownHandler,{capture:globalState.keydownListenerCapture}),globalState.keydownHandlerAdded=!1),container.parentNode&&!document.body.getAttribute(\"data-swal2-queue-step\")&&container.parentNode.removeChild(container),isModal()&&(null!==states.previousBodyPadding&&(document.body.style.paddingRight=\"\".concat(states.previousBodyPadding,\"px\"),states.previousBodyPadding=null),function(){if(hasClass(document.body,swalClasses.iosfix)){var offset=parseInt(document.body.style.top,10);removeClass(document.body,swalClasses.iosfix),document.body.style.top=\"\",document.body.scrollTop=-1*offset}}(),\"undefined\"!=typeof window&&isIE11()&&window.removeEventListener(\"resize\",fixVerticalPositionIE),toArray(document.body.children).forEach(function(el){el.hasAttribute(\"data-previous-aria-hidden\")?(el.setAttribute(\"aria-hidden\",el.getAttribute(\"data-previous-aria-hidden\")),el.removeAttribute(\"data-previous-aria-hidden\")):el.removeAttribute(\"aria-hidden\")})),removeClass([document.documentElement,document.body],[swalClasses.shown,swalClasses[\"height-auto\"],swalClasses[\"no-backdrop\"],swalClasses[\"toast-shown\"],swalClasses[\"toast-column\"]])}function close(resolveValue){var popup=getPopup();if(popup){resolveValue=prepareResolveValue(resolveValue);var innerParams=privateProps.innerParams.get(this);if(innerParams&&!hasClass(popup,innerParams.hideClass.popup)){var swalPromiseResolve=privateMethods.swalPromiseResolve.get(this);removeClass(popup,innerParams.showClass.popup),addClass(popup,innerParams.hideClass.popup);var backdrop=getContainer();removeClass(backdrop,innerParams.showClass.backdrop),addClass(backdrop,innerParams.hideClass.backdrop),handlePopupAnimation(this,popup,innerParams),swalPromiseResolve(resolveValue)}}}var prepareResolveValue=function(resolveValue){return void 0===resolveValue?{isConfirmed:!1,isDenied:!1,isDismissed:!0}:_extends({isConfirmed:!1,isDenied:!1,isDismissed:!1},resolveValue)},handlePopupAnimation=function(instance,popup,innerParams){var container=getContainer(),animationIsSupported=animationEndEvent&&hasCssAnimation(popup),onAfterClose=innerParams.onAfterClose,didClose=innerParams.didClose;runDidClose(popup,innerParams.willClose,innerParams.onClose),animationIsSupported?animatePopup(instance,popup,container,didClose||onAfterClose):removePopupAndResetState(instance,container,isToast(),didClose||onAfterClose)},runDidClose=function(popup,willClose,onClose){null!==willClose&&\"function\"==typeof willClose?willClose(popup):null!==onClose&&\"function\"==typeof onClose&&onClose(popup)},animatePopup=function(instance,popup,container,didClose){globalState.swalCloseEventFinishedCallback=removePopupAndResetState.bind(null,instance,container,isToast(),didClose),popup.addEventListener(animationEndEvent,function(e){e.target===popup&&(globalState.swalCloseEventFinishedCallback(),delete globalState.swalCloseEventFinishedCallback)})},triggerDidCloseAndDispose=function(instance,didClose){setTimeout(function(){\"function\"==typeof didClose&&didClose(),instance._destroy()})};function setButtonsDisabled(instance,buttons,disabled){var domCache=privateProps.domCache.get(instance);buttons.forEach(function(button){domCache[button].disabled=disabled})}function setInputDisabled(input,disabled){if(!input)return!1;if(\"radio\"===input.type)for(var radios=input.parentNode.parentNode.querySelectorAll(\"input\"),i=0;i<radios.length;i++)radios[i].disabled=disabled;else input.disabled=disabled}var Timer=function(){function Timer(callback,delay){_classCallCheck(this,Timer),this.callback=callback,this.remaining=delay,this.running=!1,this.start()}return _createClass(Timer,[{key:\"start\",value:function(){return this.running||(this.running=!0,this.started=new Date,this.id=setTimeout(this.callback,this.remaining)),this.remaining}},{key:\"stop\",value:function(){return this.running&&(this.running=!1,clearTimeout(this.id),this.remaining-=new Date-this.started),this.remaining}},{key:\"increase\",value:function(n){var running=this.running;return running&&this.stop(),this.remaining+=n,running&&this.start(),this.remaining}},{key:\"getTimerLeft\",value:function(){return this.running&&(this.stop(),this.start()),this.remaining}},{key:\"isRunning\",value:function(){return this.running}}]),Timer}(),defaultInputValidators={email:function(string,validationMessage){return/^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string)?Promise.resolve():Promise.resolve(validationMessage||\"Invalid email address\")},url:function(string,validationMessage){return/^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string)?Promise.resolve():Promise.resolve(validationMessage||\"Invalid URL\")}};function setParameters(params){(function(params){params.inputValidator||Object.keys(defaultInputValidators).forEach(function(key){params.input===key&&(params.inputValidator=defaultInputValidators[key])})})(params),params.showLoaderOnConfirm&&!params.preConfirm&&warn(\"showLoaderOnConfirm is set to true, but preConfirm is not defined.\\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\\nhttps://sweetalert2.github.io/#ajax-request\"),params.animation=callIfFunction(params.animation),function(params){(!params.target||\"string\"==typeof params.target&&!document.querySelector(params.target)||\"string\"!=typeof params.target&&!params.target.appendChild)&&(warn('Target parameter is not valid, defaulting to \"body\"'),params.target=\"body\")}(params),\"string\"==typeof params.title&&(params.title=params.title.split(\"\\n\").join(\"<br />\")),function(params){var oldContainer,content,input,file,range,rangeOutput,select,checkbox,textarea,target,oldContainerExisted=!!(oldContainer=getContainer())&&(oldContainer.parentNode.removeChild(oldContainer),removeClass([document.documentElement,document.body],[swalClasses[\"no-backdrop\"],swalClasses[\"toast-shown\"],swalClasses[\"has-column\"]]),!0);if(isNodeEnv())error(\"SweetAlert2 requires document to initialize\");else{var container=document.createElement(\"div\");container.className=swalClasses.container,oldContainerExisted&&addClass(container,swalClasses[\"no-transition\"]),setInnerHtml(container,sweetHTML);var targetElement=\"string\"==typeof(target=params.target)?document.querySelector(target):target;targetElement.appendChild(container),function(params){var popup=getPopup();popup.setAttribute(\"role\",params.toast?\"alert\":\"dialog\"),popup.setAttribute(\"aria-live\",params.toast?\"polite\":\"assertive\"),params.toast||popup.setAttribute(\"aria-modal\",\"true\")}(params),function(targetElement){\"rtl\"===window.getComputedStyle(targetElement).direction&&addClass(getContainer(),swalClasses.rtl)}(targetElement),content=getContent(),input=getChildByClass(content,swalClasses.input),file=getChildByClass(content,swalClasses.file),range=content.querySelector(\".\".concat(swalClasses.range,\" input\")),rangeOutput=content.querySelector(\".\".concat(swalClasses.range,\" output\")),select=getChildByClass(content,swalClasses.select),checkbox=content.querySelector(\".\".concat(swalClasses.checkbox,\" input\")),textarea=getChildByClass(content,swalClasses.textarea),input.oninput=resetValidationMessage,file.onchange=resetValidationMessage,select.onchange=resetValidationMessage,checkbox.onchange=resetValidationMessage,textarea.oninput=resetValidationMessage,range.oninput=function(e){resetValidationMessage(e),rangeOutput.value=range.value},range.onchange=function(e){resetValidationMessage(e),range.nextSibling.value=range.value}}}(params)}var currentInstance,swalStringParams=[\"swal-title\",\"swal-html\",\"swal-footer\"],showWarningsForAttributes=function(el,allowedAttributes){toArray(el.attributes).forEach(function(attribute){-1===allowedAttributes.indexOf(attribute.name)&&warn(['Unrecognized attribute \"'.concat(attribute.name,'\" on <').concat(el.tagName.toLowerCase(),\">.\"),\"\".concat(allowedAttributes.length?\"Allowed attributes are: \".concat(allowedAttributes.join(\", \")):\"To set the value, use HTML within the element.\")])})},runDidOpen=function(popup,params){\"function\"==typeof params.didOpen?setTimeout(function(){return params.didOpen(popup)}):\"function\"==typeof params.onOpen&&setTimeout(function(){return params.onOpen(popup)})},swalOpenAnimationFinished=function swalOpenAnimationFinished(event){var popup=getPopup();if(event.target===popup){var container=getContainer();popup.removeEventListener(animationEndEvent,swalOpenAnimationFinished),container.style.overflowY=\"auto\"}},setScrollingVisibility=function(container,popup){animationEndEvent&&hasCssAnimation(popup)?(container.style.overflowY=\"hidden\",popup.addEventListener(animationEndEvent,swalOpenAnimationFinished)):container.style.overflowY=\"auto\"},fixScrollContainer=function(container,scrollbarPadding,initialBodyOverflow){(function(){if((/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream||\"MacIntel\"===navigator.platform&&navigator.maxTouchPoints>1)&&!hasClass(document.body,swalClasses.iosfix)){var offset=document.body.scrollTop;document.body.style.top=\"\".concat(-1*offset,\"px\"),addClass(document.body,swalClasses.iosfix),function(){var preventTouchMove,container=getContainer();container.ontouchstart=function(e){preventTouchMove=shouldPreventTouchMove(e)},container.ontouchmove=function(e){preventTouchMove&&(e.preventDefault(),e.stopPropagation())}}(),navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i)||getPopup().scrollHeight>window.innerHeight-44&&(getContainer().style.paddingBottom=\"\".concat(44,\"px\"))}})(),\"undefined\"!=typeof window&&isIE11()&&(fixVerticalPositionIE(),window.addEventListener(\"resize\",fixVerticalPositionIE)),scrollbarPadding&&\"hidden\"!==initialBodyOverflow&&(null===states.previousBodyPadding&&document.body.scrollHeight>window.innerHeight&&(states.previousBodyPadding=parseInt(window.getComputedStyle(document.body).getPropertyValue(\"padding-right\")),document.body.style.paddingRight=\"\".concat(states.previousBodyPadding+function(){var scrollDiv=document.createElement(\"div\");scrollDiv.className=swalClasses[\"scrollbar-measure\"],document.body.appendChild(scrollDiv);var scrollbarWidth=scrollDiv.getBoundingClientRect().width-scrollDiv.clientWidth;return document.body.removeChild(scrollDiv),scrollbarWidth}(),\"px\"))),setTimeout(function(){container.scrollTop=0})},addClasses$1=function(container,popup,params){addClass(container,params.showClass.backdrop),popup.style.setProperty(\"opacity\",\"0\",\"important\"),show(popup),setTimeout(function(){addClass(popup,params.showClass.popup),popup.style.removeProperty(\"opacity\")},10),addClass([document.documentElement,document.body],swalClasses.shown),params.heightAuto&&params.backdrop&&!params.toast&&addClass([document.documentElement,document.body],swalClasses[\"height-auto\"])},populateInputOptions={select:function(content,inputOptions,params){var select=getChildByClass(content,swalClasses.select),renderOption=function(parent,optionLabel,optionValue){var option=document.createElement(\"option\");option.value=optionValue,setInnerHtml(option,optionLabel),option.selected=isSelected(optionValue,params.inputValue),parent.appendChild(option)};inputOptions.forEach(function(inputOption){var optionValue=inputOption[0],optionLabel=inputOption[1];if(Array.isArray(optionLabel)){var optgroup=document.createElement(\"optgroup\");optgroup.label=optionValue,optgroup.disabled=!1,select.appendChild(optgroup),optionLabel.forEach(function(o){return renderOption(optgroup,o[1],o[0])})}else renderOption(select,optionLabel,optionValue)}),select.focus()},radio:function(content,inputOptions,params){var radio=getChildByClass(content,swalClasses.radio);inputOptions.forEach(function(inputOption){var radioValue=inputOption[0],radioLabel=inputOption[1],radioInput=document.createElement(\"input\"),radioLabelElement=document.createElement(\"label\");radioInput.type=\"radio\",radioInput.name=swalClasses.radio,radioInput.value=radioValue,isSelected(radioValue,params.inputValue)&&(radioInput.checked=!0);var label=document.createElement(\"span\");setInnerHtml(label,radioLabel),label.className=swalClasses.label,radioLabelElement.appendChild(radioInput),radioLabelElement.appendChild(label),radio.appendChild(radioLabelElement)});var radios=radio.querySelectorAll(\"input\");radios.length&&radios[0].focus()}},formatInputOptions=function formatInputOptions(inputOptions){var result=[];return\"undefined\"!=typeof Map&&inputOptions instanceof Map?inputOptions.forEach(function(value,key){var valueFormatted=value;\"object\"===_typeof(valueFormatted)&&(valueFormatted=formatInputOptions(valueFormatted)),result.push([key,valueFormatted])}):Object.keys(inputOptions).forEach(function(key){var valueFormatted=inputOptions[key];\"object\"===_typeof(valueFormatted)&&(valueFormatted=formatInputOptions(valueFormatted)),result.push([key,valueFormatted])}),result},isSelected=function(optionValue,inputValue){return inputValue&&inputValue.toString()===optionValue.toString()},handleConfirmOrDenyWithInput=function(instance,innerParams,type){var inputValue=function(instance,innerParams){var input=instance.getInput();if(!input)return null;switch(innerParams.input){case\"checkbox\":return function(input){return input.checked?1:0}(input);case\"radio\":return function(input){return input.checked?input.value:null}(input);case\"file\":return function(input){return input.files.length?null!==input.getAttribute(\"multiple\")?input.files:input.files[0]:null}(input);default:return innerParams.inputAutoTrim?input.value.trim():input.value}}(instance,innerParams);innerParams.inputValidator?handleInputValidator(instance,innerParams,inputValue):instance.getInput().checkValidity()?\"deny\"===type?deny(instance,innerParams,inputValue):confirm(instance,innerParams,inputValue):(instance.enableButtons(),instance.showValidationMessage(innerParams.validationMessage))},handleInputValidator=function(instance,innerParams,inputValue){instance.disableInput(),Promise.resolve().then(function(){return asPromise(innerParams.inputValidator(inputValue,innerParams.validationMessage))}).then(function(validationMessage){instance.enableButtons(),instance.enableInput(),validationMessage?instance.showValidationMessage(validationMessage):confirm(instance,innerParams,inputValue)})},deny=function(instance,innerParams,value){innerParams.preDeny?Promise.resolve().then(function(){return asPromise(innerParams.preDeny(value,innerParams.validationMessage))}).then(function(preDenyValue){!1===preDenyValue?instance.hideLoading():instance.closePopup({isDenied:!0,value:void 0===preDenyValue?value:preDenyValue})}):instance.closePopup({isDenied:!0,value:value})},succeedWith=function(instance,value){instance.closePopup({isConfirmed:!0,value:value})},confirm=function(instance,innerParams,value){innerParams.showLoaderOnConfirm&&showLoading(),innerParams.preConfirm?(instance.resetValidationMessage(),Promise.resolve().then(function(){return asPromise(innerParams.preConfirm(value,innerParams.validationMessage))}).then(function(preConfirmValue){isVisible(getValidationMessage())||!1===preConfirmValue?instance.hideLoading():succeedWith(instance,void 0===preConfirmValue?value:preConfirmValue)})):succeedWith(instance,value)},setFocus=function(innerParams,index,increment){var focusableElements=getFocusableElements();if(focusableElements.length)return(index+=increment)===focusableElements.length?index=0:-1===index&&(index=focusableElements.length-1),focusableElements[index].focus();getPopup().focus()},arrowKeysNextButton=[\"ArrowRight\",\"ArrowDown\",\"Right\",\"Down\"],arrowKeysPreviousButton=[\"ArrowLeft\",\"ArrowUp\",\"Left\",\"Up\"],escKeys=[\"Escape\",\"Esc\"],handleEnter=function(instance,e,innerParams){if(!e.isComposing&&e.target&&instance.getInput()&&e.target.outerHTML===instance.getInput().outerHTML){if(-1!==[\"textarea\",\"file\"].indexOf(innerParams.input))return;clickConfirm(),e.preventDefault()}},handleTab=function(e,innerParams){for(var targetElement=e.target,focusableElements=getFocusableElements(),btnIndex=-1,i=0;i<focusableElements.length;i++)if(targetElement===focusableElements[i]){btnIndex=i;break}setFocus(0,btnIndex,e.shiftKey?-1:1),e.stopPropagation(),e.preventDefault()},handleArrows=function(key){if(-1!==[getConfirmButton(),getDenyButton(),getCancelButton()].indexOf(document.activeElement)){var sibling=-1!==arrowKeysNextButton.indexOf(key)?\"nextElementSibling\":\"previousElementSibling\",buttonToFocus=document.activeElement[sibling];buttonToFocus&&buttonToFocus.focus()}},handleEsc=function(e,innerParams,dismissWith){callIfFunction(innerParams.allowEscapeKey)&&(e.preventDefault(),dismissWith(DismissReason.esc))},ignoreOutsideClick=!1,prepareParams=function(userParams,mixinParams){var templateParams=function(params){var template=\"string\"==typeof params.template?document.querySelector(params.template):params.template;if(!template)return{};var templateContent=template.content||template;return function(template){var allowedElements=swalStringParams.concat([\"swal-param\",\"swal-button\",\"swal-image\",\"swal-icon\",\"swal-input\",\"swal-input-option\"]);toArray(template.querySelectorAll(\"*\")).forEach(function(el){var tagName=el.tagName.toLowerCase();-1===allowedElements.indexOf(tagName)&&warn(\"Unrecognized element <\".concat(tagName,\">\"))})}(templateContent),_extends(function(templateContent){var result={};return toArray(templateContent.querySelectorAll(\"swal-param\")).forEach(function(param){showWarningsForAttributes(param,[\"name\",\"value\"]);var paramName=param.getAttribute(\"name\"),value=param.getAttribute(\"value\");\"boolean\"==typeof defaultParams[paramName]&&\"false\"===value&&(value=!1),\"object\"===_typeof(defaultParams[paramName])&&(value=JSON.parse(value)),result[paramName]=value}),result}(templateContent),function(templateContent){var result={};return toArray(templateContent.querySelectorAll(\"swal-button\")).forEach(function(button){showWarningsForAttributes(button,[\"type\",\"color\",\"aria-label\"]);var type=button.getAttribute(\"type\");result[\"\".concat(type,\"ButtonText\")]=button.innerHTML,result[\"show\".concat(capitalizeFirstLetter(type),\"Button\")]=!0,button.hasAttribute(\"color\")&&(result[\"\".concat(type,\"ButtonColor\")]=button.getAttribute(\"color\")),button.hasAttribute(\"aria-label\")&&(result[\"\".concat(type,\"ButtonAriaLabel\")]=button.getAttribute(\"aria-label\"))}),result}(templateContent),function(templateContent){var result={},image=templateContent.querySelector(\"swal-image\");return image&&(showWarningsForAttributes(image,[\"src\",\"width\",\"height\",\"alt\"]),image.hasAttribute(\"src\")&&(result.imageUrl=image.getAttribute(\"src\")),image.hasAttribute(\"width\")&&(result.imageWidth=image.getAttribute(\"width\")),image.hasAttribute(\"height\")&&(result.imageHeight=image.getAttribute(\"height\")),image.hasAttribute(\"alt\")&&(result.imageAlt=image.getAttribute(\"alt\"))),result}(templateContent),function(templateContent){var result={},icon=templateContent.querySelector(\"swal-icon\");return icon&&(showWarningsForAttributes(icon,[\"type\",\"color\"]),icon.hasAttribute(\"type\")&&(result.icon=icon.getAttribute(\"type\")),icon.hasAttribute(\"color\")&&(result.iconColor=icon.getAttribute(\"color\")),result.iconHtml=icon.innerHTML),result}(templateContent),function(templateContent){var result={},input=templateContent.querySelector(\"swal-input\");input&&(showWarningsForAttributes(input,[\"type\",\"label\",\"placeholder\",\"value\"]),result.input=input.getAttribute(\"type\")||\"text\",input.hasAttribute(\"label\")&&(result.inputLabel=input.getAttribute(\"label\")),input.hasAttribute(\"placeholder\")&&(result.inputPlaceholder=input.getAttribute(\"placeholder\")),input.hasAttribute(\"value\")&&(result.inputValue=input.getAttribute(\"value\")));var inputOptions=templateContent.querySelectorAll(\"swal-input-option\");return inputOptions.length&&(result.inputOptions={},toArray(inputOptions).forEach(function(option){showWarningsForAttributes(option,[\"value\"]);var optionValue=option.getAttribute(\"value\");result.inputOptions[optionValue]=option.innerHTML})),result}(templateContent),function(templateContent,paramNames){var result={};for(var i in paramNames){var paramName=paramNames[i],tag=templateContent.querySelector(paramName);tag&&(showWarningsForAttributes(tag,[]),result[paramName.replace(/^swal-/,\"\")]=tag.innerHTML)}return result}(templateContent,swalStringParams))}(userParams),showClass=_extends({},defaultParams.showClass,mixinParams.showClass,templateParams.showClass,userParams.showClass),hideClass=_extends({},defaultParams.hideClass,mixinParams.hideClass,templateParams.hideClass,userParams.hideClass),params=_extends({},defaultParams,mixinParams,templateParams,userParams);return params.showClass=showClass,params.hideClass=hideClass,!1===userParams.animation&&(params.showClass={popup:\"swal2-noanimation\",backdrop:\"swal2-noanimation\"},params.hideClass={}),params},swalPromise=function(instance,domCache,innerParams){return new Promise(function(resolve){var dismissWith=function(dismiss){instance.closePopup({isDismissed:!0,dismiss:dismiss})};privateMethods.swalPromiseResolve.set(instance,resolve),domCache.confirmButton.onclick=function(){return function(instance,innerParams){instance.disableButtons(),innerParams.input?handleConfirmOrDenyWithInput(instance,innerParams,\"confirm\"):confirm(instance,innerParams,!0)}(instance,innerParams)},domCache.denyButton.onclick=function(){return function(instance,innerParams){instance.disableButtons(),innerParams.returnInputValueOnDeny?handleConfirmOrDenyWithInput(instance,innerParams,\"deny\"):deny(instance,innerParams,!1)}(instance,innerParams)},domCache.cancelButton.onclick=function(){return function(instance,dismissWith){instance.disableButtons(),dismissWith(DismissReason.cancel)}(instance,dismissWith)},domCache.closeButton.onclick=function(){return dismissWith(DismissReason.close)},function(instance,domCache,dismissWith){privateProps.innerParams.get(instance).toast?function(instance,domCache,dismissWith){domCache.popup.onclick=function(){var innerParams=privateProps.innerParams.get(instance);innerParams.showConfirmButton||innerParams.showDenyButton||innerParams.showCancelButton||innerParams.showCloseButton||innerParams.timer||innerParams.input||dismissWith(DismissReason.close)}}(instance,domCache,dismissWith):(function(domCache){domCache.popup.onmousedown=function(){domCache.container.onmouseup=function(e){domCache.container.onmouseup=void 0,e.target===domCache.container&&(ignoreOutsideClick=!0)}}}(domCache),function(domCache){domCache.container.onmousedown=function(){domCache.popup.onmouseup=function(e){domCache.popup.onmouseup=void 0,(e.target===domCache.popup||domCache.popup.contains(e.target))&&(ignoreOutsideClick=!0)}}}(domCache),function(instance,domCache,dismissWith){domCache.container.onclick=function(e){var innerParams=privateProps.innerParams.get(instance);ignoreOutsideClick?ignoreOutsideClick=!1:e.target===domCache.container&&callIfFunction(innerParams.allowOutsideClick)&&dismissWith(DismissReason.backdrop)}}(instance,domCache,dismissWith))}(instance,domCache,dismissWith),function(instance,globalState,innerParams,dismissWith){globalState.keydownTarget&&globalState.keydownHandlerAdded&&(globalState.keydownTarget.removeEventListener(\"keydown\",globalState.keydownHandler,{capture:globalState.keydownListenerCapture}),globalState.keydownHandlerAdded=!1),innerParams.toast||(globalState.keydownHandler=function(e){return function(instance,e,dismissWith){var innerParams=privateProps.innerParams.get(instance);innerParams.stopKeydownPropagation&&e.stopPropagation(),\"Enter\"===e.key?handleEnter(instance,e,innerParams):\"Tab\"===e.key?handleTab(e,innerParams):-1!==[].concat(arrowKeysNextButton,arrowKeysPreviousButton).indexOf(e.key)?handleArrows(e.key):-1!==escKeys.indexOf(e.key)&&handleEsc(e,innerParams,dismissWith)}(instance,e,dismissWith)},globalState.keydownTarget=innerParams.keydownListenerCapture?window:getPopup(),globalState.keydownListenerCapture=innerParams.keydownListenerCapture,globalState.keydownTarget.addEventListener(\"keydown\",globalState.keydownHandler,{capture:globalState.keydownListenerCapture}),globalState.keydownHandlerAdded=!0)}(instance,globalState,innerParams,dismissWith),innerParams.toast&&(innerParams.input||innerParams.footer||innerParams.showCloseButton)?addClass(document.body,swalClasses[\"toast-column\"]):removeClass(document.body,swalClasses[\"toast-column\"]),function(instance,params){\"select\"===params.input||\"radio\"===params.input?function(instance,params){var content=getContent(),processInputOptions=function(inputOptions){return populateInputOptions[params.input](content,formatInputOptions(inputOptions),params)};hasToPromiseFn(params.inputOptions)||isPromise(params.inputOptions)?(showLoading(),asPromise(params.inputOptions).then(function(inputOptions){instance.hideLoading(),processInputOptions(inputOptions)})):\"object\"===_typeof(params.inputOptions)?processInputOptions(params.inputOptions):error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(_typeof(params.inputOptions)))}(instance,params):-1!==[\"text\",\"email\",\"number\",\"tel\",\"textarea\"].indexOf(params.input)&&(hasToPromiseFn(params.inputValue)||isPromise(params.inputValue))&&function(instance,params){var input=instance.getInput();hide(input),asPromise(params.inputValue).then(function(inputValue){input.value=\"number\"===params.input?parseFloat(inputValue)||0:\"\".concat(inputValue),show(input),input.focus(),instance.hideLoading()}).catch(function(err){error(\"Error in inputValue promise: \".concat(err)),input.value=\"\",show(input),input.focus(),instance.hideLoading()})}(instance,params)}(instance,innerParams),function(params){var container=getContainer(),popup=getPopup();\"function\"==typeof params.willOpen?params.willOpen(popup):\"function\"==typeof params.onBeforeOpen&&params.onBeforeOpen(popup);var initialBodyOverflow=window.getComputedStyle(document.body).overflowY;addClasses$1(container,popup,params),setTimeout(function(){setScrollingVisibility(container,popup)},10),isModal()&&(fixScrollContainer(container,params.scrollbarPadding,initialBodyOverflow),toArray(document.body.children).forEach(function(el){el===getContainer()||function(haystack,needle){if(\"function\"==typeof haystack.contains)return haystack.contains(needle)}(el,getContainer())||(el.hasAttribute(\"aria-hidden\")&&el.setAttribute(\"data-previous-aria-hidden\",el.getAttribute(\"aria-hidden\")),el.setAttribute(\"aria-hidden\",\"true\"))})),isToast()||globalState.previousActiveElement||(globalState.previousActiveElement=document.activeElement),runDidOpen(popup,params),removeClass(container,swalClasses[\"no-transition\"])}(innerParams),setupTimer(globalState,innerParams,dismissWith),initFocus(domCache,innerParams),setTimeout(function(){domCache.container.scrollTop=0})})},populateDomCache=function(instance){var domCache={popup:getPopup(),container:getContainer(),content:getContent(),actions:getActions(),confirmButton:getConfirmButton(),denyButton:getDenyButton(),cancelButton:getCancelButton(),loader:getLoader(),closeButton:getCloseButton(),validationMessage:getValidationMessage(),progressSteps:getProgressSteps()};return privateProps.domCache.set(instance,domCache),domCache},setupTimer=function(globalState$$1,innerParams,dismissWith){var timerProgressBar=getTimerProgressBar();hide(timerProgressBar),innerParams.timer&&(globalState$$1.timeout=new Timer(function(){dismissWith(\"timer\"),delete globalState$$1.timeout},innerParams.timer),innerParams.timerProgressBar&&(show(timerProgressBar),setTimeout(function(){globalState$$1.timeout&&globalState$$1.timeout.running&&animateTimerProgressBar(innerParams.timer)})))},initFocus=function(domCache,innerParams){if(!innerParams.toast)return callIfFunction(innerParams.allowEnterKey)?void(focusButton(domCache,innerParams)||setFocus(0,-1,1)):blurActiveElement()},focusButton=function(domCache,innerParams){return innerParams.focusDeny&&isVisible(domCache.denyButton)?(domCache.denyButton.focus(),!0):innerParams.focusCancel&&isVisible(domCache.cancelButton)?(domCache.cancelButton.focus(),!0):!(!innerParams.focusConfirm||!isVisible(domCache.confirmButton)||(domCache.confirmButton.focus(),0))},blurActiveElement=function(){document.activeElement&&\"function\"==typeof document.activeElement.blur&&document.activeElement.blur()},unsetWeakMaps=function(obj){for(var i in obj)obj[i]=new WeakMap},instanceMethods=Object.freeze({hideLoading:hideLoading,disableLoading:hideLoading,getInput:function(instance){var innerParams=privateProps.innerParams.get(instance||this),domCache=privateProps.domCache.get(instance||this);return domCache?getInput(domCache.content,innerParams.input):null},close:close,closePopup:close,closeModal:close,closeToast:close,enableButtons:function(){setButtonsDisabled(this,[\"confirmButton\",\"denyButton\",\"cancelButton\"],!1)},disableButtons:function(){setButtonsDisabled(this,[\"confirmButton\",\"denyButton\",\"cancelButton\"],!0)},enableInput:function(){return setInputDisabled(this.getInput(),!1)},disableInput:function(){return setInputDisabled(this.getInput(),!0)},showValidationMessage:function(error){var domCache=privateProps.domCache.get(this),params=privateProps.innerParams.get(this);setInnerHtml(domCache.validationMessage,error),domCache.validationMessage.className=swalClasses[\"validation-message\"],params.customClass&&params.customClass.validationMessage&&addClass(domCache.validationMessage,params.customClass.validationMessage),show(domCache.validationMessage);var input=this.getInput();input&&(input.setAttribute(\"aria-invalid\",!0),input.setAttribute(\"aria-describedBy\",swalClasses[\"validation-message\"]),focusInput(input),addClass(input,swalClasses.inputerror))},resetValidationMessage:function(){var domCache=privateProps.domCache.get(this);domCache.validationMessage&&hide(domCache.validationMessage);var input=this.getInput();input&&(input.removeAttribute(\"aria-invalid\"),input.removeAttribute(\"aria-describedBy\"),removeClass(input,swalClasses.inputerror))},getProgressSteps:function(){return privateProps.domCache.get(this).progressSteps},_main:function(userParams){var mixinParams=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};showWarningsForParams(_extends({},mixinParams,userParams)),globalState.currentInstance&&globalState.currentInstance._destroy(),globalState.currentInstance=this;var innerParams=prepareParams(userParams,mixinParams);setParameters(innerParams),Object.freeze(innerParams),globalState.timeout&&(globalState.timeout.stop(),delete globalState.timeout),clearTimeout(globalState.restoreFocusTimeout);var domCache=populateDomCache(this);return render(this,innerParams),privateProps.innerParams.set(this,innerParams),swalPromise(this,domCache,innerParams)},update:function(params){var popup=getPopup(),innerParams=privateProps.innerParams.get(this);if(!popup||hasClass(popup,innerParams.hideClass.popup))return warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");var validUpdatableParams={};Object.keys(params).forEach(function(param){Swal.isUpdatableParameter(param)?validUpdatableParams[param]=params[param]:warn('Invalid parameter to update: \"'.concat(param,'\". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\\n\\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md'))});var updatedParams=_extends({},innerParams,validUpdatableParams);render(this,updatedParams),privateProps.innerParams.set(this,updatedParams),Object.defineProperties(this,{params:{value:_extends({},this.params,params),writable:!1,enumerable:!0}})},_destroy:function(){var domCache=privateProps.domCache.get(this),innerParams=privateProps.innerParams.get(this);innerParams&&(domCache.popup&&globalState.swalCloseEventFinishedCallback&&(globalState.swalCloseEventFinishedCallback(),delete globalState.swalCloseEventFinishedCallback),globalState.deferDisposalTimer&&(clearTimeout(globalState.deferDisposalTimer),delete globalState.deferDisposalTimer),function(innerParams){\"function\"==typeof innerParams.didDestroy?innerParams.didDestroy():\"function\"==typeof innerParams.onDestroy&&innerParams.onDestroy()}(innerParams),delete this.params,delete globalState.keydownHandler,delete globalState.keydownTarget,unsetWeakMaps(privateProps),unsetWeakMaps(privateMethods))}}),SweetAlert=function(){function SweetAlert(){if(_classCallCheck(this,SweetAlert),\"undefined\"!=typeof window){\"undefined\"==typeof Promise&&error(\"This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)\"),currentInstance=this;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];var outerParams=Object.freeze(this.constructor.argsToParams(args));Object.defineProperties(this,{params:{value:outerParams,writable:!1,enumerable:!0,configurable:!0}});var promise=this._main(this.params);privateProps.promise.set(this,promise)}}return _createClass(SweetAlert,[{key:\"then\",value:function(onFulfilled){return privateProps.promise.get(this).then(onFulfilled)}},{key:\"finally\",value:function(onFinally){return privateProps.promise.get(this).finally(onFinally)}}]),SweetAlert}();_extends(SweetAlert.prototype,instanceMethods),_extends(SweetAlert,staticMethods),Object.keys(instanceMethods).forEach(function(key){SweetAlert[key]=function(){var _currentInstance;if(currentInstance)return(_currentInstance=currentInstance)[key].apply(_currentInstance,arguments)}}),SweetAlert.DismissReason=DismissReason,SweetAlert.version=\"10.13.0\";var Swal=SweetAlert;return Swal.default=Swal,Swal}(),void 0!==this&&this.Sweetalert2&&(this.swal=this.sweetAlert=this.Swal=this.SweetAlert=this.Sweetalert2)},QJFE:function(module,__webpack_exports__,__webpack_require__){\"use strict\";__webpack_require__.d(__webpack_exports__,\"a\",function(){return SwalDirective}),__webpack_require__.d(__webpack_exports__,\"b\",function(){return SweetAlert2Module});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(\"mrSG\"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(\"fXoL\"),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(\"XNiG\"),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(\"1G5W\"),_angular_common__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(\"ofXK\");const swalProviderToken=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.r(\"@sweetalert2/ngx-sweetalert2#swalProvider\"),fireOnInitToken=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.r(\"@sweetalert2/ngx-sweetalert2#fireOnInit\"),dismissOnDestroyToken=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.r(\"@sweetalert2/ngx-sweetalert2#dismissOnDestroy\");let SweetAlert2LoaderService=(()=>{class SweetAlert2LoaderService{constructor(swalProvider){this.swalProvider=swalProvider}get swal(){return this.swalPromiseCache||this.preloadSweetAlertLibrary(),this.swalPromiseCache}preloadSweetAlertLibrary(){if(this.swalPromiseCache)return;const libPromise=\"function\"==typeof(value=this.swalProvider)&&void 0===value.version?this.swalProvider():Promise.resolve(this.swalProvider);var value;this.swalPromiseCache=libPromise.then(value=>function(value){return\"function\"==typeof value}(value)?value:value.default)}}return SweetAlert2LoaderService.ɵfac=function(t){return new(t||SweetAlert2LoaderService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Yb(swalProviderToken))},SweetAlert2LoaderService.ɵprov=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Hb({token:SweetAlert2LoaderService,factory:SweetAlert2LoaderService.ɵfac}),SweetAlert2LoaderService})(),SwalComponent=(()=>{class SwalComponent{constructor(sweetAlert2Loader,moduleLevelFireOnInit,moduleLevelDismissOnDestroy){this.sweetAlert2Loader=sweetAlert2Loader,this.moduleLevelFireOnInit=moduleLevelFireOnInit,this.moduleLevelDismissOnDestroy=moduleLevelDismissOnDestroy,this.willOpen=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.didOpen=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.didRender=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.willClose=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.didClose=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.didDestroy=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.confirm=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.deny=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.dismiss=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.touchedProps=new Set,this.markTouched=this.touchedProps.add.bind(this.touchedProps),this.isCurrentlyShown=!1}set swalOptions(options){Object.assign(this,options),Object.keys(options).forEach(this.markTouched)}get swalOptions(){return[...this.touchedProps].reduce((obj,key)=>Object.assign(Object.assign({},obj),{[key]:this[key]}),{})}set swalVisible(visible){visible?this.fire():this.close()}get swalVisible(){return this.isCurrentlyShown}ngOnInit(){this.sweetAlert2Loader.preloadSweetAlertLibrary()}ngAfterViewInit(){(void 0===this.swalFireOnInit?this.moduleLevelFireOnInit:this.swalFireOnInit)&&this.fire()}ngOnChanges(changes){Object.keys(changes).filter(key=>!key.startsWith(\"swal\")).forEach(this.markTouched),this.update()}ngOnDestroy(){(void 0===this.swalDismissOnDestroy?this.moduleLevelDismissOnDestroy:this.swalDismissOnDestroy)&&this.close()}fire(){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)(this,void 0,void 0,function*(){const swal=yield this.sweetAlert2Loader.swal,userOptions=this.swalOptions,options=Object.assign(Object.assign({},userOptions),{willOpen:composeHook(userOptions.willOpen,modalElement=>{this.willOpen.emit({modalElement:modalElement})}),didOpen:composeHook(userOptions.didOpen,modalElement=>{this.isCurrentlyShown=!0,this.didOpen.emit({modalElement:modalElement})}),didRender:composeHook(userOptions.didRender,modalElement=>{this.didRender.emit({modalElement:modalElement})}),willClose:composeHook(userOptions.willClose,modalElement=>{this.isCurrentlyShown=!1,this.willClose.emit({modalElement:modalElement})}),didClose:composeHook(userOptions.didClose,()=>{this.didClose.emit()}),didDestroy:composeHook(userOptions.didDestroy,()=>{this.didDestroy.emit()})}),result=yield swal.fire(options);switch(!0){case result.isConfirmed:this.confirm.emit(result.value);break;case result.isDenied:this.deny.emit();break;case result.isDismissed:this.dismiss.emit(result.dismiss)}return result;function composeHook(userHook,libHook){return(...args)=>(libHook(...args),null==userHook?void 0:userHook(...args))}})}close(result){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)(this,void 0,void 0,function*(){this.isCurrentlyShown&&(yield this.sweetAlert2Loader.swal).close(result)})}update(options){return Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)(this,void 0,void 0,function*(){if(options&&(this.swalOptions=options),!this.isCurrentlyShown)return;const swal=yield this.sweetAlert2Loader.swal,allOptions=this.swalOptions,updatableOptions=Object.keys(allOptions).filter(swal.isUpdatableParameter).reduce((obj,key)=>Object.assign(Object.assign({},obj),{[key]:allOptions[key]}),{});swal.update(updatableOptions)})}}return SwalComponent.ɵfac=function(t){return new(t||SwalComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Lb(SweetAlert2LoaderService),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Lb(fireOnInitToken),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Lb(dismissOnDestroyToken))},SwalComponent.ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Fb({type:SwalComponent,selectors:[[\"swal\"]],inputs:{swalOptions:\"swalOptions\",swalVisible:\"swalVisible\",title:\"title\",titleText:\"titleText\",text:\"text\",html:\"html\",footer:\"footer\",icon:\"icon\",iconColor:\"iconColor\",iconHtml:\"iconHtml\",backdrop:\"backdrop\",toast:\"toast\",target:\"target\",input:\"input\",width:\"width\",padding:\"padding\",background:\"background\",position:\"position\",grow:\"grow\",showClass:\"showClass\",hideClass:\"hideClass\",customClass:\"customClass\",timer:\"timer\",timerProgressBar:\"timerProgressBar\",animation:\"animation\",heightAuto:\"heightAuto\",allowOutsideClick:\"allowOutsideClick\",allowEscapeKey:\"allowEscapeKey\",allowEnterKey:\"allowEnterKey\",stopKeydownPropagation:\"stopKeydownPropagation\",keydownListenerCapture:\"keydownListenerCapture\",showConfirmButton:\"showConfirmButton\",showDenyButton:\"showDenyButton\",showCancelButton:\"showCancelButton\",confirmButtonText:\"confirmButtonText\",denyButtonText:\"denyButtonText\",cancelButtonText:\"cancelButtonText\",confirmButtonColor:\"confirmButtonColor\",denyButtonColor:\"denyButtonColor\",cancelButtonColor:\"cancelButtonColor\",confirmButtonAriaLabel:\"confirmButtonAriaLabel\",denyButtonAriaLabel:\"denyButtonAriaLabel\",cancelButtonAriaLabel:\"cancelButtonAriaLabel\",buttonsStyling:\"buttonsStyling\",reverseButtons:\"reverseButtons\",focusConfirm:\"focusConfirm\",focusDeny:\"focusDeny\",focusCancel:\"focusCancel\",showCloseButton:\"showCloseButton\",closeButtonHtml:\"closeButtonHtml\",closeButtonAriaLabel:\"closeButtonAriaLabel\",loaderHtml:\"loaderHtml\",showLoaderOnConfirm:\"showLoaderOnConfirm\",preConfirm:\"preConfirm\",preDeny:\"preDeny\",imageUrl:\"imageUrl\",imageWidth:\"imageWidth\",imageHeight:\"imageHeight\",imageAlt:\"imageAlt\",inputLabel:\"inputLabel\",inputPlaceholder:\"inputPlaceholder\",inputValue:\"inputValue\",inputOptions:\"inputOptions\",inputAutoTrim:\"inputAutoTrim\",inputAttributes:\"inputAttributes\",inputValidator:\"inputValidator\",returnInputValueOnDeny:\"returnInputValueOnDeny\",validationMessage:\"validationMessage\",progressSteps:\"progressSteps\",currentProgressStep:\"currentProgressStep\",progressStepsDistance:\"progressStepsDistance\",scrollbarPadding:\"scrollbarPadding\",swalFireOnInit:\"swalFireOnInit\",swalDismissOnDestroy:\"swalDismissOnDestroy\"},outputs:{willOpen:\"willOpen\",didOpen:\"didOpen\",didRender:\"didRender\",willClose:\"willClose\",didClose:\"didClose\",didDestroy:\"didDestroy\",confirm:\"confirm\",deny:\"deny\",dismiss:\"dismiss\"},features:[_angular_core__WEBPACK_IMPORTED_MODULE_1__.wb],decls:0,vars:0,template:function(rf,ctx){},encapsulation:2,changeDetection:0}),SwalComponent})(),SwalDirective=(()=>{class SwalDirective{constructor(viewContainerRef,resolver){this.viewContainerRef=viewContainerRef,this.resolver=resolver,this.confirm=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.deny=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n,this.dismiss=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.n}set swal(options){options instanceof SwalComponent?this.swalInstance=options:Array.isArray(options)?(this.swalOptions={},[this.swalOptions.title,this.swalOptions.text,this.swalOptions.icon]=options):this.swalOptions=options}ngOnInit(){if(!this.swalInstance){const factory=this.resolver.resolveComponentFactory(SwalComponent);this.swalRef=this.viewContainerRef.createComponent(factory),this.swalInstance=this.swalRef.instance}}ngOnDestroy(){this.swalRef&&this.swalRef.destroy()}onClick(event){if(event.preventDefault(),event.stopImmediatePropagation(),event.stopPropagation(),!this.swalInstance)return;this.swalOptions&&(this.swalInstance.swalOptions=this.swalOptions);const swalClosed=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a;this.swalInstance.confirm.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(swalClosed)).subscribe(v=>this.confirm.emit(v)),this.swalInstance.deny.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(swalClosed)).subscribe(v=>this.deny.emit(v)),this.swalInstance.dismiss.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(swalClosed)).subscribe(v=>this.dismiss.emit(v)),this.swalInstance.fire().then(()=>swalClosed.next())}}return SwalDirective.ɵfac=function(t){return new(t||SwalDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Lb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.P),_angular_core__WEBPACK_IMPORTED_MODULE_1__.Lb(_angular_core__WEBPACK_IMPORTED_MODULE_1__.j))},SwalDirective.ɵdir=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Gb({type:SwalDirective,selectors:[[\"\",\"swal\",\"\"]],hostBindings:function(rf,ctx){1&rf&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.bc(\"click\",function($event){return ctx.onClick($event)})},inputs:{swal:\"swal\"},outputs:{confirm:\"confirm\",deny:\"deny\",dismiss:\"dismiss\"}}),SwalDirective})();function provideDefaultSwal(){return Promise.resolve().then(__webpack_require__.t.bind(null,\"PSD3\",7))}let SweetAlert2Module=(()=>{class SweetAlert2Module{static forRoot(options={}){return{ngModule:SweetAlert2Module,providers:[SweetAlert2LoaderService,{provide:swalProviderToken,useValue:options.provideSwal||provideDefaultSwal},{provide:fireOnInitToken,useValue:options.fireOnInit||!1},{provide:dismissOnDestroyToken,useValue:options.dismissOnDestroy||!0}]}}static forChild(options={}){return{ngModule:SweetAlert2Module,providers:[...options.provideSwal?[SweetAlert2LoaderService,{provide:swalProviderToken,useValue:options.provideSwal}]:[],...void 0!==options.fireOnInit?[{provide:fireOnInitToken,useValue:options.fireOnInit}]:[],...void 0!==options.dismissOnDestroy?[{provide:dismissOnDestroyToken,useValue:options.dismissOnDestroy}]:[]]}}}return SweetAlert2Module.ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Jb({type:SweetAlert2Module}),SweetAlert2Module.ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_1__.Ib({factory:function(t){return new(t||SweetAlert2Module)},imports:[[_angular_common__WEBPACK_IMPORTED_MODULE_4__.c]]}),SweetAlert2Module})()}}]);","name":"8-es2015.b40279682a07c34b7eac.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[8],{\n\n/***/ \"PdH4\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n* sweetalert2 v10.13.0\n* Released under the MIT License.\n*/\n(function (global, factory) {\n   true ? module.exports = factory() :\n  undefined;\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  var consolePrefix = 'SweetAlert2:';\n  /**\n   * Filter the unique values into a new array\n   * @param arr\n   */\n\n  var uniqueArray = function uniqueArray(arr) {\n    var result = [];\n\n    for (var i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Capitalize the first letter of a string\n   * @param str\n   */\n\n  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n  /**\n   * Returns the array of object values (Object.values isn't supported in IE11)\n   * @param obj\n   */\n\n  var objectValues = function objectValues(obj) {\n    return Object.keys(obj).map(function (key) {\n      return obj[key];\n    });\n  };\n  /**\n   * Convert NodeList to Array\n   * @param nodeList\n   */\n\n  var toArray = function toArray(nodeList) {\n    return Array.prototype.slice.call(nodeList);\n  };\n  /**\n   * Standardise console warnings\n   * @param message\n   */\n\n  var warn = function warn(message) {\n    console.warn(\"\".concat(consolePrefix, \" \").concat(_typeof(message) === 'object' ? message.join(' ') : message));\n  };\n  /**\n   * Standardise console errors\n   * @param message\n   */\n\n  var error = function error(message) {\n    console.error(\"\".concat(consolePrefix, \" \").concat(message));\n  };\n  /**\n   * Private global state for `warnOnce`\n   * @type {Array}\n   * @private\n   */\n\n  var previousWarnOnceMessages = [];\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   * @param message\n   */\n\n  var warnOnce = function warnOnce(message) {\n    if (!(previousWarnOnceMessages.indexOf(message) !== -1)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   */\n\n  var warnAboutDeprecation = function warnAboutDeprecation(deprecatedParam, useInstead) {\n    warnOnce(\"\\\"\".concat(deprecatedParam, \"\\\" is deprecated and will be removed in the next major release. Please use \\\"\").concat(useInstead, \"\\\" instead.\"));\n  };\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   * @param arg\n   */\n\n  var callIfFunction = function callIfFunction(arg) {\n    return typeof arg === 'function' ? arg() : arg;\n  };\n  var hasToPromiseFn = function hasToPromiseFn(arg) {\n    return arg && typeof arg.toPromise === 'function';\n  };\n  var asPromise = function asPromise(arg) {\n    return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n  };\n  var isPromise = function isPromise(arg) {\n    return arg && Promise.resolve(arg) === arg;\n  };\n\n  var DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  var isJqueryElement = function isJqueryElement(elem) {\n    return _typeof(elem) === 'object' && elem.jquery;\n  };\n\n  var isElement = function isElement(elem) {\n    return elem instanceof Element || isJqueryElement(elem);\n  };\n\n  var argsToParams = function argsToParams(args) {\n    var params = {};\n\n    if (_typeof(args[0]) === 'object' && !isElement(args[0])) {\n      _extends(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach(function (name, index) {\n        var arg = args[index];\n\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(\"Unexpected type of \".concat(name, \"! Expected \\\"string\\\" or \\\"Element\\\", got \").concat(_typeof(arg)));\n        }\n      });\n    }\n\n    return params;\n  };\n\n  var swalPrefix = 'swal2-';\n  var prefix = function prefix(items) {\n    var result = {};\n\n    for (var i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n\n    return result;\n  };\n  var swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'toast-column', 'show', 'hide', 'close', 'title', 'header', 'content', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);\n  var iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n  var getContainer = function getContainer() {\n    return document.body.querySelector(\".\".concat(swalClasses.container));\n  };\n  var elementBySelector = function elementBySelector(selectorString) {\n    var container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  var elementByClass = function elementByClass(className) {\n    return elementBySelector(\".\".concat(className));\n  };\n\n  var getPopup = function getPopup() {\n    return elementByClass(swalClasses.popup);\n  };\n  var getIcons = function getIcons() {\n    var popup = getPopup();\n    return toArray(popup.querySelectorAll(\".\".concat(swalClasses.icon)));\n  };\n  var getIcon = function getIcon() {\n    var visibleIcon = getIcons().filter(function (icon) {\n      return isVisible(icon);\n    });\n    return visibleIcon.length ? visibleIcon[0] : null;\n  };\n  var getTitle = function getTitle() {\n    return elementByClass(swalClasses.title);\n  };\n  var getContent = function getContent() {\n    return elementByClass(swalClasses.content);\n  };\n  var getHtmlContainer = function getHtmlContainer() {\n    return elementByClass(swalClasses['html-container']);\n  };\n  var getImage = function getImage() {\n    return elementByClass(swalClasses.image);\n  };\n  var getProgressSteps = function getProgressSteps() {\n    return elementByClass(swalClasses['progress-steps']);\n  };\n  var getValidationMessage = function getValidationMessage() {\n    return elementByClass(swalClasses['validation-message']);\n  };\n  var getConfirmButton = function getConfirmButton() {\n    return elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.confirm));\n  };\n  var getDenyButton = function getDenyButton() {\n    return elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.deny));\n  };\n  var getInputLabel = function getInputLabel() {\n    return elementByClass(swalClasses['input-label']);\n  };\n  var getLoader = function getLoader() {\n    return elementBySelector(\".\".concat(swalClasses.loader));\n  };\n  var getCancelButton = function getCancelButton() {\n    return elementBySelector(\".\".concat(swalClasses.actions, \" .\").concat(swalClasses.cancel));\n  };\n  var getActions = function getActions() {\n    return elementByClass(swalClasses.actions);\n  };\n  var getHeader = function getHeader() {\n    return elementByClass(swalClasses.header);\n  };\n  var getFooter = function getFooter() {\n    return elementByClass(swalClasses.footer);\n  };\n  var getTimerProgressBar = function getTimerProgressBar() {\n    return elementByClass(swalClasses['timer-progress-bar']);\n  };\n  var getCloseButton = function getCloseButton() {\n    return elementByClass(swalClasses.close);\n  }; // https://github.com/jkup/focusable/blob/master/index.js\n\n  var focusable = \"\\n  a[href],\\n  area[href],\\n  input:not([disabled]),\\n  select:not([disabled]),\\n  textarea:not([disabled]),\\n  button:not([disabled]),\\n  iframe,\\n  object,\\n  embed,\\n  [tabindex=\\\"0\\\"],\\n  [contenteditable],\\n  audio[controls],\\n  video[controls],\\n  summary\\n\";\n  var getFocusableElements = function getFocusableElements() {\n    var focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')) // sort according to tabindex\n    .sort(function (a, b) {\n      a = parseInt(a.getAttribute('tabindex'));\n      b = parseInt(b.getAttribute('tabindex'));\n\n      if (a > b) {\n        return 1;\n      } else if (a < b) {\n        return -1;\n      }\n\n      return 0;\n    });\n    var otherFocusableElements = toArray(getPopup().querySelectorAll(focusable)).filter(function (el) {\n      return el.getAttribute('tabindex') !== '-1';\n    });\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(function (el) {\n      return isVisible(el);\n    });\n  };\n  var isModal = function isModal() {\n    return !isToast() && !document.body.classList.contains(swalClasses['no-backdrop']);\n  };\n  var isToast = function isToast() {\n    return document.body.classList.contains(swalClasses['toast-shown']);\n  };\n  var isLoading = function isLoading() {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  var states = {\n    previousBodyPadding: null\n  };\n  var setInnerHtml = function setInnerHtml(elem, html) {\n    // #1926\n    elem.textContent = '';\n\n    if (html) {\n      var parser = new DOMParser();\n      var parsed = parser.parseFromString(html, \"text/html\");\n      toArray(parsed.querySelector('head').childNodes).forEach(function (child) {\n        elem.appendChild(child);\n      });\n      toArray(parsed.querySelector('body').childNodes).forEach(function (child) {\n        elem.appendChild(child);\n      });\n    }\n  };\n  var hasClass = function hasClass(elem, className) {\n    if (!className) {\n      return false;\n    }\n\n    var classList = className.split(/\\s+/);\n\n    for (var i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var removeCustomClasses = function removeCustomClasses(elem, params) {\n    toArray(elem.classList).forEach(function (className) {\n      if (!(objectValues(swalClasses).indexOf(className) !== -1) && !(objectValues(iconTypes).indexOf(className) !== -1) && !(objectValues(params.showClass).indexOf(className) !== -1)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  var applyCustomClass = function applyCustomClass(elem, params, className) {\n    removeCustomClasses(elem, params);\n\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        return warn(\"Invalid type of customClass.\".concat(className, \"! Expected string or iterable object, got \\\"\").concat(_typeof(params.customClass[className]), \"\\\"\"));\n      }\n\n      addClass(elem, params.customClass[className]);\n    }\n  };\n  function getInput(content, inputType) {\n    if (!inputType) {\n      return null;\n    }\n\n    switch (inputType) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return getChildByClass(content, swalClasses[inputType]);\n\n      case 'checkbox':\n        return content.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n\n      case 'radio':\n        return content.querySelector(\".\".concat(swalClasses.radio, \" input:checked\")) || content.querySelector(\".\".concat(swalClasses.radio, \" input:first-child\"));\n\n      case 'range':\n        return content.querySelector(\".\".concat(swalClasses.range, \" input\"));\n\n      default:\n        return getChildByClass(content, swalClasses.input);\n    }\n  }\n  var focusInput = function focusInput(input) {\n    input.focus(); // place cursor at end of text in text input\n\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      var val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n  var toggleClass = function toggleClass(target, classList, condition) {\n    if (!target || !classList) {\n      return;\n    }\n\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n\n    classList.forEach(function (className) {\n      if (target.forEach) {\n        target.forEach(function (elem) {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n  var addClass = function addClass(target, classList) {\n    toggleClass(target, classList, true);\n  };\n  var removeClass = function removeClass(target, classList) {\n    toggleClass(target, classList, false);\n  };\n  var getChildByClass = function getChildByClass(elem, className) {\n    for (var i = 0; i < elem.childNodes.length; i++) {\n      if (hasClass(elem.childNodes[i], className)) {\n        return elem.childNodes[i];\n      }\n    }\n  };\n  var applyNumericalStyle = function applyNumericalStyle(elem, property, value) {\n    if (value === \"\".concat(parseInt(value))) {\n      value = parseInt(value);\n    }\n\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? \"\".concat(value, \"px\") : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n  var show = function show(elem) {\n    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n  var hide = function hide(elem) {\n    elem.style.display = 'none';\n  };\n  var setStyle = function setStyle(parent, selector, property, value) {\n    var el = parent.querySelector(selector);\n\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n  var toggle = function toggle(elem, condition, display) {\n    condition ? show(elem, display) : hide(elem);\n  }; // borrowed from jquery $(elem).is(':visible') implementation\n\n  var isVisible = function isVisible(elem) {\n    return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n  };\n  var allButtonsAreHidden = function allButtonsAreHidden() {\n    return !isVisible(getConfirmButton()) && !isVisible(getDenyButton()) && !isVisible(getCancelButton());\n  };\n  var isScrollable = function isScrollable(elem) {\n    return !!(elem.scrollHeight > elem.clientHeight);\n  }; // borrowed from https://stackoverflow.com/a/46352119\n\n  var hasCssAnimation = function hasCssAnimation(elem) {\n    var style = window.getComputedStyle(elem);\n    var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n  var contains = function contains(haystack, needle) {\n    if (typeof haystack.contains === 'function') {\n      return haystack.contains(needle);\n    }\n  };\n  var animateTimerProgressBar = function animateTimerProgressBar(timer) {\n    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var timerProgressBar = getTimerProgressBar();\n\n    if (isVisible(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n\n      setTimeout(function () {\n        timerProgressBar.style.transition = \"width \".concat(timer / 1000, \"s linear\");\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  var stopTimerProgressBar = function stopTimerProgressBar() {\n    var timerProgressBar = getTimerProgressBar();\n    var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    var timerProgressBarPercent = parseInt(timerProgressBarWidth / timerProgressBarFullWidth * 100);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = \"\".concat(timerProgressBarPercent, \"%\");\n  };\n\n  // Detect Node env\n  var isNodeEnv = function isNodeEnv() {\n    return typeof window === 'undefined' || typeof document === 'undefined';\n  };\n\n  var sweetHTML = \"\\n <div aria-labelledby=\\\"\".concat(swalClasses.title, \"\\\" aria-describedby=\\\"\").concat(swalClasses.content, \"\\\" class=\\\"\").concat(swalClasses.popup, \"\\\" tabindex=\\\"-1\\\">\\n   <div class=\\\"\").concat(swalClasses.header, \"\\\">\\n     <ul class=\\\"\").concat(swalClasses['progress-steps'], \"\\\"></ul>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.error, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.question, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.warning, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.info, \"\\\"></div>\\n     <div class=\\\"\").concat(swalClasses.icon, \" \").concat(iconTypes.success, \"\\\"></div>\\n     <img class=\\\"\").concat(swalClasses.image, \"\\\" />\\n     <h2 class=\\\"\").concat(swalClasses.title, \"\\\" id=\\\"\").concat(swalClasses.title, \"\\\"></h2>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.close, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.content, \"\\\">\\n     <div id=\\\"\").concat(swalClasses.content, \"\\\" class=\\\"\").concat(swalClasses['html-container'], \"\\\"></div>\\n     <input class=\\\"\").concat(swalClasses.input, \"\\\" />\\n     <input type=\\\"file\\\" class=\\\"\").concat(swalClasses.file, \"\\\" />\\n     <div class=\\\"\").concat(swalClasses.range, \"\\\">\\n       <input type=\\\"range\\\" />\\n       <output></output>\\n     </div>\\n     <select class=\\\"\").concat(swalClasses.select, \"\\\"></select>\\n     <div class=\\\"\").concat(swalClasses.radio, \"\\\"></div>\\n     <label for=\\\"\").concat(swalClasses.checkbox, \"\\\" class=\\\"\").concat(swalClasses.checkbox, \"\\\">\\n       <input type=\\\"checkbox\\\" />\\n       <span class=\\\"\").concat(swalClasses.label, \"\\\"></span>\\n     </label>\\n     <textarea class=\\\"\").concat(swalClasses.textarea, \"\\\"></textarea>\\n     <div class=\\\"\").concat(swalClasses['validation-message'], \"\\\" id=\\\"\").concat(swalClasses['validation-message'], \"\\\"></div>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.actions, \"\\\">\\n     <div class=\\\"\").concat(swalClasses.loader, \"\\\"></div>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.confirm, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.deny, \"\\\"></button>\\n     <button type=\\\"button\\\" class=\\\"\").concat(swalClasses.cancel, \"\\\"></button>\\n   </div>\\n   <div class=\\\"\").concat(swalClasses.footer, \"\\\"></div>\\n   <div class=\\\"\").concat(swalClasses['timer-progress-bar-container'], \"\\\">\\n     <div class=\\\"\").concat(swalClasses['timer-progress-bar'], \"\\\"></div>\\n   </div>\\n </div>\\n\").replace(/(^|\\n)\\s*/g, '');\n\n  var resetOldContainer = function resetOldContainer() {\n    var oldContainer = getContainer();\n\n    if (!oldContainer) {\n      return false;\n    }\n\n    oldContainer.parentNode.removeChild(oldContainer);\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n\n  var oldInputVal; // IE11 workaround, see #1109 for details\n\n  var resetValidationMessage = function resetValidationMessage(e) {\n    if (Swal.isVisible() && oldInputVal !== e.target.value) {\n      Swal.resetValidationMessage();\n    }\n\n    oldInputVal = e.target.value;\n  };\n\n  var addInputChangeListeners = function addInputChangeListeners() {\n    var content = getContent();\n    var input = getChildByClass(content, swalClasses.input);\n    var file = getChildByClass(content, swalClasses.file);\n    var range = content.querySelector(\".\".concat(swalClasses.range, \" input\"));\n    var rangeOutput = content.querySelector(\".\".concat(swalClasses.range, \" output\"));\n    var select = getChildByClass(content, swalClasses.select);\n    var checkbox = content.querySelector(\".\".concat(swalClasses.checkbox, \" input\"));\n    var textarea = getChildByClass(content, swalClasses.textarea);\n    input.oninput = resetValidationMessage;\n    file.onchange = resetValidationMessage;\n    select.onchange = resetValidationMessage;\n    checkbox.onchange = resetValidationMessage;\n    textarea.oninput = resetValidationMessage;\n\n    range.oninput = function (e) {\n      resetValidationMessage(e);\n      rangeOutput.value = range.value;\n    };\n\n    range.onchange = function (e) {\n      resetValidationMessage(e);\n      range.nextSibling.value = range.value;\n    };\n  };\n\n  var getTarget = function getTarget(target) {\n    return typeof target === 'string' ? document.querySelector(target) : target;\n  };\n\n  var setupAccessibility = function setupAccessibility(params) {\n    var popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  var setupRTL = function setupRTL(targetElement) {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n  /*\n   * Add modal + backdrop to DOM\n   */\n\n\n  var init = function init(params) {\n    // Clean up the old popup container if it exists\n    var oldContainerExisted = resetOldContainer();\n    /* istanbul ignore if */\n\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n\n    var container = document.createElement('div');\n    container.className = swalClasses.container;\n\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n\n    setInnerHtml(container, sweetHTML);\n    var targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  var parseHtmlToContainer = function parseHtmlToContainer(param, target) {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param); // Object\n    } else if (_typeof(param) === 'object') {\n      handleObject(param, target); // Plain string\n    } else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  var handleObject = function handleObject(param, target) {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param); // For other objects use their string representation\n    } else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  var handleJqueryElem = function handleJqueryElem(target, elem) {\n    target.textContent = '';\n\n    if (0 in elem) {\n      for (var i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  var animationEndEvent = function () {\n    // Prevent run in Node env\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n\n    var testEl = document.createElement('div');\n    var transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      OAnimation: 'oAnimationEnd oanimationend',\n      animation: 'animationend'\n    };\n\n    for (var i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n\n    return false;\n  }();\n\n  // https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n\n  var measureScrollbar = function measureScrollbar() {\n    var scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  var renderActions = function renderActions(instance, params) {\n    var actions = getActions();\n    var loader = getLoader();\n    var confirmButton = getConfirmButton();\n    var denyButton = getDenyButton();\n    var cancelButton = getCancelButton(); // Actions (buttons) wrapper\n\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } // Custom class\n\n\n    applyCustomClass(actions, params, 'actions'); // Render buttons\n\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n\n    if (params.reverseButtons) {\n      actions.insertBefore(cancelButton, loader);\n      actions.insertBefore(denyButton, loader);\n      actions.insertBefore(confirmButton, loader);\n    } // Loader\n\n\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      return removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n    }\n\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled); // Buttons background colors\n\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n    }\n\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n    }\n\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n    }\n  }\n\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[\"show\".concat(capitalizeFirstLetter(buttonType), \"Button\")], 'inline-block');\n    setInnerHtml(button, params[\"\".concat(buttonType, \"ButtonText\")]); // Set caption text\n\n    button.setAttribute('aria-label', params[\"\".concat(buttonType, \"ButtonAriaLabel\")]); // ARIA label\n    // Add buttons custom classes\n\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, \"\".concat(buttonType, \"Button\"));\n    addClass(button, params[\"\".concat(buttonType, \"ButtonClass\")]);\n  }\n\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      var growClass = \"grow-\".concat(grow);\n\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  var renderContainer = function renderContainer(instance, params) {\n    var container = getContainer();\n\n    if (!container) {\n      return;\n    }\n\n    handleBackdropParam(container, params.backdrop);\n\n    if (!params.backdrop && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow); // Custom class\n\n    applyCustomClass(container, params, 'container'); // Set queue step attribute for getQueueStep() method\n\n    var queueStep = document.body.getAttribute('data-swal2-queue-step');\n\n    if (queueStep) {\n      container.setAttribute('data-queue-step', queueStep);\n      document.body.removeAttribute('data-swal2-queue-step');\n    }\n  };\n\n  /**\n   * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n  var privateProps = {\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  var inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n  var renderInput = function renderInput(instance, params) {\n    var content = getContent();\n    var innerParams = privateProps.innerParams.get(instance);\n    var rerender = !innerParams || params.input !== innerParams.input;\n    inputTypes.forEach(function (inputType) {\n      var inputClass = swalClasses[inputType];\n      var inputContainer = getChildByClass(content, inputClass); // set attributes\n\n      setAttributes(inputType, params.inputAttributes); // set class\n\n      inputContainer.className = inputClass;\n\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      } // set custom class\n\n\n      setCustomClass(params);\n    }\n  };\n\n  var showInput = function showInput(params) {\n    if (!renderInputType[params.input]) {\n      return error(\"Unexpected type of input! Expected \\\"text\\\", \\\"email\\\", \\\"password\\\", \\\"number\\\", \\\"tel\\\", \\\"select\\\", \\\"radio\\\", \\\"checkbox\\\", \\\"textarea\\\", \\\"file\\\" or \\\"url\\\", got \\\"\".concat(params.input, \"\\\"\"));\n    }\n\n    var inputContainer = getInputContainer(params.input);\n    var input = renderInputType[params.input](inputContainer, params);\n    show(input); // input autofocus\n\n    setTimeout(function () {\n      focusInput(input);\n    });\n  };\n\n  var removeAttributes = function removeAttributes(input) {\n    for (var i = 0; i < input.attributes.length; i++) {\n      var attrName = input.attributes[i].name;\n\n      if (!(['type', 'value', 'style'].indexOf(attrName) !== -1)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  var setAttributes = function setAttributes(inputType, inputAttributes) {\n    var input = getInput(getContent(), inputType);\n\n    if (!input) {\n      return;\n    }\n\n    removeAttributes(input);\n\n    for (var attr in inputAttributes) {\n      // Do not set a placeholder for <input type=\"range\">\n      // it'll crash Edge, #1298\n      if (inputType === 'range' && attr === 'placeholder') {\n        continue;\n      }\n\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  var setCustomClass = function setCustomClass(params) {\n    var inputContainer = getInputContainer(params.input);\n\n    if (params.customClass) {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  var setInputPlaceholder = function setInputPlaceholder(input, params) {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  var setInputLabel = function setInputLabel(input, prependTo, params) {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      var label = document.createElement('label');\n      var labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      addClass(label, params.customClass.inputLabel);\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  var getInputContainer = function getInputContainer(inputType) {\n    var inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;\n    return getChildByClass(getContent(), inputClass);\n  };\n\n  var renderInputType = {};\n\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = function (input, params) {\n    if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n      input.value = params.inputValue;\n    } else if (!isPromise(params.inputValue)) {\n      warn(\"Unexpected type of inputValue! Expected \\\"string\\\", \\\"number\\\" or \\\"Promise\\\", got \\\"\".concat(_typeof(params.inputValue), \"\\\"\"));\n    }\n\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  renderInputType.file = function (input, params) {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  renderInputType.range = function (range, params) {\n    var rangeInput = range.querySelector('input');\n    var rangeOutput = range.querySelector('output');\n    rangeInput.value = params.inputValue;\n    rangeInput.type = params.input;\n    rangeOutput.value = params.inputValue;\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  renderInputType.select = function (select, params) {\n    select.textContent = '';\n\n    if (params.inputPlaceholder) {\n      var placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  renderInputType.radio = function (radio) {\n    radio.textContent = '';\n    return radio;\n  };\n\n  renderInputType.checkbox = function (checkboxContainer, params) {\n    var checkbox = getInput(getContent(), 'checkbox');\n    checkbox.value = 1;\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    var label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkboxContainer;\n  };\n\n  renderInputType.textarea = function (textarea, params) {\n    textarea.value = params.inputValue;\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    var getPadding = function getPadding(el) {\n      return parseInt(window.getComputedStyle(el).paddingLeft) + parseInt(window.getComputedStyle(el).paddingRight);\n    };\n\n    if ('MutationObserver' in window) {\n      // #1699\n      var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n\n      var outputsize = function outputsize() {\n        var contentWidth = textarea.offsetWidth + getPadding(getPopup()) + getPadding(getContent());\n\n        if (contentWidth > initialPopupWidth) {\n          getPopup().style.width = \"\".concat(contentWidth, \"px\");\n        } else {\n          getPopup().style.width = null;\n        }\n      };\n\n      new MutationObserver(outputsize).observe(textarea, {\n        attributes: true,\n        attributeFilter: ['style']\n      });\n    }\n\n    return textarea;\n  };\n\n  var renderContent = function renderContent(instance, params) {\n    var content = getContent().querySelector(\"#\".concat(swalClasses.content)); // Content as HTML\n\n    if (params.html) {\n      parseHtmlToContainer(params.html, content);\n      show(content, 'block'); // Content as plain text\n    } else if (params.text) {\n      content.textContent = params.text;\n      show(content, 'block'); // No content\n    } else {\n      hide(content);\n    }\n\n    renderInput(instance, params); // Custom class\n\n    applyCustomClass(getContent(), params, 'content');\n  };\n\n  var renderFooter = function renderFooter(instance, params) {\n    var footer = getFooter();\n    toggle(footer, params.footer);\n\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    } // Custom class\n\n\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  var renderCloseButton = function renderCloseButton(instance, params) {\n    var closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml); // Custom class\n\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  var renderIcon = function renderIcon(instance, params) {\n    var innerParams = privateProps.innerParams.get(instance); // if the given icon already rendered, apply the styling without re-rendering the icon\n\n    if (innerParams && params.icon === innerParams.icon && getIcon()) {\n      applyStyles(getIcon(), params);\n      return;\n    }\n\n    hideAllIcons();\n\n    if (!params.icon) {\n      return;\n    }\n\n    if (Object.keys(iconTypes).indexOf(params.icon) !== -1) {\n      var icon = elementBySelector(\".\".concat(swalClasses.icon, \".\").concat(iconTypes[params.icon]));\n      show(icon); // Custom or default content\n\n      setContent(icon, params);\n      applyStyles(icon, params); // Animate icon\n\n      addClass(icon, params.showClass.icon);\n    } else {\n      error(\"Unknown icon! Expected \\\"success\\\", \\\"error\\\", \\\"warning\\\", \\\"info\\\" or \\\"question\\\", got \\\"\".concat(params.icon, \"\\\"\"));\n    }\n  };\n\n  var hideAllIcons = function hideAllIcons() {\n    var icons = getIcons();\n\n    for (var i = 0; i < icons.length; i++) {\n      hide(icons[i]);\n    }\n  };\n\n  var applyStyles = function applyStyles(icon, params) {\n    // Icon color\n    setColor(icon, params); // Success icon background color\n\n    adjustSuccessIconBackgoundColor(); // Custom class\n\n    applyCustomClass(icon, params, 'icon');\n  }; // Adjust success icon background color to match the popup background color\n\n\n  var adjustSuccessIconBackgoundColor = function adjustSuccessIconBackgoundColor() {\n    var popup = getPopup();\n    var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n\n    for (var i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n\n  var setContent = function setContent(icon, params) {\n    icon.textContent = '';\n\n    if (params.iconHtml) {\n      setInnerHtml(icon, iconContent(params.iconHtml));\n    } else if (params.icon === 'success') {\n      setInnerHtml(icon, \"\\n      <div class=\\\"swal2-success-circular-line-left\\\"></div>\\n      <span class=\\\"swal2-success-line-tip\\\"></span> <span class=\\\"swal2-success-line-long\\\"></span>\\n      <div class=\\\"swal2-success-ring\\\"></div> <div class=\\\"swal2-success-fix\\\"></div>\\n      <div class=\\\"swal2-success-circular-line-right\\\"></div>\\n    \");\n    } else if (params.icon === 'error') {\n      setInnerHtml(icon, \"\\n      <span class=\\\"swal2-x-mark\\\">\\n        <span class=\\\"swal2-x-mark-line-left\\\"></span>\\n        <span class=\\\"swal2-x-mark-line-right\\\"></span>\\n      </span>\\n    \");\n    } else {\n      var defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      setInnerHtml(icon, iconContent(defaultIconHtml[params.icon]));\n    }\n  };\n\n  var setColor = function setColor(icon, params) {\n    if (!params.iconColor) {\n      return;\n    }\n\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n\n    for (var _i = 0, _arr = ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']; _i < _arr.length; _i++) {\n      var sel = _arr[_i];\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  var iconContent = function iconContent(content) {\n    return \"<div class=\\\"\".concat(swalClasses['icon-content'], \"\\\">\").concat(content, \"</div>\");\n  };\n\n  var renderImage = function renderImage(instance, params) {\n    var image = getImage();\n\n    if (!params.imageUrl) {\n      return hide(image);\n    }\n\n    show(image, ''); // Src, alt\n\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt); // Width, height\n\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight); // Class\n\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  var currentSteps = [];\n  /*\n   * Global function for chaining sweetAlert popups\n   */\n\n  var queue = function queue(steps) {\n    var Swal = this;\n    currentSteps = steps;\n\n    var resetAndResolve = function resetAndResolve(resolve, value) {\n      currentSteps = [];\n      resolve(value);\n    };\n\n    var queueResult = [];\n    return new Promise(function (resolve) {\n      (function step(i, callback) {\n        if (i < currentSteps.length) {\n          document.body.setAttribute('data-swal2-queue-step', i);\n          Swal.fire(currentSteps[i]).then(function (result) {\n            if (typeof result.value !== 'undefined') {\n              queueResult.push(result.value);\n              step(i + 1, callback);\n            } else {\n              resetAndResolve(resolve, {\n                dismiss: result.dismiss\n              });\n            }\n          });\n        } else {\n          resetAndResolve(resolve, {\n            value: queueResult\n          });\n        }\n      })(0);\n    });\n  };\n  /*\n   * Global function for getting the index of current popup in queue\n   */\n\n  var getQueueStep = function getQueueStep() {\n    return getContainer() && getContainer().getAttribute('data-queue-step');\n  };\n  /*\n   * Global function for inserting a popup to the queue\n   */\n\n  var insertQueueStep = function insertQueueStep(step, index) {\n    if (index && index < currentSteps.length) {\n      return currentSteps.splice(index, 0, step);\n    }\n\n    return currentSteps.push(step);\n  };\n  /*\n   * Global function for deleting a popup from the queue\n   */\n\n  var deleteQueueStep = function deleteQueueStep(index) {\n    if (typeof currentSteps[index] !== 'undefined') {\n      currentSteps.splice(index, 1);\n    }\n  };\n\n  var createStepElement = function createStepElement(step) {\n    var stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  var createLineElement = function createLineElement(params) {\n    var lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n\n    if (params.progressStepsDistance) {\n      lineEl.style.width = params.progressStepsDistance;\n    }\n\n    return lineEl;\n  };\n\n  var renderProgressSteps = function renderProgressSteps(instance, params) {\n    var progressStepsContainer = getProgressSteps();\n\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      return hide(progressStepsContainer);\n    }\n\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    var currentProgressStep = parseInt(params.currentProgressStep === undefined ? getQueueStep() : params.currentProgressStep);\n\n    if (currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n\n    params.progressSteps.forEach(function (step, index) {\n      var stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n\n      if (index === currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n\n      if (index !== params.progressSteps.length - 1) {\n        var lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  var renderTitle = function renderTitle(instance, params) {\n    var title = getTitle();\n    toggle(title, params.title || params.titleText);\n\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    } // Custom class\n\n\n    applyCustomClass(title, params, 'title');\n  };\n\n  var renderHeader = function renderHeader(instance, params) {\n    var header = getHeader(); // Custom class\n\n    applyCustomClass(header, params, 'header'); // Progress steps\n\n    renderProgressSteps(instance, params); // Icon\n\n    renderIcon(instance, params); // Image\n\n    renderImage(instance, params); // Title\n\n    renderTitle(instance, params); // Close button\n\n    renderCloseButton(instance, params);\n  };\n\n  var renderPopup = function renderPopup(instance, params) {\n    var popup = getPopup(); // Width\n\n    applyNumericalStyle(popup, 'width', params.width); // Padding\n\n    applyNumericalStyle(popup, 'padding', params.padding); // Background\n\n    if (params.background) {\n      popup.style.background = params.background;\n    } // Classes\n\n\n    addClasses(popup, params);\n  };\n\n  var addClasses = function addClasses(popup, params) {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = \"\".concat(swalClasses.popup, \" \").concat(isVisible(popup) ? params.showClass.popup : '');\n\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    } // Custom class\n\n\n    applyCustomClass(popup, params, 'popup');\n\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    } // Icon class (#1842)\n\n\n    if (params.icon) {\n      addClass(popup, swalClasses[\"icon-\".concat(params.icon)]);\n    }\n  };\n\n  var render = function render(instance, params) {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderHeader(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    } else if (typeof params.onRender === 'function') {\n      params.onRender(getPopup()); // @deprecated\n    }\n  };\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n\n  var isVisible$1 = function isVisible$$1() {\n    return isVisible(getPopup());\n  };\n  /*\n   * Global function to click 'Confirm' button\n   */\n\n  var clickConfirm = function clickConfirm() {\n    return getConfirmButton() && getConfirmButton().click();\n  };\n  /*\n   * Global function to click 'Deny' button\n   */\n\n  var clickDeny = function clickDeny() {\n    return getDenyButton() && getDenyButton().click();\n  };\n  /*\n   * Global function to click 'Cancel' button\n   */\n\n  var clickCancel = function clickCancel() {\n    return getCancelButton() && getCancelButton().click();\n  };\n\n  function fire() {\n    var Swal = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _construct(Swal, args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    var MixinSwal = /*#__PURE__*/function (_this) {\n      _inherits(MixinSwal, _this);\n\n      var _super = _createSuper(MixinSwal);\n\n      function MixinSwal() {\n        _classCallCheck(this, MixinSwal);\n\n        return _super.apply(this, arguments);\n      }\n\n      _createClass(MixinSwal, [{\n        key: \"_main\",\n        value: function _main(params, prevMixinParams) {\n          return _get(_getPrototypeOf(MixinSwal.prototype), \"_main\", this).call(this, params, _extends({}, prevMixinParams, mixinParams));\n        }\n      }]);\n\n      return MixinSwal;\n    }(this);\n\n    return MixinSwal;\n  }\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   */\n\n  var showLoading = function showLoading(buttonToReplace) {\n    var popup = getPopup();\n\n    if (!popup) {\n      Swal.fire();\n    }\n\n    popup = getPopup();\n    var actions = getActions();\n    var loader = getLoader();\n\n    if (!buttonToReplace && isVisible(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n\n    show(actions);\n\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n    show(loader);\n    popup.setAttribute('data-loading', true);\n    popup.setAttribute('aria-busy', true);\n    popup.focus();\n  };\n\n  var RESTORE_FOCUS_TIMEOUT = 100;\n\n  var globalState = {};\n\n  var focusPreviousActiveElement = function focusPreviousActiveElement() {\n    if (globalState.previousActiveElement && globalState.previousActiveElement.focus) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  }; // Restore previous active (focused) element\n\n\n  var restoreActiveElement = function restoreActiveElement() {\n    return new Promise(function (resolve) {\n      var x = window.scrollX;\n      var y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(function () {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      /* istanbul ignore if */\n\n      if (typeof x !== 'undefined' && typeof y !== 'undefined') {\n        // IE doesn't have scrollX/scrollY support\n        window.scrollTo(x, y);\n      }\n    });\n  };\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   */\n\n  var getTimerLeft = function getTimerLeft() {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  var stopTimer = function stopTimer() {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  var resumeTimer = function resumeTimer() {\n    if (globalState.timeout) {\n      var remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  var toggleTimer = function toggleTimer() {\n    var timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   */\n\n  var increaseTimer = function increaseTimer(n) {\n    if (globalState.timeout) {\n      var remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   */\n\n  var isTimerRunning = function isTimerRunning() {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n\n  var bodyClickListenerAdded = false;\n  var clickHandlers = {};\n  function bindClickHandler() {\n    var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n\n  var bodyClickListener = function bodyClickListener(event) {\n    // 1. using .parentNode instead of event.path because of better support by old browsers https://stackoverflow.com/a/39245638\n    // 2. using .parentNode instead of .parentElement because of IE11 + SVG https://stackoverflow.com/a/36270354\n    for (var el = event.target; el && el !== document; el = el.parentNode) {\n      for (var attr in clickHandlers) {\n        var template = el.getAttribute(attr);\n\n        if (template) {\n          clickHandlers[attr].fire({\n            template: template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    animation: true,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    onBeforeOpen: undefined,\n    onOpen: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    onRender: undefined,\n    didRender: undefined,\n    onClose: undefined,\n    onAfterClose: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    onDestroy: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  var updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'onAfterClose', 'onClose', 'onDestroy', 'progressSteps', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  var deprecatedParams = {\n    animation: 'showClass\" and \"hideClass',\n    onBeforeOpen: 'willOpen',\n    onOpen: 'didOpen',\n    onRender: 'didRender',\n    onClose: 'willClose',\n    onAfterClose: 'didClose',\n    onDestroy: 'didDestroy'\n  };\n  var toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'heightAuto', 'keydownListenerCapture'];\n  /**\n   * Is valid parameter\n   * @param {String} paramName\n   */\n\n  var isValidParameter = function isValidParameter(paramName) {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n  /**\n   * Is valid parameter for Swal.update() method\n   * @param {String} paramName\n   */\n\n  var isUpdatableParameter = function isUpdatableParameter(paramName) {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n  /**\n   * Is deprecated parameter\n   * @param {String} paramName\n   */\n\n  var isDeprecatedParameter = function isDeprecatedParameter(paramName) {\n    return deprecatedParams[paramName];\n  };\n\n  var checkIfParamIsValid = function checkIfParamIsValid(param) {\n    if (!isValidParameter(param)) {\n      warn(\"Unknown parameter \\\"\".concat(param, \"\\\"\"));\n    }\n  };\n\n  var checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {\n    if (toastIncompatibleParams.indexOf(param) !== -1) {\n      warn(\"The parameter \\\"\".concat(param, \"\\\" is incompatible with toasts\"));\n    }\n  };\n\n  var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param params\n   */\n\n\n  var showWarningsForParams = function showWarningsForParams(params) {\n    for (var param in params) {\n      checkIfParamIsValid(param);\n\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    isValidParameter: isValidParameter,\n    isUpdatableParameter: isUpdatableParameter,\n    isDeprecatedParameter: isDeprecatedParameter,\n    argsToParams: argsToParams,\n    isVisible: isVisible$1,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    clickCancel: clickCancel,\n    getContainer: getContainer,\n    getPopup: getPopup,\n    getTitle: getTitle,\n    getContent: getContent,\n    getHtmlContainer: getHtmlContainer,\n    getImage: getImage,\n    getIcon: getIcon,\n    getIcons: getIcons,\n    getInputLabel: getInputLabel,\n    getCloseButton: getCloseButton,\n    getActions: getActions,\n    getConfirmButton: getConfirmButton,\n    getDenyButton: getDenyButton,\n    getCancelButton: getCancelButton,\n    getLoader: getLoader,\n    getHeader: getHeader,\n    getFooter: getFooter,\n    getTimerProgressBar: getTimerProgressBar,\n    getFocusableElements: getFocusableElements,\n    getValidationMessage: getValidationMessage,\n    isLoading: isLoading,\n    fire: fire,\n    mixin: mixin,\n    queue: queue,\n    getQueueStep: getQueueStep,\n    insertQueueStep: insertQueueStep,\n    deleteQueueStep: deleteQueueStep,\n    showLoading: showLoading,\n    enableLoading: showLoading,\n    getTimerLeft: getTimerLeft,\n    stopTimer: stopTimer,\n    resumeTimer: resumeTimer,\n    toggleTimer: toggleTimer,\n    increaseTimer: increaseTimer,\n    isTimerRunning: isTimerRunning,\n    bindClickHandler: bindClickHandler\n  });\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n\n  function hideLoading() {\n    // do nothing if popup is closed\n    var innerParams = privateProps.innerParams.get(this);\n\n    if (!innerParams) {\n      return;\n    }\n\n    var domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    var buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n\n  function getInput$1(instance) {\n    var innerParams = privateProps.innerParams.get(instance || this);\n    var domCache = privateProps.domCache.get(instance || this);\n\n    if (!domCache) {\n      return null;\n    }\n\n    return getInput(domCache.content, innerParams.input);\n  }\n\n  var fixScrollbar = function fixScrollbar() {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    } // if the body has overflow\n\n\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding + measureScrollbar(), \"px\");\n    }\n  };\n  var undoScrollbar = function undoScrollbar() {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = \"\".concat(states.previousBodyPadding, \"px\");\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /* istanbul ignore file */\n\n  var iOSfix = function iOSfix() {\n    var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      var offset = document.body.scrollTop;\n      document.body.style.top = \"\".concat(offset * -1, \"px\");\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups(); // #1948\n    }\n  };\n\n  var addBottomPaddingForTallPopups = function addBottomPaddingForTallPopups() {\n    var safari = !navigator.userAgent.match(/(CriOS|FxiOS|EdgiOS|YaBrowser|UCBrowser)/i);\n\n    if (safari) {\n      var bottomPanelHeight = 44;\n\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = \"\".concat(bottomPanelHeight, \"px\");\n      }\n    }\n  };\n\n  var lockBodyScroll = function lockBodyScroll() {\n    // #1246\n    var container = getContainer();\n    var preventTouchMove;\n\n    container.ontouchstart = function (e) {\n      preventTouchMove = shouldPreventTouchMove(e);\n    };\n\n    container.ontouchmove = function (e) {\n      if (preventTouchMove) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n  };\n\n  var shouldPreventTouchMove = function shouldPreventTouchMove(event) {\n    var target = event.target;\n    var container = getContainer();\n\n    if (isStylys(event) || isZoom(event)) {\n      return false;\n    }\n\n    if (target === container) {\n      return true;\n    }\n\n    if (!isScrollable(container) && target.tagName !== 'INPUT' && // #1603\n    !(isScrollable(getContent()) && // #1944\n    getContent().contains(target))) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var isStylys = function isStylys(event) {\n    // #1786\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  var isZoom = function isZoom(event) {\n    // #1891\n    return event.touches && event.touches.length > 1;\n  };\n\n  var undoIOSfix = function undoIOSfix() {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      var offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  /* istanbul ignore file */\n\n  var isIE11 = function isIE11() {\n    return !!window.MSInputMethodContext && !!document.documentMode;\n  }; // Fix IE11 centering sweetalert2/issues/933\n\n\n  var fixVerticalPositionIE = function fixVerticalPositionIE() {\n    var container = getContainer();\n    var popup = getPopup();\n    container.style.removeProperty('align-items');\n\n    if (popup.offsetTop < 0) {\n      container.style.alignItems = 'flex-start';\n    }\n  };\n\n  var IEfix = function IEfix() {\n    if (typeof window !== 'undefined' && isIE11()) {\n      fixVerticalPositionIE();\n      window.addEventListener('resize', fixVerticalPositionIE);\n    }\n  };\n  var undoIEfix = function undoIEfix() {\n    if (typeof window !== 'undefined' && isIE11()) {\n      window.removeEventListener('resize', fixVerticalPositionIE);\n    }\n  };\n\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  var setAriaHidden = function setAriaHidden() {\n    var bodyChildren = toArray(document.body.children);\n    bodyChildren.forEach(function (el) {\n      if (el === getContainer() || contains(el, getContainer())) {\n        return;\n      }\n\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  var unsetAriaHidden = function unsetAriaHidden() {\n    var bodyChildren = toArray(document.body.children);\n    bodyChildren.forEach(function (el) {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /**\n   * This module containts `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap()\n  };\n\n  /*\n   * Instance method to close sweetAlert\n   */\n\n  function removePopupAndResetState(instance, container, isToast$$1, didClose) {\n    if (isToast$$1) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement().then(function () {\n        return triggerDidCloseAndDispose(instance, didClose);\n      });\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n\n    if (container.parentNode && !document.body.getAttribute('data-swal2-queue-step')) {\n      container.parentNode.removeChild(container);\n    }\n\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      undoIEfix();\n      unsetAriaHidden();\n    }\n\n    removeBodyClasses();\n  }\n\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['toast-column']]);\n  }\n\n  function close(resolveValue) {\n    var popup = getPopup();\n\n    if (!popup) {\n      return;\n    }\n\n    resolveValue = prepareResolveValue(resolveValue);\n    var innerParams = privateProps.innerParams.get(this);\n\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return;\n    }\n\n    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    var backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(this, popup, innerParams); // Resolve Swal promise\n\n    swalPromiseResolve(resolveValue);\n  }\n\n  var prepareResolveValue = function prepareResolveValue(resolveValue) {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n\n    return _extends({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  var handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {\n    var container = getContainer(); // If animation is supported, animate\n\n    var animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    var onClose = innerParams.onClose,\n        onAfterClose = innerParams.onAfterClose,\n        willClose = innerParams.willClose,\n        didClose = innerParams.didClose;\n    runDidClose(popup, willClose, onClose);\n\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, didClose || onAfterClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, isToast(), didClose || onAfterClose);\n    }\n  };\n\n  var runDidClose = function runDidClose(popup, willClose, onClose) {\n    if (willClose !== null && typeof willClose === 'function') {\n      willClose(popup);\n    } else if (onClose !== null && typeof onClose === 'function') {\n      onClose(popup); // @deprecated\n    }\n  };\n\n  var animatePopup = function animatePopup(instance, popup, container, didClose) {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, isToast(), didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(instance, didClose) {\n    setTimeout(function () {\n      if (typeof didClose === 'function') {\n        didClose();\n      }\n\n      instance._destroy();\n    });\n  };\n\n  function setButtonsDisabled(instance, buttons, disabled) {\n    var domCache = privateProps.domCache.get(instance);\n    buttons.forEach(function (button) {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return false;\n    }\n\n    if (input.type === 'radio') {\n      var radiosContainer = input.parentNode.parentNode;\n      var radios = radiosContainer.querySelectorAll('input');\n\n      for (var i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    return setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    return setInputDisabled(this.getInput(), true);\n  }\n\n  function showValidationMessage(error) {\n    var domCache = privateProps.domCache.get(this);\n    var params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n\n    show(domCache.validationMessage);\n    var input = this.getInput();\n\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedBy', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  } // Hide block with validation message\n\n  function resetValidationMessage$1() {\n    var domCache = privateProps.domCache.get(this);\n\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n\n    var input = this.getInput();\n\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedBy');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  function getProgressSteps$1() {\n    var domCache = privateProps.domCache.get(this);\n    return domCache.progressSteps;\n  }\n\n  var Timer = /*#__PURE__*/function () {\n    function Timer(callback, delay) {\n      _classCallCheck(this, Timer);\n\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n\n    _createClass(Timer, [{\n      key: \"start\",\n      value: function start() {\n        if (!this.running) {\n          this.running = true;\n          this.started = new Date();\n          this.id = setTimeout(this.callback, this.remaining);\n        }\n\n        return this.remaining;\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        if (this.running) {\n          this.running = false;\n          clearTimeout(this.id);\n          this.remaining -= new Date() - this.started;\n        }\n\n        return this.remaining;\n      }\n    }, {\n      key: \"increase\",\n      value: function increase(n) {\n        var running = this.running;\n\n        if (running) {\n          this.stop();\n        }\n\n        this.remaining += n;\n\n        if (running) {\n          this.start();\n        }\n\n        return this.remaining;\n      }\n    }, {\n      key: \"getTimerLeft\",\n      value: function getTimerLeft() {\n        if (this.running) {\n          this.stop();\n          this.start();\n        }\n\n        return this.remaining;\n      }\n    }, {\n      key: \"isRunning\",\n      value: function isRunning() {\n        return this.running;\n      }\n    }]);\n\n    return Timer;\n  }();\n\n  var defaultInputValidators = {\n    email: function email(string, validationMessage) {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    url: function url(string, validationMessage) {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(function (key) {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param params\n   * @returns {boolean}\n   */\n\n\n  function setParameters(params) {\n    setDefaultInputValidators(params); // showLoaderOnConfirm && preConfirm\n\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    } // params.animation will be actually used in renderPopup.js\n    // but in case when params.animation is a function, we need to call that function\n    // before popup (re)initialization, so it'll be possible to check Swal.isVisible()\n    // inside the params.animation function\n\n\n    params.animation = callIfFunction(params.animation);\n    validateCustomTargetElement(params); // Replace newlines with <br> in title\n\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n\n    init(params);\n  }\n\n  var swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n  var getTemplateParams = function getTemplateParams(params) {\n    var template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n\n    if (!template) {\n      return {};\n    }\n\n    var templateContent = template.content || template; // IE11\n\n    showWarningsForElements(templateContent);\n\n    var result = _extends(getSwalParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n\n    return result;\n  };\n\n  var getSwalParams = function getSwalParams(templateContent) {\n    var result = {};\n    toArray(templateContent.querySelectorAll('swal-param')).forEach(function (param) {\n      showWarningsForAttributes(param, ['name', 'value']);\n      var paramName = param.getAttribute('name');\n      var value = param.getAttribute('value');\n\n      if (typeof defaultParams[paramName] === 'boolean' && value === 'false') {\n        value = false;\n      }\n\n      if (_typeof(defaultParams[paramName]) === 'object') {\n        value = JSON.parse(value);\n      }\n\n      result[paramName] = value;\n    });\n    return result;\n  };\n\n  var getSwalButtons = function getSwalButtons(templateContent) {\n    var result = {};\n    toArray(templateContent.querySelectorAll('swal-button')).forEach(function (button) {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      var type = button.getAttribute('type');\n      result[\"\".concat(type, \"ButtonText\")] = button.innerHTML;\n      result[\"show\".concat(capitalizeFirstLetter(type), \"Button\")] = true;\n\n      if (button.hasAttribute('color')) {\n        result[\"\".concat(type, \"ButtonColor\")] = button.getAttribute('color');\n      }\n\n      if (button.hasAttribute('aria-label')) {\n        result[\"\".concat(type, \"ButtonAriaLabel\")] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  var getSwalImage = function getSwalImage(templateContent) {\n    var result = {};\n    var image = templateContent.querySelector('swal-image');\n\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n\n    return result;\n  };\n\n  var getSwalIcon = function getSwalIcon(templateContent) {\n    var result = {};\n    var icon = templateContent.querySelector('swal-icon');\n\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n\n      if (icon.hasAttribute('type')) {\n        result.icon = icon.getAttribute('type');\n      }\n\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n\n      result.iconHtml = icon.innerHTML;\n    }\n\n    return result;\n  };\n\n  var getSwalInput = function getSwalInput(templateContent) {\n    var result = {};\n    var input = templateContent.querySelector('swal-input');\n\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      result.input = input.getAttribute('type') || 'text';\n\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n\n    var inputOptions = templateContent.querySelectorAll('swal-input-option');\n\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      toArray(inputOptions).forEach(function (option) {\n        showWarningsForAttributes(option, ['value']);\n        var optionValue = option.getAttribute('value');\n        var optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n\n    return result;\n  };\n\n  var getSwalStringParams = function getSwalStringParams(templateContent, paramNames) {\n    var result = {};\n\n    for (var i in paramNames) {\n      var paramName = paramNames[i];\n      var tag = templateContent.querySelector(paramName);\n\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML;\n      }\n    }\n\n    return result;\n  };\n\n  var showWarningsForElements = function showWarningsForElements(template) {\n    var allowedElements = swalStringParams.concat(['swal-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    toArray(template.querySelectorAll('*')).forEach(function (el) {\n      var tagName = el.tagName.toLowerCase();\n\n      if (allowedElements.indexOf(tagName) === -1) {\n        warn(\"Unrecognized element <\".concat(tagName, \">\"));\n      }\n    });\n  };\n\n  var showWarningsForAttributes = function showWarningsForAttributes(el, allowedAttributes) {\n    toArray(el.attributes).forEach(function (attribute) {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([\"Unrecognized attribute \\\"\".concat(attribute.name, \"\\\" on <\").concat(el.tagName.toLowerCase(), \">.\"), \"\".concat(allowedAttributes.length ? \"Allowed attributes are: \".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);\n      }\n    });\n  };\n\n  var SHOW_CLASS_TIMEOUT = 10;\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param params\n   */\n\n  var openPopup = function openPopup(params) {\n    var container = getContainer();\n    var popup = getPopup();\n\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    } else if (typeof params.onBeforeOpen === 'function') {\n      params.onBeforeOpen(popup); // @deprecated\n    }\n\n    var bodyStyles = window.getComputedStyle(document.body);\n    var initialBodyOverflow = bodyStyles.overflowY;\n    addClasses$1(container, popup, params); // scrolling is 'hidden' until animation is done, after that 'auto'\n\n    setTimeout(function () {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n\n    runDidOpen(popup, params);\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  var runDidOpen = function runDidOpen(popup, params) {\n    if (typeof params.didOpen === 'function') {\n      setTimeout(function () {\n        return params.didOpen(popup);\n      });\n    } else if (typeof params.onOpen === 'function') {\n      setTimeout(function () {\n        return params.onOpen(popup);\n      }); // @deprecated\n    }\n  };\n\n  var swalOpenAnimationFinished = function swalOpenAnimationFinished(event) {\n    var popup = getPopup();\n\n    if (event.target !== popup) {\n      return;\n    }\n\n    var container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  var setScrollingVisibility = function setScrollingVisibility(container, popup) {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  var fixScrollContainer = function fixScrollContainer(container, scrollbarPadding, initialBodyOverflow) {\n    iOSfix();\n    IEfix();\n\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    } // sweetalert2/issues/1247\n\n\n    setTimeout(function () {\n      container.scrollTop = 0;\n    });\n  };\n\n  var addClasses$1 = function addClasses(container, popup, params) {\n    addClass(container, params.showClass.backdrop); // the workaround with setting/unsetting opacity is needed for #2019 and 2059\n\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup);\n    setTimeout(function () {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup); // and remove the opacity workaround\n\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].indexOf(params.input) !== -1 && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      handleInputValue(instance, params);\n    }\n  };\n  var getInputValue = function getInputValue(instance, innerParams) {\n    var input = instance.getInput();\n\n    if (!input) {\n      return null;\n    }\n\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n\n      case 'radio':\n        return getRadioValue(input);\n\n      case 'file':\n        return getFileValue(input);\n\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  var getCheckboxValue = function getCheckboxValue(input) {\n    return input.checked ? 1 : 0;\n  };\n\n  var getRadioValue = function getRadioValue(input) {\n    return input.checked ? input.value : null;\n  };\n\n  var getFileValue = function getFileValue(input) {\n    return input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n  };\n\n  var handleInputOptions = function handleInputOptions(instance, params) {\n    var content = getContent();\n\n    var processInputOptions = function processInputOptions(inputOptions) {\n      return populateInputOptions[params.input](content, formatInputOptions(inputOptions), params);\n    };\n\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading();\n      asPromise(params.inputOptions).then(function (inputOptions) {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (_typeof(params.inputOptions) === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(\"Unexpected type of inputOptions! Expected object, Map or Promise, got \".concat(_typeof(params.inputOptions)));\n    }\n  };\n\n  var handleInputValue = function handleInputValue(instance, params) {\n    var input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(function (inputValue) {\n      input.value = params.input === 'number' ? parseFloat(inputValue) || 0 : \"\".concat(inputValue);\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    })[\"catch\"](function (err) {\n      error(\"Error in inputValue promise: \".concat(err));\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n\n  var populateInputOptions = {\n    select: function select(content, inputOptions, params) {\n      var select = getChildByClass(content, swalClasses.select);\n\n      var renderOption = function renderOption(parent, optionLabel, optionValue) {\n        var option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n\n      inputOptions.forEach(function (inputOption) {\n        var optionValue = inputOption[0];\n        var optionLabel = inputOption[1]; // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          var optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n\n          select.appendChild(optgroup);\n          optionLabel.forEach(function (o) {\n            return renderOption(optgroup, o[1], o[0]);\n          });\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    radio: function radio(content, inputOptions, params) {\n      var radio = getChildByClass(content, swalClasses.radio);\n      inputOptions.forEach(function (inputOption) {\n        var radioValue = inputOption[0];\n        var radioLabel = inputOption[1];\n        var radioInput = document.createElement('input');\n        var radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n\n        var label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      var radios = radio.querySelectorAll('input');\n\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   * @param inputOptions\n   */\n\n  var formatInputOptions = function formatInputOptions(inputOptions) {\n    var result = [];\n\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach(function (value, key) {\n        var valueFormatted = value;\n\n        if (_typeof(valueFormatted) === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(function (key) {\n        var valueFormatted = inputOptions[key];\n\n        if (_typeof(valueFormatted) === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n\n        result.push([key, valueFormatted]);\n      });\n    }\n\n    return result;\n  };\n\n  var isSelected = function isSelected(optionValue, inputValue) {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  var handleConfirmButtonClick = function handleConfirmButtonClick(instance, innerParams) {\n    instance.disableButtons();\n\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, innerParams, 'confirm');\n    } else {\n      confirm(instance, innerParams, true);\n    }\n  };\n  var handleDenyButtonClick = function handleDenyButtonClick(instance, innerParams) {\n    instance.disableButtons();\n\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, innerParams, 'deny');\n    } else {\n      deny(instance, innerParams, false);\n    }\n  };\n  var handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  var handleConfirmOrDenyWithInput = function handleConfirmOrDenyWithInput(instance, innerParams, type\n  /* type is either 'confirm' or 'deny' */\n  ) {\n    var inputValue = getInputValue(instance, innerParams);\n\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, innerParams, inputValue);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, innerParams, inputValue);\n    } else {\n      confirm(instance, innerParams, inputValue);\n    }\n  };\n\n  var handleInputValidator = function handleInputValidator(instance, innerParams, inputValue) {\n    instance.disableInput();\n    var validationPromise = Promise.resolve().then(function () {\n      return asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage));\n    });\n    validationPromise.then(function (validationMessage) {\n      instance.enableButtons();\n      instance.enableInput();\n\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else {\n        confirm(instance, innerParams, inputValue);\n      }\n    });\n  };\n\n  var deny = function deny(instance, innerParams, value) {\n    if (innerParams.preDeny) {\n      var preDenyPromise = Promise.resolve().then(function () {\n        return asPromise(innerParams.preDeny(value, innerParams.validationMessage));\n      });\n      preDenyPromise.then(function (preDenyValue) {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n        } else {\n          instance.closePopup({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      });\n    } else {\n      instance.closePopup({\n        isDenied: true,\n        value: value\n      });\n    }\n  };\n\n  var succeedWith = function succeedWith(instance, value) {\n    instance.closePopup({\n      isConfirmed: true,\n      value: value\n    });\n  };\n\n  var confirm = function confirm(instance, innerParams, value) {\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading(); // TODO: make showLoading an *instance* method\n    }\n\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      var preConfirmPromise = Promise.resolve().then(function () {\n        return asPromise(innerParams.preConfirm(value, innerParams.validationMessage));\n      });\n      preConfirmPromise.then(function (preConfirmValue) {\n        if (isVisible(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      });\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  var addKeydownHandler = function addKeydownHandler(instance, globalState, innerParams, dismissWith) {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n\n    if (!innerParams.toast) {\n      globalState.keydownHandler = function (e) {\n        return keydownHandler(instance, e, dismissWith);\n      };\n\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  }; // Focus handling\n\n  var setFocus = function setFocus(innerParams, index, increment) {\n    var focusableElements = getFocusableElements(); // search for visible elements and select the next possible match\n\n    if (focusableElements.length) {\n      index = index + increment; // rollover to first item\n\n      if (index === focusableElements.length) {\n        index = 0; // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n\n      return focusableElements[index].focus();\n    } // no visible focusable elements, focus the popup\n\n\n    getPopup().focus();\n  };\n  var arrowKeysNextButton = ['ArrowRight', 'ArrowDown', 'Right', 'Down' // IE11\n  ];\n  var arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp', 'Left', 'Up' // IE11\n  ];\n  var escKeys = ['Escape', 'Esc' // IE11\n  ];\n\n  var keydownHandler = function keydownHandler(instance, e, dismissWith) {\n    var innerParams = privateProps.innerParams.get(instance);\n\n    if (innerParams.stopKeydownPropagation) {\n      e.stopPropagation();\n    } // ENTER\n\n\n    if (e.key === 'Enter') {\n      handleEnter(instance, e, innerParams); // TAB\n    } else if (e.key === 'Tab') {\n      handleTab(e, innerParams); // ARROWS - switch focus between buttons\n    } else if ([].concat(arrowKeysNextButton, arrowKeysPreviousButton).indexOf(e.key) !== -1) {\n      handleArrows(e.key); // ESC\n    } else if (escKeys.indexOf(e.key) !== -1) {\n      handleEsc(e, innerParams, dismissWith);\n    }\n  };\n\n  var handleEnter = function handleEnter(instance, e, innerParams) {\n    // #720 #721\n    if (e.isComposing) {\n      return;\n    }\n\n    if (e.target && instance.getInput() && e.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].indexOf(innerParams.input) !== -1) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      e.preventDefault();\n    }\n  };\n\n  var handleTab = function handleTab(e, innerParams) {\n    var targetElement = e.target;\n    var focusableElements = getFocusableElements();\n    var btnIndex = -1;\n\n    for (var i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    if (!e.shiftKey) {\n      // Cycle to the next button\n      setFocus(innerParams, btnIndex, 1);\n    } else {\n      // Cycle to the prev button\n      setFocus(innerParams, btnIndex, -1);\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  var handleArrows = function handleArrows(key) {\n    var confirmButton = getConfirmButton();\n    var denyButton = getDenyButton();\n    var cancelButton = getCancelButton();\n\n    if (!([confirmButton, denyButton, cancelButton].indexOf(document.activeElement) !== -1)) {\n      return;\n    }\n\n    var sibling = arrowKeysNextButton.indexOf(key) !== -1 ? 'nextElementSibling' : 'previousElementSibling';\n    var buttonToFocus = document.activeElement[sibling];\n\n    if (buttonToFocus) {\n      buttonToFocus.focus();\n    }\n  };\n\n  var handleEsc = function handleEsc(e, innerParams, dismissWith) {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      e.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  var handlePopupClick = function handlePopupClick(instance, domCache, dismissWith) {\n    var innerParams = privateProps.innerParams.get(instance);\n\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\n\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n\n  var handleToastClick = function handleToastClick(instance, domCache, dismissWith) {\n    // Closing toast by internal click\n    domCache.popup.onclick = function () {\n      var innerParams = privateProps.innerParams.get(instance);\n\n      if (innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton || innerParams.timer || innerParams.input) {\n        return;\n      }\n\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  var ignoreOutsideClick = false;\n\n  var handleModalMousedown = function handleModalMousedown(domCache) {\n    domCache.popup.onmousedown = function () {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  var handleContainerMousedown = function handleContainerMousedown(domCache) {\n    domCache.container.onmousedown = function () {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\n\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n\n  var handleModalClick = function handleModalClick(instance, domCache, dismissWith) {\n    domCache.container.onclick = function (e) {\n      var innerParams = privateProps.innerParams.get(instance);\n\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  function _main(userParams) {\n    var mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    showWarningsForParams(_extends({}, mixinParams, userParams));\n\n    if (globalState.currentInstance) {\n      globalState.currentInstance._destroy();\n    }\n\n    globalState.currentInstance = this;\n    var innerParams = prepareParams(userParams, mixinParams);\n    setParameters(innerParams);\n    Object.freeze(innerParams); // clear the previous timer\n\n    if (globalState.timeout) {\n      globalState.timeout.stop();\n      delete globalState.timeout;\n    } // clear the restore focus timeout\n\n\n    clearTimeout(globalState.restoreFocusTimeout);\n    var domCache = populateDomCache(this);\n    render(this, innerParams);\n    privateProps.innerParams.set(this, innerParams);\n    return swalPromise(this, domCache, innerParams);\n  }\n\n  var prepareParams = function prepareParams(userParams, mixinParams) {\n    var templateParams = getTemplateParams(userParams);\n\n    var showClass = _extends({}, defaultParams.showClass, mixinParams.showClass, templateParams.showClass, userParams.showClass);\n\n    var hideClass = _extends({}, defaultParams.hideClass, mixinParams.hideClass, templateParams.hideClass, userParams.hideClass);\n\n    var params = _extends({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n\n\n    params.showClass = showClass;\n    params.hideClass = hideClass; // @deprecated\n\n    if (userParams.animation === false) {\n      params.showClass = {\n        popup: 'swal2-noanimation',\n        backdrop: 'swal2-noanimation'\n      };\n      params.hideClass = {};\n    }\n\n    return params;\n  };\n\n  var swalPromise = function swalPromise(instance, domCache, innerParams) {\n    return new Promise(function (resolve) {\n      // functions to handle all closings/dismissals\n      var dismissWith = function dismissWith(dismiss) {\n        instance.closePopup({\n          isDismissed: true,\n          dismiss: dismiss\n        });\n      };\n\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n\n      domCache.confirmButton.onclick = function () {\n        return handleConfirmButtonClick(instance, innerParams);\n      };\n\n      domCache.denyButton.onclick = function () {\n        return handleDenyButtonClick(instance, innerParams);\n      };\n\n      domCache.cancelButton.onclick = function () {\n        return handleCancelButtonClick(instance, dismissWith);\n      };\n\n      domCache.closeButton.onclick = function () {\n        return dismissWith(DismissReason.close);\n      };\n\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n\n      if (innerParams.toast && (innerParams.input || innerParams.footer || innerParams.showCloseButton)) {\n        addClass(document.body, swalClasses['toast-column']);\n      } else {\n        removeClass(document.body, swalClasses['toast-column']);\n      }\n\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams); // Scroll container to top on open (#1247, #1946)\n\n      setTimeout(function () {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  var populateDomCache = function populateDomCache(instance) {\n    var domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      content: getContent(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  var setupTimer = function setupTimer(globalState$$1, innerParams, dismissWith) {\n    var timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n\n    if (innerParams.timer) {\n      globalState$$1.timeout = new Timer(function () {\n        dismissWith('timer');\n        delete globalState$$1.timeout;\n      }, innerParams.timer);\n\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        setTimeout(function () {\n          if (globalState$$1.timeout && globalState$$1.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  var initFocus = function initFocus(domCache, innerParams) {\n    if (innerParams.toast) {\n      return;\n    }\n\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return blurActiveElement();\n    }\n\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(innerParams, -1, 1);\n    }\n  };\n\n  var focusButton = function focusButton(domCache, innerParams) {\n    if (innerParams.focusDeny && isVisible(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n\n    if (innerParams.focusCancel && isVisible(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n\n    if (innerParams.focusConfirm && isVisible(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  var blurActiveElement = function blurActiveElement() {\n    if (document.activeElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   */\n\n  function update(params) {\n    var popup = getPopup();\n    var innerParams = privateProps.innerParams.get(this);\n\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      return warn(\"You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.\");\n    }\n\n    var validUpdatableParams = {}; // assign valid params from `params` to `defaults`\n\n    Object.keys(params).forEach(function (param) {\n      if (Swal.isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(\"Invalid parameter to update: \\\"\".concat(param, \"\\\". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\\n\\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md\"));\n      }\n    });\n\n    var updatedParams = _extends({}, innerParams, validUpdatableParams);\n\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: _extends({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  function _destroy() {\n    var domCache = privateProps.domCache.get(this);\n    var innerParams = privateProps.innerParams.get(this);\n\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    } // Check if there is another Swal closing\n\n\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    } // Check if there is a swal disposal defer timer\n\n\n    if (globalState.deferDisposalTimer) {\n      clearTimeout(globalState.deferDisposalTimer);\n      delete globalState.deferDisposalTimer;\n    }\n\n    runDidDestroy(innerParams);\n    disposeSwal(this);\n  }\n\n  var runDidDestroy = function runDidDestroy(innerParams) {\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    } else if (typeof innerParams.onDestroy === 'function') {\n      innerParams.onDestroy(); // @deprecated\n    }\n  };\n\n  var disposeSwal = function disposeSwal(instance) {\n    // Unset this.params so GC will dispose it (#1569)\n    delete instance.params; // Unset globalState props so GC will dispose globalState (#1569)\n\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget; // Unset WeakMaps so GC will be able to dispose them (#1569)\n\n    unsetWeakMaps(privateProps);\n    unsetWeakMaps(privateMethods);\n  };\n\n  var unsetWeakMaps = function unsetWeakMaps(obj) {\n    for (var i in obj) {\n      obj[i] = new WeakMap();\n    }\n  };\n\n\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    hideLoading: hideLoading,\n    disableLoading: hideLoading,\n    getInput: getInput$1,\n    close: close,\n    closePopup: close,\n    closeModal: close,\n    closeToast: close,\n    enableButtons: enableButtons,\n    disableButtons: disableButtons,\n    enableInput: enableInput,\n    disableInput: disableInput,\n    showValidationMessage: showValidationMessage,\n    resetValidationMessage: resetValidationMessage$1,\n    getProgressSteps: getProgressSteps$1,\n    _main: _main,\n    update: update,\n    _destroy: _destroy\n  });\n\n  var currentInstance;\n\n  var SweetAlert = /*#__PURE__*/function () {\n    function SweetAlert() {\n      _classCallCheck(this, SweetAlert);\n\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      } // Check for the existence of Promise\n\n\n      if (typeof Promise === 'undefined') {\n        error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');\n      }\n\n      currentInstance = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      var promise = this._main(this.params);\n\n      privateProps.promise.set(this, promise);\n    } // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n\n\n    _createClass(SweetAlert, [{\n      key: \"then\",\n      value: function then(onFulfilled) {\n        var promise = privateProps.promise.get(this);\n        return promise.then(onFulfilled);\n      }\n    }, {\n      key: \"finally\",\n      value: function _finally(onFinally) {\n        var promise = privateProps.promise.get(this);\n        return promise[\"finally\"](onFinally);\n      }\n    }]);\n\n    return SweetAlert;\n  }(); // Assign instance methods from src/instanceMethods/*.js to prototype\n\n\n  _extends(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\n\n\n  _extends(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\n\n\n  Object.keys(instanceMethods).forEach(function (key) {\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        var _currentInstance;\n\n        return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '10.13.0';\n\n  var Swal = SweetAlert;\n  Swal[\"default\"] = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\n\n/***/ }),\n\n/***/ \"QJFE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export SwalComponent */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SwalDirective; });\n/* unused harmony export SwalPortalDirective */\n/* unused harmony export SwalPortalTargets */\n/* unused harmony export SweetAlert2LoaderService */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return SweetAlert2Module; });\n/* unused harmony export ɵa */\n/* unused harmony export ɵb */\n/* unused harmony export ɵc */\n/* unused harmony export ɵd */\n/* unused harmony export ɵe */\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"mrSG\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"fXoL\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"XNiG\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"1G5W\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"ofXK\");\n\n\n\n\n\n\n\nfunction SwalPortalComponent_ng_container_0_Template(rf, ctx) {\n    if (rf & 1) {\n        _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵelementContainer */ \"Nb\"](0);\n    }\n}\nconst swalProviderToken = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* InjectionToken */ \"r\"]('@sweetalert2/ngx-sweetalert2#swalProvider');\nconst fireOnInitToken = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* InjectionToken */ \"r\"]('@sweetalert2/ngx-sweetalert2#fireOnInit');\nconst dismissOnDestroyToken = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* InjectionToken */ \"r\"]('@sweetalert2/ngx-sweetalert2#dismissOnDestroy');\nlet SweetAlert2LoaderService = /*@__PURE__*/ (() => {\n    class SweetAlert2LoaderService {\n        // Using any because Angular metadata generator does not understand a pure TS type here\n        constructor(swalProvider) {\n            this.swalProvider = swalProvider;\n        }\n        get swal() {\n            if (!this.swalPromiseCache) {\n                this.preloadSweetAlertLibrary();\n            }\n            return this.swalPromiseCache;\n        }\n        preloadSweetAlertLibrary() {\n            if (this.swalPromiseCache)\n                return;\n            const libPromise = isLoader(this.swalProvider)\n                ? this.swalProvider()\n                : Promise.resolve(this.swalProvider);\n            this.swalPromiseCache = libPromise.then(value => isDefaultExport(value) ? value : value.default);\n            function isLoader(value) {\n                return typeof value === 'function' && value.version === undefined;\n            }\n            function isDefaultExport(value) {\n                return typeof value === 'function';\n            }\n        }\n    }\n    SweetAlert2LoaderService.ɵfac = function SweetAlert2LoaderService_Factory(t) { return new (t || SweetAlert2LoaderService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵinject */ \"Yb\"](swalProviderToken)); };\n    SweetAlert2LoaderService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Hb\"]({ token: SweetAlert2LoaderService, factory: SweetAlert2LoaderService.ɵfac });\n    return SweetAlert2LoaderService;\n})();\nlet SwalComponent = /*@__PURE__*/ (() => {\n    class SwalComponent {\n        constructor(sweetAlert2Loader, moduleLevelFireOnInit, moduleLevelDismissOnDestroy) {\n            this.sweetAlert2Loader = sweetAlert2Loader;\n            this.moduleLevelFireOnInit = moduleLevelFireOnInit;\n            this.moduleLevelDismissOnDestroy = moduleLevelDismissOnDestroy;\n            /**\n             * Modal lifecycle hook. Synchronously runs before the modal is shown on screen.\n             */\n            this.willOpen = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Modal lifecycle hook. Synchronously runs before the modal is shown on screen.\n             */\n            this.didOpen = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Modal lifecycle hook. Synchronously runs after the popup DOM has been updated (ie. just before the modal is\n             * repainted on the screen).\n             * Typically, this will happen after `Swal.fire()` or `Swal.update()`.\n             * If you want to perform changes in the popup's DOM, that survive `Swal.update()`, prefer {@link didRender} over\n             * {@link willOpen}.\n             */\n            this.didRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Modal lifecycle hook. Synchronously runs when the popup closes by user interaction (and not due to another popup\n             * being fired).\n             */\n            this.willClose = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Modal lifecycle hook. Asynchronously runs after the popup has been disposed by user interaction (and not due to\n             * another popup being fired).\n             */\n            this.didClose = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Modal lifecycle hook. Synchronously runs after popup has been destroyed either by user interaction or by another\n             * popup.\n             * If you have cleanup operations that you need to reliably execute each time a modal is closed, prefer\n             * {@link didDestroy} over {@link didClose}.\n             */\n            this.didDestroy = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Emits when the user clicks \"Confirm\".\n             * The event value ($event) can be either:\n             *  - by default, just `true`,\n             *  - when using {@link input}, the input value,\n             *  - when using {@link preConfirm}, the return value of this function.\n             *\n             * Example:\n             *     <swal (confirm)=\"handleConfirm($event)\"></swal>\n             *\n             *     public handleConfirm(email: string): void {\n             *         // ... save user email\n             *     }\n             */\n            this.confirm = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Emits when the user clicks \"Deny\".\n             * This event bears no value.\n             * Use `(deny)` (along with {@link showDenyButton}) when you want a modal with three buttons (confirm, deny and\n             * cancel), and/or when you want to handle clear refusal in a separate way than simple dismissal.\n             *\n             * Example:\n             *     <swal (deny)=\"handleDeny()\"></swal>\n             *\n             *     public handleDeny(): void {\n             *     }\n             */\n            this.deny = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Emits when the user clicks \"Cancel\", or dismisses the modal by any other allowed way.\n             * The event value ($event) is a string that explains how the modal was dismissed. It is `undefined` when\n             * the modal was programmatically closed (through {@link close} for example).\n             *\n             * Example:\n             *     <swal (dismiss)=\"handleDismiss($event)\"></swal>\n             *\n             *     public handleDismiss(reason: DismissReason | undefined): void {\n             *         // reason can be 'cancel', 'overlay', 'close', 'timer' or undefined.\n             *         // ... do something\n             *     }\n             */\n            this.dismiss = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * This Set retains the properties that have been changed from @Inputs, so we can know precisely\n             * what options we have to send to {@link Swal.fire}.\n             */\n            this.touchedProps = new Set();\n            /**\n             * A function of signature `(propName: string): void` that adds a given property name to the list of\n             * touched properties, ie. {@link touchedProps}.\n             */\n            this.markTouched = this.touchedProps.add.bind(this.touchedProps);\n            /**\n             * Is the SweetAlert2 modal represented by this component currently opened?\n             */\n            this.isCurrentlyShown = false;\n        }\n        /**\n         * An object of SweetAlert2 native options, useful if:\n         *  - you don't want to use the @Inputs for practical/philosophical reasons ;\n         *  - there are missing @Inputs because ngx-sweetalert2 isn't up-to-date with SweetAlert2's latest changes.\n         *\n         * /!\\ Please note that setting this property does NOT erase what has been set before unless you specify the\n         *     previous properties you want to erase again.\n         *     Ie. setting { title: 'Title' } and then { text: 'Text' } will give { title: 'Title', text: 'Text' }.\n         *\n         * /!\\ Be aware that the options defined in this object will override the @Inputs of the same name.\n         */\n        set swalOptions(options) {\n            //=> Update properties\n            Object.assign(this, options);\n            //=> Mark changed properties as touched\n            const touchedKeys = Object.keys(options);\n            touchedKeys.forEach(this.markTouched);\n        }\n        /**\n         * Computes the options object that will get passed to SweetAlert2.\n         * Only the properties that have been set at least once on this component will be returned.\n         * Mostly for internal usage.\n         */\n        get swalOptions() {\n            //=> We will compute the options object based on the option keys that are known to have changed.\n            //   That avoids passing a gigantic object to SweetAlert2, making debugging easier and potentially\n            //   avoiding side effects.\n            return [...this.touchedProps].reduce((obj, key) => (Object.assign(Object.assign({}, obj), { [key]: this[key] })), {});\n        }\n        set swalVisible(visible) {\n            visible ? this.fire() : this.close();\n        }\n        get swalVisible() {\n            return this.isCurrentlyShown;\n        }\n        /**\n         * Angular lifecycle hook.\n         * Asks the SweetAlert2 loader service to preload the SweetAlert2 library, so it begins to be loaded only if there\n         * is a <swal> component somewhere, and is probably fully loaded when the modal has to be displayed,\n         * causing no delay.\n         */\n        ngOnInit() {\n            //=> Preload SweetAlert2 library in case this component is activated.\n            this.sweetAlert2Loader.preloadSweetAlertLibrary();\n        }\n        /**\n         * Angular lifecycle hook.\n         * Fires the modal, if the component or module is configured to do so.\n         */\n        ngAfterViewInit() {\n            const fireOnInit = this.swalFireOnInit === undefined\n                ? this.moduleLevelFireOnInit\n                : this.swalFireOnInit;\n            fireOnInit && this.fire();\n        }\n        /**\n         * Angular lifecycle hook.\n         * Updates the SweetAlert options, and if the modal is opened, asks SweetAlert to render it again.\n         */\n        ngOnChanges(changes) {\n            //=> For each changed @Input that matches a SweetAlert2 option, mark as touched so we can\n            //   send it with the next fire() or update() calls.\n            Object.keys(changes)\n                //=> If the filtering logic becomes more complex here, we can use Swal.isValidParameter\n                .filter((key) => !key.startsWith('swal'))\n                .forEach(this.markTouched);\n            //=> Eventually trigger re-render if the modal is open.\n            void this.update();\n        }\n        /**\n         * Angular lifecycle hook.\n         * Closes the SweetAlert when the component is destroyed.\n         */\n        ngOnDestroy() {\n            //=> Release the modal if the component is destroyed and if that behaviour is not disabled.\n            const dismissOnDestroy = this.swalDismissOnDestroy === undefined\n                ? this.moduleLevelDismissOnDestroy\n                : this.swalDismissOnDestroy;\n            dismissOnDestroy && this.close();\n        }\n        /**\n         * Shows the SweetAlert.\n         *\n         * Returns the SweetAlert2 promise for convenience and use in code behind templates.\n         * Otherwise, (confirm)=\"myHandler($event)\" and (dismiss)=\"myHandler($event)\" can be used in templates.\n         */\n        fire() {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function* () {\n                const swal = yield this.sweetAlert2Loader.swal;\n                const userOptions = this.swalOptions;\n                //=> Build the SweetAlert2 options\n                const options = Object.assign(Object.assign({}, userOptions), {\n                    //=> Handle modal lifecycle events\n                    willOpen: composeHook(userOptions.willOpen, (modalElement) => {\n                        this.willOpen.emit({ modalElement });\n                    }), didOpen: composeHook(userOptions.didOpen, (modalElement) => {\n                        this.isCurrentlyShown = true;\n                        this.didOpen.emit({ modalElement });\n                    }), didRender: composeHook(userOptions.didRender, (modalElement) => {\n                        this.didRender.emit({ modalElement });\n                    }), willClose: composeHook(userOptions.willClose, (modalElement) => {\n                        this.isCurrentlyShown = false;\n                        this.willClose.emit({ modalElement });\n                    }), didClose: composeHook(userOptions.didClose, () => {\n                        this.didClose.emit();\n                    }), didDestroy: composeHook(userOptions.didDestroy, () => {\n                        this.didDestroy.emit();\n                    })\n                });\n                //=> Show the Swal! And wait for confirmation or dimissal.\n                const result = yield swal.fire(options);\n                //=> Emit on (confirm), (deny) or (dismiss)\n                switch (true) {\n                    case result.isConfirmed:\n                        this.confirm.emit(result.value);\n                        break;\n                    case result.isDenied:\n                        this.deny.emit();\n                        break;\n                    case result.isDismissed:\n                        this.dismiss.emit(result.dismiss);\n                        break;\n                }\n                return result;\n                function composeHook(userHook, libHook) {\n                    return (...args) => (libHook(...args), userHook === null || userHook === void 0 ? void 0 : userHook(...args));\n                }\n            });\n        }\n        /**\n         * Closes the modal, if opened.\n         *\n         * @param result The value that the modal will resolve with, triggering either (confirm), (deny) or (dismiss).\n         *               If the argument is not passed, it is (dismiss) that will emit an `undefined` reason.\n         *               {@see Swal.close}.\n         */\n        close(result) {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function* () {\n                if (!this.isCurrentlyShown)\n                    return;\n                const swal = yield this.sweetAlert2Loader.swal;\n                swal.close(result);\n            });\n        }\n        /**\n         * Updates SweetAlert2 options while the modal is opened, causing the modal to re-render.\n         * If the modal is not opened, the component options will simply be updated and that's it.\n         *\n         * /!\\ Please note that not all SweetAlert2 options are updatable while the modal is opened.\n         *\n         * @param options\n         */\n        update(options) {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function* () {\n                if (options) {\n                    this.swalOptions = options;\n                }\n                if (!this.isCurrentlyShown)\n                    return;\n                const swal = yield this.sweetAlert2Loader.swal;\n                const allOptions = this.swalOptions;\n                const updatableOptions = Object.keys(allOptions)\n                    .filter(swal.isUpdatableParameter)\n                    .reduce((obj, key) => (Object.assign(Object.assign({}, obj), { [key]: allOptions[key] })), {});\n                swal.update(updatableOptions);\n            });\n        }\n    }\n    SwalComponent.ɵfac = function SwalComponent_Factory(t) { return new (t || SwalComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](SweetAlert2LoaderService), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](fireOnInitToken), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](dismissOnDestroyToken)); };\n    SwalComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineComponent */ \"Fb\"]({ type: SwalComponent, selectors: [[\"swal\"]], inputs: { swalOptions: \"swalOptions\", swalVisible: \"swalVisible\", title: \"title\", titleText: \"titleText\", text: \"text\", html: \"html\", footer: \"footer\", icon: \"icon\", iconColor: \"iconColor\", iconHtml: \"iconHtml\", backdrop: \"backdrop\", toast: \"toast\", target: \"target\", input: \"input\", width: \"width\", padding: \"padding\", background: \"background\", position: \"position\", grow: \"grow\", showClass: \"showClass\", hideClass: \"hideClass\", customClass: \"customClass\", timer: \"timer\", timerProgressBar: \"timerProgressBar\", animation: \"animation\", heightAuto: \"heightAuto\", allowOutsideClick: \"allowOutsideClick\", allowEscapeKey: \"allowEscapeKey\", allowEnterKey: \"allowEnterKey\", stopKeydownPropagation: \"stopKeydownPropagation\", keydownListenerCapture: \"keydownListenerCapture\", showConfirmButton: \"showConfirmButton\", showDenyButton: \"showDenyButton\", showCancelButton: \"showCancelButton\", confirmButtonText: \"confirmButtonText\", denyButtonText: \"denyButtonText\", cancelButtonText: \"cancelButtonText\", confirmButtonColor: \"confirmButtonColor\", denyButtonColor: \"denyButtonColor\", cancelButtonColor: \"cancelButtonColor\", confirmButtonAriaLabel: \"confirmButtonAriaLabel\", denyButtonAriaLabel: \"denyButtonAriaLabel\", cancelButtonAriaLabel: \"cancelButtonAriaLabel\", buttonsStyling: \"buttonsStyling\", reverseButtons: \"reverseButtons\", focusConfirm: \"focusConfirm\", focusDeny: \"focusDeny\", focusCancel: \"focusCancel\", showCloseButton: \"showCloseButton\", closeButtonHtml: \"closeButtonHtml\", closeButtonAriaLabel: \"closeButtonAriaLabel\", loaderHtml: \"loaderHtml\", showLoaderOnConfirm: \"showLoaderOnConfirm\", preConfirm: \"preConfirm\", preDeny: \"preDeny\", imageUrl: \"imageUrl\", imageWidth: \"imageWidth\", imageHeight: \"imageHeight\", imageAlt: \"imageAlt\", inputLabel: \"inputLabel\", inputPlaceholder: \"inputPlaceholder\", inputValue: \"inputValue\", inputOptions: \"inputOptions\", inputAutoTrim: \"inputAutoTrim\", inputAttributes: \"inputAttributes\", inputValidator: \"inputValidator\", returnInputValueOnDeny: \"returnInputValueOnDeny\", validationMessage: \"validationMessage\", progressSteps: \"progressSteps\", currentProgressStep: \"currentProgressStep\", progressStepsDistance: \"progressStepsDistance\", scrollbarPadding: \"scrollbarPadding\", swalFireOnInit: \"swalFireOnInit\", swalDismissOnDestroy: \"swalDismissOnDestroy\" }, outputs: { willOpen: \"willOpen\", didOpen: \"didOpen\", didRender: \"didRender\", willClose: \"willClose\", didClose: \"didClose\", didDestroy: \"didDestroy\", confirm: \"confirm\", deny: \"deny\", dismiss: \"dismiss\" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵNgOnChangesFeature */ \"wb\"]], decls: 0, vars: 0, template: function SwalComponent_Template(rf, ctx) { }, encapsulation: 2, changeDetection: 0 });\n    return SwalComponent;\n})();\nlet SwalDirective = /*@__PURE__*/ (() => {\n    class SwalDirective {\n        constructor(viewContainerRef, resolver) {\n            this.viewContainerRef = viewContainerRef;\n            this.resolver = resolver;\n            /**\n             * Emits when the user clicks \"Confirm\".\n             * The event value ($event) can be either:\n             *  - by default, just `true`,\n             *  - when using {@link input}, the input value,\n             *  - when using {@link preConfirm}, the return value of this function.\n             *\n             * Example:\n             *     <swal (confirm)=\"handleConfirm($event)\"></swal>\n             *\n             *     public handleConfirm(email: string): void {\n             *         // ... save user email\n             *     }\n             */\n            this.confirm = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Emits when the user clicks \"Deny\".\n             * This event bears no value.\n             * Use `(deny)` (along with {@link showDenyButton}) when you want a modal with three buttons (confirm, deny and\n             * cancel), and/or when you want to handle clear refusal in a separate way than simple dismissal.\n             *\n             * Example:\n             *     <swal (deny)=\"handleDeny()\"></swal>\n             *\n             *     public handleDeny(): void {\n             *     }\n             */\n            this.deny = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n            /**\n             * Emits when the user clicks \"Cancel\", or dismisses the modal by any other allowed way.\n             * The event value ($event) is a string that explains how the modal was dismissed. It is `undefined` when\n             * the modal was programmatically closed (through {@link dismiss} for example).\n             *\n             * Example:\n             *     <swal (dismiss)=\"handleDismiss($event)\"></swal>\n             *\n             *     public handleDismiss(reason: DismissReason | undefined): void {\n             *         // reason can be 'cancel', 'overlay', 'close', 'timer' or undefined.\n             *         // ... do something\n             *     }\n             */\n            this.dismiss = new _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* EventEmitter */ \"n\"]();\n        }\n        /**\n         * SweetAlert2 options or a SwalComponent instance.\n         * See the class doc block for more informations.\n         */\n        set swal(options) {\n            if (options instanceof SwalComponent) {\n                this.swalInstance = options;\n            }\n            else if (isArrayOptions(options)) {\n                this.swalOptions = {};\n                [this.swalOptions.title, this.swalOptions.text, this.swalOptions.icon] = options;\n            }\n            else {\n                this.swalOptions = options;\n            }\n            function isArrayOptions(value) {\n                return Array.isArray(options);\n            }\n        }\n        /**\n         * OnInit lifecycle handler.\n         * Creates a SwalComponent instance if the user didn't provided one and binds on that component (confirm),\n         * (deny) and (dismiss) outputs to reemit on the directive.\n         */\n        ngOnInit() {\n            if (!this.swalInstance) {\n                const factory = this.resolver.resolveComponentFactory(SwalComponent);\n                this.swalRef = this.viewContainerRef.createComponent(factory);\n                this.swalInstance = this.swalRef.instance;\n            }\n        }\n        /**\n         * OnDestroy lifecycle handler.\n         * Destroys the dynamically-created SwalComponent.\n         */\n        ngOnDestroy() {\n            if (this.swalRef) {\n                this.swalRef.destroy();\n            }\n        }\n        /**\n         * Click handler.\n         * The directive listens for onclick events on its host element.\n         * When this happens, it shows the <swal> attached to this directive.\n         */\n        onClick(event) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            if (!this.swalInstance)\n                return;\n            if (this.swalOptions) {\n                this.swalInstance.swalOptions = this.swalOptions;\n            }\n            const swalClosed = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n            this.swalInstance.confirm.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(swalClosed)).subscribe(v => this.confirm.emit(v));\n            this.swalInstance.deny.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(swalClosed)).subscribe(v => this.deny.emit(v));\n            this.swalInstance.dismiss.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(swalClosed)).subscribe(v => this.dismiss.emit(v));\n            this.swalInstance.fire().then(() => swalClosed.next());\n        }\n    }\n    SwalDirective.ɵfac = function SwalDirective_Factory(t) { return new (t || SwalDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ViewContainerRef */ \"P\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ComponentFactoryResolver */ \"j\"])); };\n    SwalDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineDirective */ \"Gb\"]({ type: SwalDirective, selectors: [[\"\", \"swal\", \"\"]], hostBindings: function SwalDirective_HostBindings(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵlistener */ \"bc\"](\"click\", function SwalDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });\n            }\n        }, inputs: { swal: \"swal\" }, outputs: { confirm: \"confirm\", deny: \"deny\", dismiss: \"dismiss\" } });\n    return SwalDirective;\n})();\nlet SwalPortalTargets = /*@__PURE__*/ (() => {\n    class SwalPortalTargets {\n        constructor() {\n            /**\n             * Targets the modal close button block contents.\n             */\n            this.closeButton = {\n                element: swal => swal.getCloseButton(),\n                options: { showCloseButton: true }\n            };\n            /**\n             * Targets the modal title block contents.\n             */\n            this.title = {\n                element: swal => swal.getTitle(),\n                // Empty text that will never be shown but necessary so SweetAlert2 makes the div visible.\n                options: { title: ' ' }\n            };\n            /**\n             * Targets the modal text block contents (that is another block inside the first content block, so you can still\n             * use other modal features like Swal inputs, that are situated inside that parent content block).\n             */\n            this.content = {\n                element: swal => swal.getHtmlContainer(),\n                // Empty text that will never be shown but necessary so SweetAlert2 makes the div visible.\n                options: { text: ' ' }\n            };\n            /**\n             * Targets the actions block contents, where are the confirm and cancel buttons in a normal time.\n             * /!\\ WARNING: using this target destroys some of the native SweetAlert2 modal's DOM, therefore, if you use this\n             *     target, do not update the modal via <swal> @Inputs while the modal is open, or you'll get an error.\n             *     We could workaround that inconvenient inside this integration, but that'd be detrimental to memory and\n             *     performance of everyone, for a relatively rare use case.\n             */\n            this.actions = {\n                element: swal => swal.getActions(),\n                // The button will never exist, but SweetAlert2 shows the actions block only if there is at least one button.\n                options: { showConfirmButton: true }\n            };\n            /**\n             * Targets the confirm button contents, replacing the text inside it (not the button itself)\n             */\n            this.confirmButton = {\n                element: swal => swal.getConfirmButton(),\n                options: { showConfirmButton: true }\n            };\n            /**\n             * Targets the deny button contents, replacing the text inside it (not the button itself)\n             */\n            this.denyButton = {\n                element: swal => swal.getDenyButton(),\n                options: { showDenyButton: true }\n            };\n            /**\n             * Targets the cancel button contents, replacing the text inside it (not the button itself)\n             */\n            this.cancelButton = {\n                element: swal => swal.getCancelButton(),\n                options: { showCancelButton: true }\n            };\n            /**\n             * Targets the modal footer contents.\n             */\n            this.footer = {\n                element: swal => swal.getFooter(),\n                // Empty text that will never be shown but necessary so SweetAlert2 makes the div visible.\n                options: { footer: ' ' }\n            };\n        }\n    }\n    SwalPortalTargets.ɵfac = function SwalPortalTargets_Factory(t) { return new (t || SwalPortalTargets)(); };\n    SwalPortalTargets.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjectable */ \"Hb\"])({ factory: function SwalPortalTargets_Factory() { return new SwalPortalTargets(); }, token: SwalPortalTargets, providedIn: \"root\" });\n    return SwalPortalTargets;\n})();\nlet SwalPortalComponent = /*@__PURE__*/ (() => {\n    class SwalPortalComponent {\n        constructor() {\n            this.template = null;\n        }\n    }\n    SwalPortalComponent.ɵfac = function SwalPortalComponent_Factory(t) { return new (t || SwalPortalComponent)(); };\n    SwalPortalComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineComponent */ \"Fb\"]({ type: SwalPortalComponent, selectors: [[\"swal-portal\"]], inputs: { template: \"template\" }, decls: 1, vars: 1, consts: [[4, \"ngTemplateOutlet\"]], template: function SwalPortalComponent_Template(rf, ctx) {\n            if (rf & 1) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵtemplate */ \"Gc\"](0, SwalPortalComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n            }\n            if (rf & 2) {\n                _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵproperty */ \"jc\"](\"ngTemplateOutlet\", ctx.template);\n            }\n        }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* NgTemplateOutlet */ \"p\"]], encapsulation: 2, changeDetection: 0 });\n    return SwalPortalComponent;\n})();\nlet SwalPortalDirective = /*@__PURE__*/ (() => {\n    class SwalPortalDirective {\n        constructor(resolver, injector, app, templateRef, sweetAlert2Loader, swalTargets, swalComponent) {\n            this.resolver = resolver;\n            this.injector = injector;\n            this.app = app;\n            this.templateRef = templateRef;\n            this.sweetAlert2Loader = sweetAlert2Loader;\n            this.swalTargets = swalTargets;\n            this.swalComponent = swalComponent;\n            this.destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_2__[/* Subject */ \"a\"]();\n        }\n        /**\n         * Subscribes to the the SweetAlert appearance/disappearance events to create/destroy the SwalPortalComponent\n         * that will receive the consumer's template.\n         */\n        ngOnInit() {\n            // Can't be set in a default property value, if the customer lets *swalPortal empty, the value we get is undef.\n            this.target = this.target || this.swalTargets.content;\n            //=> Apply the options provided by the target definition\n            void this.swalComponent.update(this.target.options);\n            //=> Subscribe to a few hooks frm the parent SwalComponent.\n            this.swalComponent.didRender.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(this.destroyed)).subscribe(this.didRenderHook.bind(this));\n            this.swalComponent.willOpen.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(this.destroyed)).subscribe(this.willOpenHook.bind(this));\n            this.swalComponent.didDestroy.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[/* takeUntil */ \"a\"])(this.destroyed)).subscribe(this.didDestroyHook.bind(this));\n        }\n        /**\n         * Signal any {@link destroyed} consumer that this is over, so they can unsubscribe from the\n         * parent SwalComponent events.\n         */\n        ngOnDestroy() {\n            this.destroyed.next();\n        }\n        /**\n         * This didRender hook runs 1..n times (per modal instance), just before the modal is shown (and also before the\n         * {@link willOpenHook}), or after Swal.update() is called.\n         * This is a good place to render, or re-render, our portal contents.\n         */\n        didRenderHook() {\n            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __awaiter */ \"b\"])(this, void 0, void 0, function* () {\n                //=> Ensure the portal component is created\n                if (!this.portalComponentRef) {\n                    this.portalComponentRef = this.createPortalComponent();\n                }\n                //=> SweetAlert2 created the modal or just erased all of our content, so we need to install/reinstall it.\n                // Swal.update() is synchronous, this observable too, and mountComponentOnTarget too (the promise inside\n                // this function is already resolved at this point), so the whole process of re-rendering and re-mounting\n                // the portal component is fully synchronous, causing no blinks in the modal contents.\n                const swal = yield this.sweetAlert2Loader.swal;\n                //=> Find target element\n                const targetEl = this.target.element(swal);\n                if (!targetEl)\n                    return;\n                //=> Replace target's contents with our component\n                // https://jsperf.com/innerhtml-vs-removechild/15\n                while (targetEl.firstChild) {\n                    targetEl.removeChild(targetEl.firstChild);\n                }\n                targetEl.appendChild(this.portalComponentRef.location.nativeElement);\n            });\n        }\n        /**\n         * This willOpen hook runs once (per modal instance), just before the modal is shown on the screen.\n         * This is a good place to declare our detached view to the Angular app.\n         */\n        willOpenHook() {\n            if (!this.portalComponentRef)\n                return;\n            //=> Make the Angular app aware of that detached view so rendering and change detection can happen\n            this.app.attachView(this.portalComponentRef.hostView);\n        }\n        /**\n         * This didDestroy hook runs once (per modal instance), just after the modal closing animation terminated.\n         * This is a good place to detach and destroy our content, that is not visible anymore.\n         */\n        didDestroyHook() {\n            if (!this.portalComponentRef)\n                return;\n            //=> Detach the portal component from the app and destroy it\n            this.app.detachView(this.portalComponentRef.hostView);\n            this.portalComponentRef.destroy();\n            this.portalComponentRef = void 0;\n        }\n        /**\n         * Creates the {@link SwalPortalComponent} and gives it the customer's template ref.\n         */\n        createPortalComponent() {\n            //=> Create the SwalPortalComponent that will hold our content\n            const factory = this.resolver.resolveComponentFactory(SwalPortalComponent);\n            // Yes, we do not use the third argument that would directly use the target as the component's view\n            // (unfortunately, because that would give a cleaner DOM and would avoid dirty and direct DOM manipulations)\n            // That's because we want to keep our component safe from SweetAlert2's operations on the DOM, and to be\n            // able to restore it at any moment, ie. after the modal has been re-rendered.\n            const componentRef = factory.create(this.injector, []);\n            //=> Apply the consumer's template on the component\n            componentRef.instance.template = this.templateRef;\n            return componentRef;\n        }\n    }\n    SwalPortalDirective.ɵfac = function SwalPortalDirective_Factory(t) { return new (t || SwalPortalDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ComponentFactoryResolver */ \"j\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* Injector */ \"s\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ApplicationRef */ \"g\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](_angular_core__WEBPACK_IMPORTED_MODULE_1__[/* TemplateRef */ \"L\"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](SweetAlert2LoaderService), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](SwalPortalTargets), _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdirectiveInject */ \"Lb\"](SwalComponent, 1)); };\n    SwalPortalDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineDirective */ \"Gb\"]({ type: SwalPortalDirective, selectors: [[\"\", \"swalPortal\", \"\"]], inputs: { target: [\"swalPortal\", \"target\"] } });\n    return SwalPortalDirective;\n})();\nfunction provideDefaultSwal() {\n    return Promise.resolve(/* import() */).then(__webpack_require__.t.bind(null, \"PSD3\", 7));\n}\nlet SweetAlert2Module = /*@__PURE__*/ (() => {\n    class SweetAlert2Module {\n        static forRoot(options = {}) {\n            return {\n                ngModule: SweetAlert2Module,\n                providers: [\n                    SweetAlert2LoaderService,\n                    { provide: swalProviderToken, useValue: options.provideSwal || provideDefaultSwal },\n                    { provide: fireOnInitToken, useValue: options.fireOnInit || false },\n                    { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy || true }\n                ]\n            };\n        }\n        static forChild(options = {}) {\n            return {\n                ngModule: SweetAlert2Module,\n                providers: [\n                    ...options.provideSwal ? [\n                        SweetAlert2LoaderService,\n                        { provide: swalProviderToken, useValue: options.provideSwal }\n                    ] : [],\n                    ...options.fireOnInit !== undefined ? [\n                        { provide: fireOnInitToken, useValue: options.fireOnInit }\n                    ] : [],\n                    ...options.dismissOnDestroy !== undefined ? [\n                        { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy }\n                    ] : []\n                ]\n            };\n        }\n    }\n    SweetAlert2Module.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineNgModule */ \"Jb\"]({ type: SweetAlert2Module });\n    SweetAlert2Module.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵdefineInjector */ \"Ib\"]({ factory: function SweetAlert2Module_Factory(t) { return new (t || SweetAlert2Module)(); }, imports: [[\n                _angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]\n            ]] });\n    return SweetAlert2Module;\n})();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__[/* ɵɵsetNgModuleScope */ \"Ac\"](SweetAlert2Module, { declarations: function () { return [SwalDirective, SwalComponent, SwalPortalDirective, SwalPortalComponent]; }, imports: function () { return [_angular_common__WEBPACK_IMPORTED_MODULE_4__[/* CommonModule */ \"c\"]]; }, exports: function () { return [SwalComponent, SwalPortalDirective, SwalDirective]; } }); })();\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=sweetalert2-ngx-sweetalert2.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":null}