import { __decorate } from "tslib";
import { Component, Input } from '@angular/core';
import { animate, trigger, style, transition, keyframes, state } from '@angular/animations';
import * as ɵngcc0 from '@angular/core';
let TagRipple = class TagRipple {
    constructor() {
        this.state = 'none';
    }
};
TagRipple.ɵfac = function TagRipple_Factory(t) { return new (t || TagRipple)(); };
TagRipple.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TagRipple, selectors: [["tag-ripple"]], inputs: { state: "state" }, decls: 1, vars: 1, consts: [[1, "tag-ripple"]], template: function TagRipple_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("@ink", ctx.state);
    } }, styles: ["[_nghost-%COMP%] {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple[_ngcontent-%COMP%] {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }"], data: { animation: [
            trigger('ink', [
                state('none', style({ width: 0, opacity: 0 })),
                transition('none => clicked', [
                    animate(300, keyframes([
                        style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),
                        style({ opacity: 1, offset: 0.5, width: '50%' }),
                        style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })
                    ]))
                ])
            ])
        ] } });
__decorate([
    Input()
], TagRipple.prototype, "state", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TagRipple, [{
        type: Component,
        args: [{
                selector: 'tag-ripple',
                template: `
        <div class="tag-ripple" [@ink]="state"></div>
    `,
                animations: [
                    trigger('ink', [
                        state('none', style({ width: 0, opacity: 0 })),
                        transition('none => clicked', [
                            animate(300, keyframes([
                                style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),
                                style({ opacity: 1, offset: 0.5, width: '50%' }),
                                style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })
                            ]))
                        ])
                    ])
                ],
                styles: [`
        :host {
            width: 100%;
            height: 100%;
            left: 0;
            overflow: hidden;
            position: absolute;
        }

        .tag-ripple {
            background: rgba(0, 0, 0, 0.1);
            top: 50%;
            left: 50%;
            height: 100%;
            transform: translate(-50%, -50%);
            position: absolute;
        }
    `]
            }]
    }], function () { return []; }, { state: [{
            type: Input
        }] }); })();
export { TagRipple };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLXJpcHBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5neC1jaGlwcy9jb21wb25lbnRzL3RhZy90YWctcmlwcGxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxLQUFLLEVBQ1IsTUFBTSxlQUFlLENBQUM7QUFHdkIsT0FBTyxFQUNILE9BQU8sRUFDUCxPQUFPLEVBQ1AsS0FBSyxFQUNMLFVBQVUsRUFDVixTQUFTLEVBQ1QsS0FBSyxFQUNSLE1BQU0scUJBQXFCLENBQUM7O0FBc0M3QixJQUFhLFNBQVMsR0FBdEIsTUFBYSxTQUFTO0FBQ3RCLElBREE7QUFBZ0IsUUFDSSxVQUFLLEdBQUcsTUFBTSxDQUFDO0FBQ25DLElBQUEsQ0FBQztBQUNELENBREM7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBQUE7QUFEWTtBQUFhLElBQXJCLEtBQUssRUFBRTtBQUFDLHdDQUFzQjtBQUR0QixTQUFTLG9CQXBDckIsU0FBUyxDQUFDLFVBQ1AsUUFBUSxFQUFFO0dBQVksVUFtQnRCLFFBQVEsRUFBRTs7O0VBRVQsVUFDRCxVQUFVLEVBQUU7VUFDUixPQUFPLENBQUMsS0FBSyxFQUFFLGtCQUNYLEtBQUssQ0FBQztDQUFNLEVBQUU7Q0FBSyxDQUFDLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFDLENBQUMsQ0FBQztnQkFDNUMsVUFBVSxDQUFDO09BQWlCLEVBQUUsc0JBQzFCLE9BQU8sQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDO1FBQ25CLEtBQUssQ0FBQyxFQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFO1NBQVksRUFBRSxNQUFNLEVBQUMsQ0FBQywwQkFDbEUsS0FBSyxDQUFDO0NBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUMsQ0FBQywwQkFDOUMsS0FBSyxDQUFDLEVBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFO0dBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBQyxDQUFDLHNCQUN4RSxDQUFDLENBQUMsa0JBQ04sQ0FBQztXQUNMLENBQUMsVUFDTCxtQkFoQ1E7Ozs7Ozs7Ozs7Ozs7OzttQkFpQlIsT0FnQkosQ0FBQyxJQUNXLFNBQVMsQ0FFckI7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsU0FIWSxTQUFTO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBDb21wb25lbnQsXG4gICAgSW5wdXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuaW1wb3J0IHtcbiAgICBhbmltYXRlLFxuICAgIHRyaWdnZXIsXG4gICAgc3R5bGUsXG4gICAgdHJhbnNpdGlvbixcbiAgICBrZXlmcmFtZXMsXG4gICAgc3RhdGVcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGFnLXJpcHBsZScsXG4gICAgc3R5bGVzOiBbYFxuICAgICAgICA6aG9zdCB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB9XG5cbiAgICAgICAgLnRhZy1yaXBwbGUge1xuICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgfVxuICAgIGBdLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXYgY2xhc3M9XCJ0YWctcmlwcGxlXCIgW0BpbmtdPVwic3RhdGVcIj48L2Rpdj5cbiAgICBgLFxuICAgIGFuaW1hdGlvbnM6IFtcbiAgICAgICAgdHJpZ2dlcignaW5rJywgW1xuICAgICAgICAgICAgc3RhdGUoJ25vbmUnLCBzdHlsZSh7d2lkdGg6IDAsIG9wYWNpdHk6IDB9KSksXG4gICAgICAgICAgICB0cmFuc2l0aW9uKCdub25lID0+IGNsaWNrZWQnLCBbXG4gICAgICAgICAgICAgICAgYW5pbWF0ZSgzMDAsIGtleWZyYW1lcyhbXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlKHtvcGFjaXR5OiAxLCBvZmZzZXQ6IDAsIHdpZHRoOiAnMzAlJywgYm9yZGVyUmFkaXVzOiAnMTAwJSd9KSxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUoe29wYWNpdHk6IDEsIG9mZnNldDogMC41LCB3aWR0aDogJzUwJSd9KSxcbiAgICAgICAgICAgICAgICAgICAgc3R5bGUoe29wYWNpdHk6IDAuNSwgb2Zmc2V0OiAxLCB3aWR0aDogJzEwMCUnLCBib3JkZXJSYWRpdXM6ICcxNnB4J30pXG4gICAgICAgICAgICAgICAgXSkpXG4gICAgICAgICAgICBdKVxuICAgICAgICBdKVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVGFnUmlwcGxlIHtcbiAgICBASW5wdXQoKSBwdWJsaWMgc3RhdGUgPSAnbm9uZSc7XG59XG4iXX0=